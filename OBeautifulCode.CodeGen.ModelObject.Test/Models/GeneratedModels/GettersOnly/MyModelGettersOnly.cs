// --------------------------------------------------------------------------------------------------------------------
// <copyright file="MyModelGettersOnly.cs" company="OBeautifulCode">
//   Copyright (c) OBeautifulCode 2018. All rights reserved.
// </copyright>
// <auto-generated>
//   Sourced OBeautifulCode.CodeGen.ModelObject.Test.CodeGeneratorTest.GenerateModel()
// </auto-generated>
// --------------------------------------------------------------------------------------------------------------------

namespace OBeautifulCode.CodeGen.ModelObject.Test
{
    using System;
    using System.Collections.Generic;

    using OBeautifulCode.Assertion.Recipes;
    using OBeautifulCode.Type;

    public partial class MyModelGettersOnly : IModelViaCodeGen
    {
        public MyModelGettersOnly(
            int intProperty,
            string stringProperty,
            ModelEquatableClass modelEquatableClassProperty,
            IReadOnlyList<int> readOnlyListOfIntProperty,
            IReadOnlyList<string> readOnlyListOfStringProperty,
            IReadOnlyList<ModelEquatableClass> readOnlyListOfModelEquatableClassProperty)
        {
            new { stringProperty }.AsArg().Must().NotBeNullNorWhiteSpace();
            new { modelEquatableClassProperty }.AsArg().Must().NotBeNull();
            new { readOnlyListOfIntProperty }.AsArg().Must().NotBeNullNorEmptyEnumerableNorContainAnyNulls();
            new { readOnlyListOfStringProperty }.AsArg().Must().NotBeNullNorEmptyEnumerableNorContainAnyNulls();
            new { readOnlyListOfModelEquatableClassProperty }.AsArg().Must().NotBeNullNorEmptyEnumerableNorContainAnyNulls();

            this.IntProperty = intProperty;
            this.StringProperty = stringProperty;
            this.ModelEquatableClassProperty = modelEquatableClassProperty;
            this.ReadOnlyListOfIntProperty = readOnlyListOfIntProperty;
            this.ReadOnlyListOfStringProperty = readOnlyListOfStringProperty;
            this.ReadOnlyListOfModelEquatableClassProperty = readOnlyListOfModelEquatableClassProperty;
        }

        public int IntProperty { get; }

        public string StringProperty { get; }

        public ModelEquatableClass ModelEquatableClassProperty { get; }

        public IReadOnlyList<int> ReadOnlyListOfIntProperty { get; }

        public IReadOnlyList<string> ReadOnlyListOfStringProperty { get; }

        public IReadOnlyList<ModelEquatableClass> ReadOnlyListOfModelEquatableClassProperty { get; }
    }
}