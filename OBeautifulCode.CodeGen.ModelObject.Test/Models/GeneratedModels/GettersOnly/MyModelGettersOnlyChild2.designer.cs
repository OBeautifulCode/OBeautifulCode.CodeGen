// --------------------------------------------------------------------------------------------------------------------
// <auto-generated>
//   Generated using OBeautifulCode.CodeGen.ModelObject (1.0.0.0)
// </auto-generated>
// --------------------------------------------------------------------------------------------------------------------

namespace OBeautifulCode.CodeGen.ModelObject.Test
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Diagnostics.CodeAnalysis;
    using System.Globalization;
    using System.Linq;

    using OBeautifulCode.Equality.Recipes;
    using OBeautifulCode.Type;

    using static System.FormattableString;

    [ExcludeFromCodeCoverage]
    [GeneratedCode("OBeautifulCode.CodeGen.ModelObject", "1.0.0.0")]
    public partial class MyModelGettersOnlyChild2 : IModel<MyModelGettersOnlyChild2>
    {
        /// <summary>
        /// Determines whether two objects of type <see cref="MyModelGettersOnlyChild2"/> are equal.
        /// </summary>
        /// <param name="left">The object to the left of the equality operator.</param>
        /// <param name="right">The object to the right of the equality operator.</param>
        /// <returns>true if the two items are equal; otherwise false.</returns>
        public static bool operator ==(MyModelGettersOnlyChild2 left, MyModelGettersOnlyChild2 right)
        {
            if (ReferenceEquals(left, right))
            {
                return true;
            }

            if (ReferenceEquals(left, null) || ReferenceEquals(right, null))
            {
                return false;
            }

            var result = left.ParentDateTimeProperty.Equals(right.ParentDateTimeProperty)
                      && left.ParentNullableDateTimeProperty.IsEqualTo(right.ParentNullableDateTimeProperty)
                      && left.ParentArrayOfDateTimeProperty.IsEqualTo(right.ParentArrayOfDateTimeProperty)
                      && left.ParentArrayOfNullableDateTimeProperty.IsEqualTo(right.ParentArrayOfNullableDateTimeProperty)
                      && left.ParentReadOnlyCollectionOfDateTimeProperty.IsEqualTo(right.ParentReadOnlyCollectionOfDateTimeProperty)
                      && left.ParentReadOnlyCollectionOfNullableDateTimeProperty.IsEqualTo(right.ParentReadOnlyCollectionOfNullableDateTimeProperty)
                      && left.ParentReadOnlyListOfDateTimeProperty.IsEqualTo(right.ParentReadOnlyListOfDateTimeProperty)
                      && left.ParentReadOnlyListOfNullableDateTimeProperty.IsEqualTo(right.ParentReadOnlyListOfNullableDateTimeProperty)
                      && left.ParentReadOnlyDictionaryOfDateTimeProperty.IsEqualTo(right.ParentReadOnlyDictionaryOfDateTimeProperty)
                      && left.ParentReadOnlyDictionaryOfNullableDateTimeProperty.IsEqualTo(right.ParentReadOnlyDictionaryOfNullableDateTimeProperty)
                      && left.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty.IsEqualTo(right.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty)
                      && left.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty.IsEqualTo(right.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty)
                      && left.Child2DateTimeProperty.Equals(right.Child2DateTimeProperty)
                      && left.Child2NullableDateTimeProperty.IsEqualTo(right.Child2NullableDateTimeProperty)
                      && left.Child2ArrayOfDateTimeProperty.IsEqualTo(right.Child2ArrayOfDateTimeProperty)
                      && left.Child2ArrayOfNullableDateTimeProperty.IsEqualTo(right.Child2ArrayOfNullableDateTimeProperty)
                      && left.Child2ReadOnlyCollectionOfDateTimeProperty.IsEqualTo(right.Child2ReadOnlyCollectionOfDateTimeProperty)
                      && left.Child2ReadOnlyCollectionOfNullableDateTimeProperty.IsEqualTo(right.Child2ReadOnlyCollectionOfNullableDateTimeProperty)
                      && left.Child2ReadOnlyListOfDateTimeProperty.IsEqualTo(right.Child2ReadOnlyListOfDateTimeProperty)
                      && left.Child2ReadOnlyListOfNullableDateTimeProperty.IsEqualTo(right.Child2ReadOnlyListOfNullableDateTimeProperty)
                      && left.Child2ReadOnlyDictionaryOfDateTimeProperty.IsEqualTo(right.Child2ReadOnlyDictionaryOfDateTimeProperty)
                      && left.Child2ReadOnlyDictionaryOfNullableDateTimeProperty.IsEqualTo(right.Child2ReadOnlyDictionaryOfNullableDateTimeProperty)
                      && left.Child2ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty.IsEqualTo(right.Child2ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty)
                      && left.Child2ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty.IsEqualTo(right.Child2ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty);

            return result;
        }

        /// <summary>
        /// Determines whether two objects of type <see cref="MyModelGettersOnlyChild2"/> are not equal.
        /// </summary>
        /// <param name="left">The object to the left of the equality operator.</param>
        /// <param name="right">The object to the right of the equality operator.</param>
        /// <returns>true if the two items not equal; otherwise false.</returns>
        public static bool operator !=(MyModelGettersOnlyChild2 left, MyModelGettersOnlyChild2 right) => !(left == right);

        /// <inheritdoc />
        public bool Equals(MyModelGettersOnlyChild2 other) => this == other;

        /// <inheritdoc />
        public override bool Equals(object obj) => this == (obj as MyModelGettersOnlyChild2);
    
        /// <inheritdoc />
        public override int GetHashCode() => HashCodeHelper.Initialize()
            .Hash(this.ParentDateTimeProperty)
            .Hash(this.ParentNullableDateTimeProperty)
            .Hash(this.ParentArrayOfDateTimeProperty)
            .Hash(this.ParentArrayOfNullableDateTimeProperty)
            .Hash(this.ParentReadOnlyCollectionOfDateTimeProperty)
            .Hash(this.ParentReadOnlyCollectionOfNullableDateTimeProperty)
            .Hash(this.ParentReadOnlyListOfDateTimeProperty)
            .Hash(this.ParentReadOnlyListOfNullableDateTimeProperty)
            .Hash(this.ParentReadOnlyDictionaryOfDateTimeProperty)
            .Hash(this.ParentReadOnlyDictionaryOfNullableDateTimeProperty)
            .Hash(this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty)
            .Hash(this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty)
            .Hash(this.Child2DateTimeProperty)
            .Hash(this.Child2NullableDateTimeProperty)
            .Hash(this.Child2ArrayOfDateTimeProperty)
            .Hash(this.Child2ArrayOfNullableDateTimeProperty)
            .Hash(this.Child2ReadOnlyCollectionOfDateTimeProperty)
            .Hash(this.Child2ReadOnlyCollectionOfNullableDateTimeProperty)
            .Hash(this.Child2ReadOnlyListOfDateTimeProperty)
            .Hash(this.Child2ReadOnlyListOfNullableDateTimeProperty)
            .Hash(this.Child2ReadOnlyDictionaryOfDateTimeProperty)
            .Hash(this.Child2ReadOnlyDictionaryOfNullableDateTimeProperty)
            .Hash(this.Child2ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty)
            .Hash(this.Child2ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty)
            .Value;
    
        /// <inheritdoc />
        public new object Clone() => this.DeepClone();

        /// <inheritdoc />
        public override MyModelGettersOnlyParent DeepClone()
        {
            var result = ((IDeepCloneable<MyModelGettersOnlyChild2>)this).DeepClone();

            return result;
        }

        /// <inheritdoc />
        MyModelGettersOnlyChild2 IDeepCloneable<MyModelGettersOnlyChild2>.DeepClone()
        {
            var result = new MyModelGettersOnlyChild2(
                                 this.ParentDateTimeProperty,
                                 this.ParentNullableDateTimeProperty,
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList(),
                                 this.Child2DateTimeProperty,
                                 this.Child2NullableDateTimeProperty,
                                 this.Child2ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child2ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child2ReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child2ReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child2ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.Child2ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList());

            return result;
        }

        /// <inheritdoc />
        public override MyModelGettersOnlyParent DeepCloneWithParentDateTimeProperty(DateTime parentDateTimeProperty)
        {
            var result = new MyModelGettersOnlyChild2(
                                 parentDateTimeProperty,
                                 this.ParentNullableDateTimeProperty,
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList(),
                                 this.Child2DateTimeProperty,
                                 this.Child2NullableDateTimeProperty,
                                 this.Child2ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child2ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child2ReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child2ReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child2ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.Child2ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList());
            
            return result;
        }

        /// <inheritdoc />
        public override MyModelGettersOnlyParent DeepCloneWithParentNullableDateTimeProperty(DateTime? parentNullableDateTimeProperty)
        {
            var result = new MyModelGettersOnlyChild2(
                                 this.ParentDateTimeProperty,
                                 parentNullableDateTimeProperty,
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList(),
                                 this.Child2DateTimeProperty,
                                 this.Child2NullableDateTimeProperty,
                                 this.Child2ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child2ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child2ReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child2ReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child2ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.Child2ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList());
            
            return result;
        }

        /// <inheritdoc />
        public override MyModelGettersOnlyParent DeepCloneWithParentArrayOfDateTimeProperty(DateTime[] parentArrayOfDateTimeProperty)
        {
            var result = new MyModelGettersOnlyChild2(
                                 this.ParentDateTimeProperty,
                                 this.ParentNullableDateTimeProperty,
                                 parentArrayOfDateTimeProperty,
                                 this.ParentArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList(),
                                 this.Child2DateTimeProperty,
                                 this.Child2NullableDateTimeProperty,
                                 this.Child2ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child2ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child2ReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child2ReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child2ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.Child2ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList());
            
            return result;
        }

        /// <inheritdoc />
        public override MyModelGettersOnlyParent DeepCloneWithParentArrayOfNullableDateTimeProperty(DateTime?[] parentArrayOfNullableDateTimeProperty)
        {
            var result = new MyModelGettersOnlyChild2(
                                 this.ParentDateTimeProperty,
                                 this.ParentNullableDateTimeProperty,
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 parentArrayOfNullableDateTimeProperty,
                                 this.ParentReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList(),
                                 this.Child2DateTimeProperty,
                                 this.Child2NullableDateTimeProperty,
                                 this.Child2ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child2ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child2ReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child2ReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child2ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.Child2ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList());
            
            return result;
        }

        /// <inheritdoc />
        public override MyModelGettersOnlyParent DeepCloneWithParentReadOnlyCollectionOfDateTimeProperty(IReadOnlyCollection<DateTime> parentReadOnlyCollectionOfDateTimeProperty)
        {
            var result = new MyModelGettersOnlyChild2(
                                 this.ParentDateTimeProperty,
                                 this.ParentNullableDateTimeProperty,
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 parentReadOnlyCollectionOfDateTimeProperty,
                                 this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList(),
                                 this.Child2DateTimeProperty,
                                 this.Child2NullableDateTimeProperty,
                                 this.Child2ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child2ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child2ReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child2ReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child2ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.Child2ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList());
            
            return result;
        }

        /// <inheritdoc />
        public override MyModelGettersOnlyParent DeepCloneWithParentReadOnlyCollectionOfNullableDateTimeProperty(IReadOnlyCollection<DateTime?> parentReadOnlyCollectionOfNullableDateTimeProperty)
        {
            var result = new MyModelGettersOnlyChild2(
                                 this.ParentDateTimeProperty,
                                 this.ParentNullableDateTimeProperty,
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 parentReadOnlyCollectionOfNullableDateTimeProperty,
                                 this.ParentReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList(),
                                 this.Child2DateTimeProperty,
                                 this.Child2NullableDateTimeProperty,
                                 this.Child2ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child2ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child2ReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child2ReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child2ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.Child2ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList());
            
            return result;
        }

        /// <inheritdoc />
        public override MyModelGettersOnlyParent DeepCloneWithParentReadOnlyListOfDateTimeProperty(IReadOnlyList<DateTime> parentReadOnlyListOfDateTimeProperty)
        {
            var result = new MyModelGettersOnlyChild2(
                                 this.ParentDateTimeProperty,
                                 this.ParentNullableDateTimeProperty,
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 parentReadOnlyListOfDateTimeProperty,
                                 this.ParentReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList(),
                                 this.Child2DateTimeProperty,
                                 this.Child2NullableDateTimeProperty,
                                 this.Child2ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child2ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child2ReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child2ReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child2ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.Child2ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList());
            
            return result;
        }

        /// <inheritdoc />
        public override MyModelGettersOnlyParent DeepCloneWithParentReadOnlyListOfNullableDateTimeProperty(IReadOnlyList<DateTime?> parentReadOnlyListOfNullableDateTimeProperty)
        {
            var result = new MyModelGettersOnlyChild2(
                                 this.ParentDateTimeProperty,
                                 this.ParentNullableDateTimeProperty,
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 parentReadOnlyListOfNullableDateTimeProperty,
                                 this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList(),
                                 this.Child2DateTimeProperty,
                                 this.Child2NullableDateTimeProperty,
                                 this.Child2ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child2ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child2ReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child2ReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child2ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.Child2ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList());
            
            return result;
        }

        /// <inheritdoc />
        public override MyModelGettersOnlyParent DeepCloneWithParentReadOnlyDictionaryOfDateTimeProperty(IReadOnlyDictionary<DateTime, DateTime> parentReadOnlyDictionaryOfDateTimeProperty)
        {
            var result = new MyModelGettersOnlyChild2(
                                 this.ParentDateTimeProperty,
                                 this.ParentNullableDateTimeProperty,
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 parentReadOnlyDictionaryOfDateTimeProperty,
                                 this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList(),
                                 this.Child2DateTimeProperty,
                                 this.Child2NullableDateTimeProperty,
                                 this.Child2ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child2ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child2ReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child2ReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child2ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.Child2ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList());
            
            return result;
        }

        /// <inheritdoc />
        public override MyModelGettersOnlyParent DeepCloneWithParentReadOnlyDictionaryOfNullableDateTimeProperty(IReadOnlyDictionary<DateTime?, DateTime?> parentReadOnlyDictionaryOfNullableDateTimeProperty)
        {
            var result = new MyModelGettersOnlyChild2(
                                 this.ParentDateTimeProperty,
                                 this.ParentNullableDateTimeProperty,
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 parentReadOnlyDictionaryOfNullableDateTimeProperty,
                                 this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList(),
                                 this.Child2DateTimeProperty,
                                 this.Child2NullableDateTimeProperty,
                                 this.Child2ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child2ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child2ReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child2ReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child2ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.Child2ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList());
            
            return result;
        }

        /// <inheritdoc />
        public override MyModelGettersOnlyParent DeepCloneWithParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty(IReadOnlyDictionary<string, IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>> parentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty)
        {
            var result = new MyModelGettersOnlyChild2(
                                 this.ParentDateTimeProperty,
                                 this.ParentNullableDateTimeProperty,
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 parentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty,
                                 this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList(),
                                 this.Child2DateTimeProperty,
                                 this.Child2NullableDateTimeProperty,
                                 this.Child2ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child2ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child2ReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child2ReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child2ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.Child2ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList());
            
            return result;
        }

        /// <inheritdoc />
        public override MyModelGettersOnlyParent DeepCloneWithParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty(IReadOnlyList<IReadOnlyDictionary<DateTime, IReadOnlyList<string>>> parentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty)
        {
            var result = new MyModelGettersOnlyChild2(
                                 this.ParentDateTimeProperty,
                                 this.ParentNullableDateTimeProperty,
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 parentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty,
                                 this.Child2DateTimeProperty,
                                 this.Child2NullableDateTimeProperty,
                                 this.Child2ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child2ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child2ReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child2ReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child2ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.Child2ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList());
            
            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2DateTimeProperty" />.
        /// </summary>
        /// <param name="child2DateTimeProperty">The new <see cref="Child2DateTimeProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="MyModelGettersOnlyChild2" /> using the specified <paramref name="child2DateTimeProperty" /> for <see cref="Child2DateTimeProperty" /> and a deep clone of every other property.</returns>
        public MyModelGettersOnlyChild2 DeepCloneWithChild2DateTimeProperty(DateTime child2DateTimeProperty)
        {
            var result = new MyModelGettersOnlyChild2(
                                 this.ParentDateTimeProperty,
                                 this.ParentNullableDateTimeProperty,
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList(),
                                 child2DateTimeProperty,
                                 this.Child2NullableDateTimeProperty,
                                 this.Child2ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child2ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child2ReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child2ReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child2ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.Child2ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList());
            
            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2NullableDateTimeProperty" />.
        /// </summary>
        /// <param name="child2NullableDateTimeProperty">The new <see cref="Child2NullableDateTimeProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="MyModelGettersOnlyChild2" /> using the specified <paramref name="child2NullableDateTimeProperty" /> for <see cref="Child2NullableDateTimeProperty" /> and a deep clone of every other property.</returns>
        public MyModelGettersOnlyChild2 DeepCloneWithChild2NullableDateTimeProperty(DateTime? child2NullableDateTimeProperty)
        {
            var result = new MyModelGettersOnlyChild2(
                                 this.ParentDateTimeProperty,
                                 this.ParentNullableDateTimeProperty,
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList(),
                                 this.Child2DateTimeProperty,
                                 child2NullableDateTimeProperty,
                                 this.Child2ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child2ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child2ReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child2ReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child2ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.Child2ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList());
            
            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2ArrayOfDateTimeProperty" />.
        /// </summary>
        /// <param name="child2ArrayOfDateTimeProperty">The new <see cref="Child2ArrayOfDateTimeProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="MyModelGettersOnlyChild2" /> using the specified <paramref name="child2ArrayOfDateTimeProperty" /> for <see cref="Child2ArrayOfDateTimeProperty" /> and a deep clone of every other property.</returns>
        public MyModelGettersOnlyChild2 DeepCloneWithChild2ArrayOfDateTimeProperty(DateTime[] child2ArrayOfDateTimeProperty)
        {
            var result = new MyModelGettersOnlyChild2(
                                 this.ParentDateTimeProperty,
                                 this.ParentNullableDateTimeProperty,
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList(),
                                 this.Child2DateTimeProperty,
                                 this.Child2NullableDateTimeProperty,
                                 child2ArrayOfDateTimeProperty,
                                 this.Child2ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child2ReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child2ReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child2ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.Child2ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList());
            
            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2ArrayOfNullableDateTimeProperty" />.
        /// </summary>
        /// <param name="child2ArrayOfNullableDateTimeProperty">The new <see cref="Child2ArrayOfNullableDateTimeProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="MyModelGettersOnlyChild2" /> using the specified <paramref name="child2ArrayOfNullableDateTimeProperty" /> for <see cref="Child2ArrayOfNullableDateTimeProperty" /> and a deep clone of every other property.</returns>
        public MyModelGettersOnlyChild2 DeepCloneWithChild2ArrayOfNullableDateTimeProperty(DateTime?[] child2ArrayOfNullableDateTimeProperty)
        {
            var result = new MyModelGettersOnlyChild2(
                                 this.ParentDateTimeProperty,
                                 this.ParentNullableDateTimeProperty,
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList(),
                                 this.Child2DateTimeProperty,
                                 this.Child2NullableDateTimeProperty,
                                 this.Child2ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 child2ArrayOfNullableDateTimeProperty,
                                 this.Child2ReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child2ReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child2ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.Child2ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList());
            
            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2ReadOnlyCollectionOfDateTimeProperty" />.
        /// </summary>
        /// <param name="child2ReadOnlyCollectionOfDateTimeProperty">The new <see cref="Child2ReadOnlyCollectionOfDateTimeProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="MyModelGettersOnlyChild2" /> using the specified <paramref name="child2ReadOnlyCollectionOfDateTimeProperty" /> for <see cref="Child2ReadOnlyCollectionOfDateTimeProperty" /> and a deep clone of every other property.</returns>
        public MyModelGettersOnlyChild2 DeepCloneWithChild2ReadOnlyCollectionOfDateTimeProperty(IReadOnlyCollection<DateTime> child2ReadOnlyCollectionOfDateTimeProperty)
        {
            var result = new MyModelGettersOnlyChild2(
                                 this.ParentDateTimeProperty,
                                 this.ParentNullableDateTimeProperty,
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList(),
                                 this.Child2DateTimeProperty,
                                 this.Child2NullableDateTimeProperty,
                                 this.Child2ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child2ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 child2ReadOnlyCollectionOfDateTimeProperty,
                                 this.Child2ReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child2ReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child2ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.Child2ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList());
            
            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2ReadOnlyCollectionOfNullableDateTimeProperty" />.
        /// </summary>
        /// <param name="child2ReadOnlyCollectionOfNullableDateTimeProperty">The new <see cref="Child2ReadOnlyCollectionOfNullableDateTimeProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="MyModelGettersOnlyChild2" /> using the specified <paramref name="child2ReadOnlyCollectionOfNullableDateTimeProperty" /> for <see cref="Child2ReadOnlyCollectionOfNullableDateTimeProperty" /> and a deep clone of every other property.</returns>
        public MyModelGettersOnlyChild2 DeepCloneWithChild2ReadOnlyCollectionOfNullableDateTimeProperty(IReadOnlyCollection<DateTime?> child2ReadOnlyCollectionOfNullableDateTimeProperty)
        {
            var result = new MyModelGettersOnlyChild2(
                                 this.ParentDateTimeProperty,
                                 this.ParentNullableDateTimeProperty,
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList(),
                                 this.Child2DateTimeProperty,
                                 this.Child2NullableDateTimeProperty,
                                 this.Child2ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child2ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child2ReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 child2ReadOnlyCollectionOfNullableDateTimeProperty,
                                 this.Child2ReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child2ReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child2ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.Child2ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList());
            
            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2ReadOnlyListOfDateTimeProperty" />.
        /// </summary>
        /// <param name="child2ReadOnlyListOfDateTimeProperty">The new <see cref="Child2ReadOnlyListOfDateTimeProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="MyModelGettersOnlyChild2" /> using the specified <paramref name="child2ReadOnlyListOfDateTimeProperty" /> for <see cref="Child2ReadOnlyListOfDateTimeProperty" /> and a deep clone of every other property.</returns>
        public MyModelGettersOnlyChild2 DeepCloneWithChild2ReadOnlyListOfDateTimeProperty(IReadOnlyList<DateTime> child2ReadOnlyListOfDateTimeProperty)
        {
            var result = new MyModelGettersOnlyChild2(
                                 this.ParentDateTimeProperty,
                                 this.ParentNullableDateTimeProperty,
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList(),
                                 this.Child2DateTimeProperty,
                                 this.Child2NullableDateTimeProperty,
                                 this.Child2ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child2ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child2ReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 child2ReadOnlyListOfDateTimeProperty,
                                 this.Child2ReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child2ReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child2ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.Child2ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList());
            
            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2ReadOnlyListOfNullableDateTimeProperty" />.
        /// </summary>
        /// <param name="child2ReadOnlyListOfNullableDateTimeProperty">The new <see cref="Child2ReadOnlyListOfNullableDateTimeProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="MyModelGettersOnlyChild2" /> using the specified <paramref name="child2ReadOnlyListOfNullableDateTimeProperty" /> for <see cref="Child2ReadOnlyListOfNullableDateTimeProperty" /> and a deep clone of every other property.</returns>
        public MyModelGettersOnlyChild2 DeepCloneWithChild2ReadOnlyListOfNullableDateTimeProperty(IReadOnlyList<DateTime?> child2ReadOnlyListOfNullableDateTimeProperty)
        {
            var result = new MyModelGettersOnlyChild2(
                                 this.ParentDateTimeProperty,
                                 this.ParentNullableDateTimeProperty,
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList(),
                                 this.Child2DateTimeProperty,
                                 this.Child2NullableDateTimeProperty,
                                 this.Child2ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child2ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child2ReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 child2ReadOnlyListOfNullableDateTimeProperty,
                                 this.Child2ReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child2ReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child2ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.Child2ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList());
            
            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2ReadOnlyDictionaryOfDateTimeProperty" />.
        /// </summary>
        /// <param name="child2ReadOnlyDictionaryOfDateTimeProperty">The new <see cref="Child2ReadOnlyDictionaryOfDateTimeProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="MyModelGettersOnlyChild2" /> using the specified <paramref name="child2ReadOnlyDictionaryOfDateTimeProperty" /> for <see cref="Child2ReadOnlyDictionaryOfDateTimeProperty" /> and a deep clone of every other property.</returns>
        public MyModelGettersOnlyChild2 DeepCloneWithChild2ReadOnlyDictionaryOfDateTimeProperty(IReadOnlyDictionary<DateTime, DateTime> child2ReadOnlyDictionaryOfDateTimeProperty)
        {
            var result = new MyModelGettersOnlyChild2(
                                 this.ParentDateTimeProperty,
                                 this.ParentNullableDateTimeProperty,
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList(),
                                 this.Child2DateTimeProperty,
                                 this.Child2NullableDateTimeProperty,
                                 this.Child2ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child2ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child2ReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 child2ReadOnlyDictionaryOfDateTimeProperty,
                                 this.Child2ReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child2ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.Child2ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList());
            
            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2ReadOnlyDictionaryOfNullableDateTimeProperty" />.
        /// </summary>
        /// <param name="child2ReadOnlyDictionaryOfNullableDateTimeProperty">The new <see cref="Child2ReadOnlyDictionaryOfNullableDateTimeProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="MyModelGettersOnlyChild2" /> using the specified <paramref name="child2ReadOnlyDictionaryOfNullableDateTimeProperty" /> for <see cref="Child2ReadOnlyDictionaryOfNullableDateTimeProperty" /> and a deep clone of every other property.</returns>
        public MyModelGettersOnlyChild2 DeepCloneWithChild2ReadOnlyDictionaryOfNullableDateTimeProperty(IReadOnlyDictionary<DateTime?, DateTime?> child2ReadOnlyDictionaryOfNullableDateTimeProperty)
        {
            var result = new MyModelGettersOnlyChild2(
                                 this.ParentDateTimeProperty,
                                 this.ParentNullableDateTimeProperty,
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList(),
                                 this.Child2DateTimeProperty,
                                 this.Child2NullableDateTimeProperty,
                                 this.Child2ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child2ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child2ReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 child2ReadOnlyDictionaryOfNullableDateTimeProperty,
                                 this.Child2ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.Child2ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList());
            
            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty" />.
        /// </summary>
        /// <param name="child2ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty">The new <see cref="Child2ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="MyModelGettersOnlyChild2" /> using the specified <paramref name="child2ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty" /> for <see cref="Child2ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty" /> and a deep clone of every other property.</returns>
        public MyModelGettersOnlyChild2 DeepCloneWithChild2ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty(IReadOnlyDictionary<string, IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>> child2ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty)
        {
            var result = new MyModelGettersOnlyChild2(
                                 this.ParentDateTimeProperty,
                                 this.ParentNullableDateTimeProperty,
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList(),
                                 this.Child2DateTimeProperty,
                                 this.Child2NullableDateTimeProperty,
                                 this.Child2ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child2ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child2ReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child2ReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 child2ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty,
                                 this.Child2ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList());
            
            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty" />.
        /// </summary>
        /// <param name="child2ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty">The new <see cref="Child2ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="MyModelGettersOnlyChild2" /> using the specified <paramref name="child2ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty" /> for <see cref="Child2ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty" /> and a deep clone of every other property.</returns>
        public MyModelGettersOnlyChild2 DeepCloneWithChild2ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty(IReadOnlyList<IReadOnlyDictionary<DateTime, IReadOnlyList<string>>> child2ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty)
        {
            var result = new MyModelGettersOnlyChild2(
                                 this.ParentDateTimeProperty,
                                 this.ParentNullableDateTimeProperty,
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList(),
                                 this.Child2DateTimeProperty,
                                 this.Child2NullableDateTimeProperty,
                                 this.Child2ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child2ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child2ReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child2ReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child2ReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child2ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 child2ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty);
            
            return result;
        }
    
        /// <inheritdoc />
        public override string ToString()
        {
            var result = Invariant($"{nameof(OBeautifulCode.CodeGen.ModelObject.Test)}.{nameof(MyModelGettersOnlyChild2)}: ParentDateTimeProperty = {this.ParentDateTimeProperty.ToString(CultureInfo.InvariantCulture) ?? "<null>"}, ParentNullableDateTimeProperty = {this.ParentNullableDateTimeProperty?.ToString() ?? "<null>"}, ParentArrayOfDateTimeProperty = {this.ParentArrayOfDateTimeProperty?.ToString() ?? "<null>"}, ParentArrayOfNullableDateTimeProperty = {this.ParentArrayOfNullableDateTimeProperty?.ToString() ?? "<null>"}, ParentReadOnlyCollectionOfDateTimeProperty = {this.ParentReadOnlyCollectionOfDateTimeProperty?.ToString() ?? "<null>"}, ParentReadOnlyCollectionOfNullableDateTimeProperty = {this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.ToString() ?? "<null>"}, ParentReadOnlyListOfDateTimeProperty = {this.ParentReadOnlyListOfDateTimeProperty?.ToString() ?? "<null>"}, ParentReadOnlyListOfNullableDateTimeProperty = {this.ParentReadOnlyListOfNullableDateTimeProperty?.ToString() ?? "<null>"}, ParentReadOnlyDictionaryOfDateTimeProperty = {this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToString() ?? "<null>"}, ParentReadOnlyDictionaryOfNullableDateTimeProperty = {this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToString() ?? "<null>"}, ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty = {this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToString() ?? "<null>"}, ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty = {this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToString() ?? "<null>"}, Child2DateTimeProperty = {this.Child2DateTimeProperty.ToString(CultureInfo.InvariantCulture) ?? "<null>"}, Child2NullableDateTimeProperty = {this.Child2NullableDateTimeProperty?.ToString() ?? "<null>"}, Child2ArrayOfDateTimeProperty = {this.Child2ArrayOfDateTimeProperty?.ToString() ?? "<null>"}, Child2ArrayOfNullableDateTimeProperty = {this.Child2ArrayOfNullableDateTimeProperty?.ToString() ?? "<null>"}, Child2ReadOnlyCollectionOfDateTimeProperty = {this.Child2ReadOnlyCollectionOfDateTimeProperty?.ToString() ?? "<null>"}, Child2ReadOnlyCollectionOfNullableDateTimeProperty = {this.Child2ReadOnlyCollectionOfNullableDateTimeProperty?.ToString() ?? "<null>"}, Child2ReadOnlyListOfDateTimeProperty = {this.Child2ReadOnlyListOfDateTimeProperty?.ToString() ?? "<null>"}, Child2ReadOnlyListOfNullableDateTimeProperty = {this.Child2ReadOnlyListOfNullableDateTimeProperty?.ToString() ?? "<null>"}, Child2ReadOnlyDictionaryOfDateTimeProperty = {this.Child2ReadOnlyDictionaryOfDateTimeProperty?.ToString() ?? "<null>"}, Child2ReadOnlyDictionaryOfNullableDateTimeProperty = {this.Child2ReadOnlyDictionaryOfNullableDateTimeProperty?.ToString() ?? "<null>"}, Child2ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty = {this.Child2ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToString() ?? "<null>"}, Child2ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty = {this.Child2ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToString() ?? "<null>"}.");

            return result;
        }
    }
}