// --------------------------------------------------------------------------------------------------------------------
// <auto-generated>
//   Generated using OBeautifulCode.CodeGen.ModelObject (1.0.0.0)
// </auto-generated>
// --------------------------------------------------------------------------------------------------------------------

namespace OBeautifulCode.CodeGen.ModelObject.Test
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Diagnostics.CodeAnalysis;
    using System.Globalization;
    using System.Linq;

    using OBeautifulCode.Equality.Recipes;
    using OBeautifulCode.Type;

    using static System.FormattableString;

    [ExcludeFromCodeCoverage]
    [GeneratedCode("OBeautifulCode.CodeGen.ModelObject", "1.0.0.0")]
    public partial class MyModelGettersOnlyChild1 : IModel<MyModelGettersOnlyChild1>
    {
        /// <summary>
        /// Determines whether two objects of type <see cref="MyModelGettersOnlyChild1"/> are equal.
        /// </summary>
        /// <param name="left">The object to the left of the equality operator.</param>
        /// <param name="right">The object to the right of the equality operator.</param>
        /// <returns>true if the two items are equal; otherwise false.</returns>
        public static bool operator ==(MyModelGettersOnlyChild1 left, MyModelGettersOnlyChild1 right)
        {
            if (ReferenceEquals(left, right))
            {
                return true;
            }

            if (ReferenceEquals(left, null) || ReferenceEquals(right, null))
            {
                return false;
            }

            var result = left.ParentDateTimeProperty.Equals(right.ParentDateTimeProperty)
                      && left.ParentNullableDateTimeProperty.IsEqualTo(right.ParentNullableDateTimeProperty)
                      && left.ParentArrayOfDateTimeProperty.IsEqualTo(right.ParentArrayOfDateTimeProperty)
                      && left.ParentArrayOfNullableDateTimeProperty.IsEqualTo(right.ParentArrayOfNullableDateTimeProperty)
                      && left.ParentReadOnlyCollectionOfDateTimeProperty.IsEqualTo(right.ParentReadOnlyCollectionOfDateTimeProperty)
                      && left.ParentReadOnlyCollectionOfNullableDateTimeProperty.IsEqualTo(right.ParentReadOnlyCollectionOfNullableDateTimeProperty)
                      && left.ParentReadOnlyListOfDateTimeProperty.IsEqualTo(right.ParentReadOnlyListOfDateTimeProperty)
                      && left.ParentReadOnlyListOfNullableDateTimeProperty.IsEqualTo(right.ParentReadOnlyListOfNullableDateTimeProperty)
                      && left.ParentReadOnlyDictionaryOfDateTimeProperty.IsEqualTo(right.ParentReadOnlyDictionaryOfDateTimeProperty)
                      && left.ParentReadOnlyDictionaryOfNullableDateTimeProperty.IsEqualTo(right.ParentReadOnlyDictionaryOfNullableDateTimeProperty)
                      && left.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty.IsEqualTo(right.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty)
                      && left.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty.IsEqualTo(right.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty)
                      && left.Child1DateTimeProperty.Equals(right.Child1DateTimeProperty)
                      && left.Child1NullableDateTimeProperty.IsEqualTo(right.Child1NullableDateTimeProperty)
                      && left.Child1ArrayOfDateTimeProperty.IsEqualTo(right.Child1ArrayOfDateTimeProperty)
                      && left.Child1ArrayOfNullableDateTimeProperty.IsEqualTo(right.Child1ArrayOfNullableDateTimeProperty)
                      && left.Child1ReadOnlyCollectionOfDateTimeProperty.IsEqualTo(right.Child1ReadOnlyCollectionOfDateTimeProperty)
                      && left.Child1ReadOnlyCollectionOfNullableDateTimeProperty.IsEqualTo(right.Child1ReadOnlyCollectionOfNullableDateTimeProperty)
                      && left.Child1ReadOnlyListOfDateTimeProperty.IsEqualTo(right.Child1ReadOnlyListOfDateTimeProperty)
                      && left.Child1ReadOnlyListOfNullableDateTimeProperty.IsEqualTo(right.Child1ReadOnlyListOfNullableDateTimeProperty)
                      && left.Child1ReadOnlyDictionaryOfDateTimeProperty.IsEqualTo(right.Child1ReadOnlyDictionaryOfDateTimeProperty)
                      && left.Child1ReadOnlyDictionaryOfNullableDateTimeProperty.IsEqualTo(right.Child1ReadOnlyDictionaryOfNullableDateTimeProperty)
                      && left.Child1ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty.IsEqualTo(right.Child1ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty)
                      && left.Child1ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty.IsEqualTo(right.Child1ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty);

            return result;
        }

        /// <summary>
        /// Determines whether two objects of type <see cref="MyModelGettersOnlyChild1"/> are not equal.
        /// </summary>
        /// <param name="left">The object to the left of the equality operator.</param>
        /// <param name="right">The object to the right of the equality operator.</param>
        /// <returns>true if the two items not equal; otherwise false.</returns>
        public static bool operator !=(MyModelGettersOnlyChild1 left, MyModelGettersOnlyChild1 right) => !(left == right);

        /// <inheritdoc />
        public bool Equals(MyModelGettersOnlyChild1 other) => this == other;

        /// <inheritdoc />
        public override bool Equals(object obj) => this == (obj as MyModelGettersOnlyChild1);
    
        /// <inheritdoc />
        public override int GetHashCode() => HashCodeHelper.Initialize()
            .Hash(this.ParentDateTimeProperty)
            .Hash(this.ParentNullableDateTimeProperty)
            .Hash(this.ParentArrayOfDateTimeProperty)
            .Hash(this.ParentArrayOfNullableDateTimeProperty)
            .Hash(this.ParentReadOnlyCollectionOfDateTimeProperty)
            .Hash(this.ParentReadOnlyCollectionOfNullableDateTimeProperty)
            .Hash(this.ParentReadOnlyListOfDateTimeProperty)
            .Hash(this.ParentReadOnlyListOfNullableDateTimeProperty)
            .Hash(this.ParentReadOnlyDictionaryOfDateTimeProperty)
            .Hash(this.ParentReadOnlyDictionaryOfNullableDateTimeProperty)
            .Hash(this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty)
            .Hash(this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty)
            .Hash(this.Child1DateTimeProperty)
            .Hash(this.Child1NullableDateTimeProperty)
            .Hash(this.Child1ArrayOfDateTimeProperty)
            .Hash(this.Child1ArrayOfNullableDateTimeProperty)
            .Hash(this.Child1ReadOnlyCollectionOfDateTimeProperty)
            .Hash(this.Child1ReadOnlyCollectionOfNullableDateTimeProperty)
            .Hash(this.Child1ReadOnlyListOfDateTimeProperty)
            .Hash(this.Child1ReadOnlyListOfNullableDateTimeProperty)
            .Hash(this.Child1ReadOnlyDictionaryOfDateTimeProperty)
            .Hash(this.Child1ReadOnlyDictionaryOfNullableDateTimeProperty)
            .Hash(this.Child1ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty)
            .Hash(this.Child1ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty)
            .Value;
    
        /// <inheritdoc />
        public new object Clone() => this.DeepClone();

        /// <inheritdoc />
        public override MyModelGettersOnlyParent DeepClone()
        {
            var result = ((IDeepCloneable<MyModelGettersOnlyChild1>)this).DeepClone();

            return result;
        }

        /// <inheritdoc />
        MyModelGettersOnlyChild1 IDeepCloneable<MyModelGettersOnlyChild1>.DeepClone()
        {
            var result = new MyModelGettersOnlyChild1(
                                 this.ParentDateTimeProperty,
                                 this.ParentNullableDateTimeProperty,
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList(),
                                 this.Child1DateTimeProperty,
                                 this.Child1NullableDateTimeProperty,
                                 this.Child1ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child1ReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child1ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.Child1ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList());

            return result;
        }

        /// <inheritdoc />
        public override MyModelGettersOnlyParent DeepCloneWithParentDateTimeProperty(DateTime parentDateTimeProperty)
        {
            var result = new MyModelGettersOnlyChild1(
                                 parentDateTimeProperty,
                                 this.ParentNullableDateTimeProperty,
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList(),
                                 this.Child1DateTimeProperty,
                                 this.Child1NullableDateTimeProperty,
                                 this.Child1ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child1ReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child1ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.Child1ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList());
            
            return result;
        }

        /// <inheritdoc />
        public override MyModelGettersOnlyParent DeepCloneWithParentNullableDateTimeProperty(DateTime? parentNullableDateTimeProperty)
        {
            var result = new MyModelGettersOnlyChild1(
                                 this.ParentDateTimeProperty,
                                 parentNullableDateTimeProperty,
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList(),
                                 this.Child1DateTimeProperty,
                                 this.Child1NullableDateTimeProperty,
                                 this.Child1ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child1ReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child1ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.Child1ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList());
            
            return result;
        }

        /// <inheritdoc />
        public override MyModelGettersOnlyParent DeepCloneWithParentArrayOfDateTimeProperty(DateTime[] parentArrayOfDateTimeProperty)
        {
            var result = new MyModelGettersOnlyChild1(
                                 this.ParentDateTimeProperty,
                                 this.ParentNullableDateTimeProperty,
                                 parentArrayOfDateTimeProperty,
                                 this.ParentArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList(),
                                 this.Child1DateTimeProperty,
                                 this.Child1NullableDateTimeProperty,
                                 this.Child1ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child1ReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child1ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.Child1ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList());
            
            return result;
        }

        /// <inheritdoc />
        public override MyModelGettersOnlyParent DeepCloneWithParentArrayOfNullableDateTimeProperty(DateTime?[] parentArrayOfNullableDateTimeProperty)
        {
            var result = new MyModelGettersOnlyChild1(
                                 this.ParentDateTimeProperty,
                                 this.ParentNullableDateTimeProperty,
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 parentArrayOfNullableDateTimeProperty,
                                 this.ParentReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList(),
                                 this.Child1DateTimeProperty,
                                 this.Child1NullableDateTimeProperty,
                                 this.Child1ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child1ReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child1ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.Child1ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList());
            
            return result;
        }

        /// <inheritdoc />
        public override MyModelGettersOnlyParent DeepCloneWithParentReadOnlyCollectionOfDateTimeProperty(IReadOnlyCollection<DateTime> parentReadOnlyCollectionOfDateTimeProperty)
        {
            var result = new MyModelGettersOnlyChild1(
                                 this.ParentDateTimeProperty,
                                 this.ParentNullableDateTimeProperty,
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 parentReadOnlyCollectionOfDateTimeProperty,
                                 this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList(),
                                 this.Child1DateTimeProperty,
                                 this.Child1NullableDateTimeProperty,
                                 this.Child1ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child1ReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child1ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.Child1ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList());
            
            return result;
        }

        /// <inheritdoc />
        public override MyModelGettersOnlyParent DeepCloneWithParentReadOnlyCollectionOfNullableDateTimeProperty(IReadOnlyCollection<DateTime?> parentReadOnlyCollectionOfNullableDateTimeProperty)
        {
            var result = new MyModelGettersOnlyChild1(
                                 this.ParentDateTimeProperty,
                                 this.ParentNullableDateTimeProperty,
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 parentReadOnlyCollectionOfNullableDateTimeProperty,
                                 this.ParentReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList(),
                                 this.Child1DateTimeProperty,
                                 this.Child1NullableDateTimeProperty,
                                 this.Child1ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child1ReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child1ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.Child1ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList());
            
            return result;
        }

        /// <inheritdoc />
        public override MyModelGettersOnlyParent DeepCloneWithParentReadOnlyListOfDateTimeProperty(IReadOnlyList<DateTime> parentReadOnlyListOfDateTimeProperty)
        {
            var result = new MyModelGettersOnlyChild1(
                                 this.ParentDateTimeProperty,
                                 this.ParentNullableDateTimeProperty,
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 parentReadOnlyListOfDateTimeProperty,
                                 this.ParentReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList(),
                                 this.Child1DateTimeProperty,
                                 this.Child1NullableDateTimeProperty,
                                 this.Child1ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child1ReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child1ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.Child1ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList());
            
            return result;
        }

        /// <inheritdoc />
        public override MyModelGettersOnlyParent DeepCloneWithParentReadOnlyListOfNullableDateTimeProperty(IReadOnlyList<DateTime?> parentReadOnlyListOfNullableDateTimeProperty)
        {
            var result = new MyModelGettersOnlyChild1(
                                 this.ParentDateTimeProperty,
                                 this.ParentNullableDateTimeProperty,
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 parentReadOnlyListOfNullableDateTimeProperty,
                                 this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList(),
                                 this.Child1DateTimeProperty,
                                 this.Child1NullableDateTimeProperty,
                                 this.Child1ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child1ReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child1ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.Child1ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList());
            
            return result;
        }

        /// <inheritdoc />
        public override MyModelGettersOnlyParent DeepCloneWithParentReadOnlyDictionaryOfDateTimeProperty(IReadOnlyDictionary<DateTime, DateTime> parentReadOnlyDictionaryOfDateTimeProperty)
        {
            var result = new MyModelGettersOnlyChild1(
                                 this.ParentDateTimeProperty,
                                 this.ParentNullableDateTimeProperty,
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 parentReadOnlyDictionaryOfDateTimeProperty,
                                 this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList(),
                                 this.Child1DateTimeProperty,
                                 this.Child1NullableDateTimeProperty,
                                 this.Child1ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child1ReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child1ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.Child1ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList());
            
            return result;
        }

        /// <inheritdoc />
        public override MyModelGettersOnlyParent DeepCloneWithParentReadOnlyDictionaryOfNullableDateTimeProperty(IReadOnlyDictionary<DateTime?, DateTime?> parentReadOnlyDictionaryOfNullableDateTimeProperty)
        {
            var result = new MyModelGettersOnlyChild1(
                                 this.ParentDateTimeProperty,
                                 this.ParentNullableDateTimeProperty,
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 parentReadOnlyDictionaryOfNullableDateTimeProperty,
                                 this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList(),
                                 this.Child1DateTimeProperty,
                                 this.Child1NullableDateTimeProperty,
                                 this.Child1ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child1ReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child1ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.Child1ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList());
            
            return result;
        }

        /// <inheritdoc />
        public override MyModelGettersOnlyParent DeepCloneWithParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty(IReadOnlyDictionary<string, IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>> parentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty)
        {
            var result = new MyModelGettersOnlyChild1(
                                 this.ParentDateTimeProperty,
                                 this.ParentNullableDateTimeProperty,
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 parentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty,
                                 this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList(),
                                 this.Child1DateTimeProperty,
                                 this.Child1NullableDateTimeProperty,
                                 this.Child1ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child1ReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child1ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.Child1ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList());
            
            return result;
        }

        /// <inheritdoc />
        public override MyModelGettersOnlyParent DeepCloneWithParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty(IReadOnlyList<IReadOnlyDictionary<DateTime, IReadOnlyList<string>>> parentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty)
        {
            var result = new MyModelGettersOnlyChild1(
                                 this.ParentDateTimeProperty,
                                 this.ParentNullableDateTimeProperty,
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 parentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty,
                                 this.Child1DateTimeProperty,
                                 this.Child1NullableDateTimeProperty,
                                 this.Child1ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child1ReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child1ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.Child1ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList());
            
            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1DateTimeProperty" />.
        /// </summary>
        /// <param name="child1DateTimeProperty">The new <see cref="Child1DateTimeProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="MyModelGettersOnlyChild1" /> using the specified <paramref name="child1DateTimeProperty" /> for <see cref="Child1DateTimeProperty" /> and a deep clone of every other property.</returns>
        public MyModelGettersOnlyChild1 DeepCloneWithChild1DateTimeProperty(DateTime child1DateTimeProperty)
        {
            var result = new MyModelGettersOnlyChild1(
                                 this.ParentDateTimeProperty,
                                 this.ParentNullableDateTimeProperty,
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList(),
                                 child1DateTimeProperty,
                                 this.Child1NullableDateTimeProperty,
                                 this.Child1ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child1ReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child1ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.Child1ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList());
            
            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1NullableDateTimeProperty" />.
        /// </summary>
        /// <param name="child1NullableDateTimeProperty">The new <see cref="Child1NullableDateTimeProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="MyModelGettersOnlyChild1" /> using the specified <paramref name="child1NullableDateTimeProperty" /> for <see cref="Child1NullableDateTimeProperty" /> and a deep clone of every other property.</returns>
        public MyModelGettersOnlyChild1 DeepCloneWithChild1NullableDateTimeProperty(DateTime? child1NullableDateTimeProperty)
        {
            var result = new MyModelGettersOnlyChild1(
                                 this.ParentDateTimeProperty,
                                 this.ParentNullableDateTimeProperty,
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList(),
                                 this.Child1DateTimeProperty,
                                 child1NullableDateTimeProperty,
                                 this.Child1ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child1ReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child1ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.Child1ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList());
            
            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ArrayOfDateTimeProperty" />.
        /// </summary>
        /// <param name="child1ArrayOfDateTimeProperty">The new <see cref="Child1ArrayOfDateTimeProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="MyModelGettersOnlyChild1" /> using the specified <paramref name="child1ArrayOfDateTimeProperty" /> for <see cref="Child1ArrayOfDateTimeProperty" /> and a deep clone of every other property.</returns>
        public MyModelGettersOnlyChild1 DeepCloneWithChild1ArrayOfDateTimeProperty(DateTime[] child1ArrayOfDateTimeProperty)
        {
            var result = new MyModelGettersOnlyChild1(
                                 this.ParentDateTimeProperty,
                                 this.ParentNullableDateTimeProperty,
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList(),
                                 this.Child1DateTimeProperty,
                                 this.Child1NullableDateTimeProperty,
                                 child1ArrayOfDateTimeProperty,
                                 this.Child1ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child1ReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child1ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.Child1ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList());
            
            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ArrayOfNullableDateTimeProperty" />.
        /// </summary>
        /// <param name="child1ArrayOfNullableDateTimeProperty">The new <see cref="Child1ArrayOfNullableDateTimeProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="MyModelGettersOnlyChild1" /> using the specified <paramref name="child1ArrayOfNullableDateTimeProperty" /> for <see cref="Child1ArrayOfNullableDateTimeProperty" /> and a deep clone of every other property.</returns>
        public MyModelGettersOnlyChild1 DeepCloneWithChild1ArrayOfNullableDateTimeProperty(DateTime?[] child1ArrayOfNullableDateTimeProperty)
        {
            var result = new MyModelGettersOnlyChild1(
                                 this.ParentDateTimeProperty,
                                 this.ParentNullableDateTimeProperty,
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList(),
                                 this.Child1DateTimeProperty,
                                 this.Child1NullableDateTimeProperty,
                                 this.Child1ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 child1ArrayOfNullableDateTimeProperty,
                                 this.Child1ReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child1ReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child1ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.Child1ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList());
            
            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ReadOnlyCollectionOfDateTimeProperty" />.
        /// </summary>
        /// <param name="child1ReadOnlyCollectionOfDateTimeProperty">The new <see cref="Child1ReadOnlyCollectionOfDateTimeProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="MyModelGettersOnlyChild1" /> using the specified <paramref name="child1ReadOnlyCollectionOfDateTimeProperty" /> for <see cref="Child1ReadOnlyCollectionOfDateTimeProperty" /> and a deep clone of every other property.</returns>
        public MyModelGettersOnlyChild1 DeepCloneWithChild1ReadOnlyCollectionOfDateTimeProperty(IReadOnlyCollection<DateTime> child1ReadOnlyCollectionOfDateTimeProperty)
        {
            var result = new MyModelGettersOnlyChild1(
                                 this.ParentDateTimeProperty,
                                 this.ParentNullableDateTimeProperty,
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList(),
                                 this.Child1DateTimeProperty,
                                 this.Child1NullableDateTimeProperty,
                                 this.Child1ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 child1ReadOnlyCollectionOfDateTimeProperty,
                                 this.Child1ReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child1ReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child1ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.Child1ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList());
            
            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ReadOnlyCollectionOfNullableDateTimeProperty" />.
        /// </summary>
        /// <param name="child1ReadOnlyCollectionOfNullableDateTimeProperty">The new <see cref="Child1ReadOnlyCollectionOfNullableDateTimeProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="MyModelGettersOnlyChild1" /> using the specified <paramref name="child1ReadOnlyCollectionOfNullableDateTimeProperty" /> for <see cref="Child1ReadOnlyCollectionOfNullableDateTimeProperty" /> and a deep clone of every other property.</returns>
        public MyModelGettersOnlyChild1 DeepCloneWithChild1ReadOnlyCollectionOfNullableDateTimeProperty(IReadOnlyCollection<DateTime?> child1ReadOnlyCollectionOfNullableDateTimeProperty)
        {
            var result = new MyModelGettersOnlyChild1(
                                 this.ParentDateTimeProperty,
                                 this.ParentNullableDateTimeProperty,
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList(),
                                 this.Child1DateTimeProperty,
                                 this.Child1NullableDateTimeProperty,
                                 this.Child1ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 child1ReadOnlyCollectionOfNullableDateTimeProperty,
                                 this.Child1ReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child1ReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child1ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.Child1ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList());
            
            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ReadOnlyListOfDateTimeProperty" />.
        /// </summary>
        /// <param name="child1ReadOnlyListOfDateTimeProperty">The new <see cref="Child1ReadOnlyListOfDateTimeProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="MyModelGettersOnlyChild1" /> using the specified <paramref name="child1ReadOnlyListOfDateTimeProperty" /> for <see cref="Child1ReadOnlyListOfDateTimeProperty" /> and a deep clone of every other property.</returns>
        public MyModelGettersOnlyChild1 DeepCloneWithChild1ReadOnlyListOfDateTimeProperty(IReadOnlyList<DateTime> child1ReadOnlyListOfDateTimeProperty)
        {
            var result = new MyModelGettersOnlyChild1(
                                 this.ParentDateTimeProperty,
                                 this.ParentNullableDateTimeProperty,
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList(),
                                 this.Child1DateTimeProperty,
                                 this.Child1NullableDateTimeProperty,
                                 this.Child1ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 child1ReadOnlyListOfDateTimeProperty,
                                 this.Child1ReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child1ReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child1ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.Child1ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList());
            
            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ReadOnlyListOfNullableDateTimeProperty" />.
        /// </summary>
        /// <param name="child1ReadOnlyListOfNullableDateTimeProperty">The new <see cref="Child1ReadOnlyListOfNullableDateTimeProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="MyModelGettersOnlyChild1" /> using the specified <paramref name="child1ReadOnlyListOfNullableDateTimeProperty" /> for <see cref="Child1ReadOnlyListOfNullableDateTimeProperty" /> and a deep clone of every other property.</returns>
        public MyModelGettersOnlyChild1 DeepCloneWithChild1ReadOnlyListOfNullableDateTimeProperty(IReadOnlyList<DateTime?> child1ReadOnlyListOfNullableDateTimeProperty)
        {
            var result = new MyModelGettersOnlyChild1(
                                 this.ParentDateTimeProperty,
                                 this.ParentNullableDateTimeProperty,
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList(),
                                 this.Child1DateTimeProperty,
                                 this.Child1NullableDateTimeProperty,
                                 this.Child1ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 child1ReadOnlyListOfNullableDateTimeProperty,
                                 this.Child1ReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child1ReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child1ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.Child1ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList());
            
            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ReadOnlyDictionaryOfDateTimeProperty" />.
        /// </summary>
        /// <param name="child1ReadOnlyDictionaryOfDateTimeProperty">The new <see cref="Child1ReadOnlyDictionaryOfDateTimeProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="MyModelGettersOnlyChild1" /> using the specified <paramref name="child1ReadOnlyDictionaryOfDateTimeProperty" /> for <see cref="Child1ReadOnlyDictionaryOfDateTimeProperty" /> and a deep clone of every other property.</returns>
        public MyModelGettersOnlyChild1 DeepCloneWithChild1ReadOnlyDictionaryOfDateTimeProperty(IReadOnlyDictionary<DateTime, DateTime> child1ReadOnlyDictionaryOfDateTimeProperty)
        {
            var result = new MyModelGettersOnlyChild1(
                                 this.ParentDateTimeProperty,
                                 this.ParentNullableDateTimeProperty,
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList(),
                                 this.Child1DateTimeProperty,
                                 this.Child1NullableDateTimeProperty,
                                 this.Child1ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 child1ReadOnlyDictionaryOfDateTimeProperty,
                                 this.Child1ReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child1ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.Child1ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList());
            
            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ReadOnlyDictionaryOfNullableDateTimeProperty" />.
        /// </summary>
        /// <param name="child1ReadOnlyDictionaryOfNullableDateTimeProperty">The new <see cref="Child1ReadOnlyDictionaryOfNullableDateTimeProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="MyModelGettersOnlyChild1" /> using the specified <paramref name="child1ReadOnlyDictionaryOfNullableDateTimeProperty" /> for <see cref="Child1ReadOnlyDictionaryOfNullableDateTimeProperty" /> and a deep clone of every other property.</returns>
        public MyModelGettersOnlyChild1 DeepCloneWithChild1ReadOnlyDictionaryOfNullableDateTimeProperty(IReadOnlyDictionary<DateTime?, DateTime?> child1ReadOnlyDictionaryOfNullableDateTimeProperty)
        {
            var result = new MyModelGettersOnlyChild1(
                                 this.ParentDateTimeProperty,
                                 this.ParentNullableDateTimeProperty,
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList(),
                                 this.Child1DateTimeProperty,
                                 this.Child1NullableDateTimeProperty,
                                 this.Child1ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 child1ReadOnlyDictionaryOfNullableDateTimeProperty,
                                 this.Child1ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.Child1ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList());
            
            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty" />.
        /// </summary>
        /// <param name="child1ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty">The new <see cref="Child1ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="MyModelGettersOnlyChild1" /> using the specified <paramref name="child1ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty" /> for <see cref="Child1ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty" /> and a deep clone of every other property.</returns>
        public MyModelGettersOnlyChild1 DeepCloneWithChild1ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty(IReadOnlyDictionary<string, IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>> child1ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty)
        {
            var result = new MyModelGettersOnlyChild1(
                                 this.ParentDateTimeProperty,
                                 this.ParentNullableDateTimeProperty,
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList(),
                                 this.Child1DateTimeProperty,
                                 this.Child1NullableDateTimeProperty,
                                 this.Child1ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child1ReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 child1ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty,
                                 this.Child1ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList());
            
            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty" />.
        /// </summary>
        /// <param name="child1ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty">The new <see cref="Child1ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="MyModelGettersOnlyChild1" /> using the specified <paramref name="child1ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty" /> for <see cref="Child1ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty" /> and a deep clone of every other property.</returns>
        public MyModelGettersOnlyChild1 DeepCloneWithChild1ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty(IReadOnlyList<IReadOnlyDictionary<DateTime, IReadOnlyList<string>>> child1ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty)
        {
            var result = new MyModelGettersOnlyChild1(
                                 this.ParentDateTimeProperty,
                                 this.ParentNullableDateTimeProperty,
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.Select(i => (IReadOnlyDictionary<DateTime, IReadOnlyList<string>>)i?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyList<string>)v2.Value?.Select(i3 => i3?.Clone().ToString()).ToList())).ToList(),
                                 this.Child1DateTimeProperty,
                                 this.Child1NullableDateTimeProperty,
                                 this.Child1ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ReadOnlyCollectionOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyCollectionOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyListOfDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyListOfNullableDateTimeProperty?.Select(i => i).ToList(),
                                 this.Child1ReadOnlyDictionaryOfDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child1ReadOnlyDictionaryOfNullableDateTimeProperty?.ToDictionary(k => k.Key, v => v.Value),
                                 this.Child1ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToDictionary(k => k.Key?.Clone().ToString(), v => (IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>)v.Value?.ToDictionary(k2 => k2.Key, v2 => (IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>)v2.Value?.ToDictionary(k3 => k3.Key?.DeepClone(), v3 => (IReadOnlyList<string>)v3.Value?.Select(i4 => i4?.Clone().ToString()).ToList()))),
                                 child1ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty);
            
            return result;
        }
    
        /// <inheritdoc />
        public override string ToString()
        {
            var result = Invariant($"{nameof(OBeautifulCode.CodeGen.ModelObject.Test)}.{nameof(MyModelGettersOnlyChild1)}: ParentDateTimeProperty = {this.ParentDateTimeProperty.ToString(CultureInfo.InvariantCulture) ?? "<null>"}, ParentNullableDateTimeProperty = {this.ParentNullableDateTimeProperty?.ToString() ?? "<null>"}, ParentArrayOfDateTimeProperty = {this.ParentArrayOfDateTimeProperty?.ToString() ?? "<null>"}, ParentArrayOfNullableDateTimeProperty = {this.ParentArrayOfNullableDateTimeProperty?.ToString() ?? "<null>"}, ParentReadOnlyCollectionOfDateTimeProperty = {this.ParentReadOnlyCollectionOfDateTimeProperty?.ToString() ?? "<null>"}, ParentReadOnlyCollectionOfNullableDateTimeProperty = {this.ParentReadOnlyCollectionOfNullableDateTimeProperty?.ToString() ?? "<null>"}, ParentReadOnlyListOfDateTimeProperty = {this.ParentReadOnlyListOfDateTimeProperty?.ToString() ?? "<null>"}, ParentReadOnlyListOfNullableDateTimeProperty = {this.ParentReadOnlyListOfNullableDateTimeProperty?.ToString() ?? "<null>"}, ParentReadOnlyDictionaryOfDateTimeProperty = {this.ParentReadOnlyDictionaryOfDateTimeProperty?.ToString() ?? "<null>"}, ParentReadOnlyDictionaryOfNullableDateTimeProperty = {this.ParentReadOnlyDictionaryOfNullableDateTimeProperty?.ToString() ?? "<null>"}, ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty = {this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToString() ?? "<null>"}, ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty = {this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToString() ?? "<null>"}, Child1DateTimeProperty = {this.Child1DateTimeProperty.ToString(CultureInfo.InvariantCulture) ?? "<null>"}, Child1NullableDateTimeProperty = {this.Child1NullableDateTimeProperty?.ToString() ?? "<null>"}, Child1ArrayOfDateTimeProperty = {this.Child1ArrayOfDateTimeProperty?.ToString() ?? "<null>"}, Child1ArrayOfNullableDateTimeProperty = {this.Child1ArrayOfNullableDateTimeProperty?.ToString() ?? "<null>"}, Child1ReadOnlyCollectionOfDateTimeProperty = {this.Child1ReadOnlyCollectionOfDateTimeProperty?.ToString() ?? "<null>"}, Child1ReadOnlyCollectionOfNullableDateTimeProperty = {this.Child1ReadOnlyCollectionOfNullableDateTimeProperty?.ToString() ?? "<null>"}, Child1ReadOnlyListOfDateTimeProperty = {this.Child1ReadOnlyListOfDateTimeProperty?.ToString() ?? "<null>"}, Child1ReadOnlyListOfNullableDateTimeProperty = {this.Child1ReadOnlyListOfNullableDateTimeProperty?.ToString() ?? "<null>"}, Child1ReadOnlyDictionaryOfDateTimeProperty = {this.Child1ReadOnlyDictionaryOfDateTimeProperty?.ToString() ?? "<null>"}, Child1ReadOnlyDictionaryOfNullableDateTimeProperty = {this.Child1ReadOnlyDictionaryOfNullableDateTimeProperty?.ToString() ?? "<null>"}, Child1ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty = {this.Child1ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToString() ?? "<null>"}, Child1ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty = {this.Child1ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty?.ToString() ?? "<null>"}.");

            return result;
        }
    }
}