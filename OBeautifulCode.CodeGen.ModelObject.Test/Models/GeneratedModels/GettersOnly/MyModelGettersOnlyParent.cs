// --------------------------------------------------------------------------------------------------------------------
// <copyright file="MyModelGettersOnlyParent.cs" company="OBeautifulCode">
//   Copyright (c) OBeautifulCode 2018. All rights reserved.
// </copyright>
// <auto-generated>
//   Sourced OBeautifulCode.CodeGen.ModelObject.Test.CodeGeneratorTest.GenerateModel()
// </auto-generated>
// --------------------------------------------------------------------------------------------------------------------

namespace OBeautifulCode.CodeGen.ModelObject.Test
{
    using System;
    using System.Collections.Generic;

    using OBeautifulCode.Assertion.Recipes;
    using OBeautifulCode.Type;

    public abstract partial class MyModelGettersOnlyParent : IModelViaCodeGen
    {
        protected MyModelGettersOnlyParent(
            int parentIntProperty,
            string parentStringProperty,
            ModelEquatableClass parentModelEquatableClassProperty,
            IReadOnlyList<int> parentReadOnlyListOfIntProperty,
            IReadOnlyList<string> parentReadOnlyListOfStringProperty,
            IReadOnlyList<ModelEquatableClass> parentReadOnlyListOfModelEquatableClassProperty)
        {
            new { parentStringProperty }.AsArg().Must().NotBeNullNorWhiteSpace();
            new { parentModelEquatableClassProperty }.AsArg().Must().NotBeNull();
            new { parentReadOnlyListOfIntProperty }.AsArg().Must().NotBeNullNorEmptyEnumerable();
            new { parentReadOnlyListOfStringProperty }.AsArg().Must().NotBeNullNorEmptyEnumerableNorContainAnyNulls();
            new { parentReadOnlyListOfModelEquatableClassProperty }.AsArg().Must().NotBeNullNorEmptyEnumerableNorContainAnyNulls();

            this.ParentIntProperty = parentIntProperty;
            this.ParentStringProperty = parentStringProperty;
            this.ParentModelEquatableClassProperty = parentModelEquatableClassProperty;
            this.ParentReadOnlyListOfIntProperty = parentReadOnlyListOfIntProperty;
            this.ParentReadOnlyListOfStringProperty = parentReadOnlyListOfStringProperty;
            this.ParentReadOnlyListOfModelEquatableClassProperty = parentReadOnlyListOfModelEquatableClassProperty;
        }

        public int ParentIntProperty { get; }

        public string ParentStringProperty { get; }

        public ModelEquatableClass ParentModelEquatableClassProperty { get; }

        public IReadOnlyList<int> ParentReadOnlyListOfIntProperty { get; }

        public IReadOnlyList<string> ParentReadOnlyListOfStringProperty { get; }

        public IReadOnlyList<ModelEquatableClass> ParentReadOnlyListOfModelEquatableClassProperty { get; }
    }
}