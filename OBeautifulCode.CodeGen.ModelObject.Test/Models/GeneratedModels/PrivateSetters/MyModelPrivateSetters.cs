// --------------------------------------------------------------------------------------------------------------------
// <copyright file="MyModelPrivateSetters.cs" company="OBeautifulCode">
//   Copyright (c) OBeautifulCode 2018. All rights reserved.
// </copyright>
// <auto-generated>
//   Sourced OBeautifulCode.CodeGen.ModelObject.Test.CodeGeneratorTest.GenerateModel()
// </auto-generated>
// --------------------------------------------------------------------------------------------------------------------

namespace OBeautifulCode.CodeGen.ModelObject.Test
{
    using System;
    using System.Collections.Generic;

    using OBeautifulCode.Assertion.Recipes;
    using OBeautifulCode.Type;

    public partial class MyModelPrivateSetters : IModelViaCodeGen
    {
        public MyModelPrivateSetters(
            DateTime dateTimeProperty,
            DateTime? nullableDateTimeProperty,
            DateTime[] arrayOfDateTimeProperty,
            DateTime?[] arrayOfNullableDateTimeProperty,
            IReadOnlyCollection<DateTime> readOnlyCollectionOfDateTimeProperty,
            IReadOnlyCollection<DateTime?> readOnlyCollectionOfNullableDateTimeProperty,
            IReadOnlyList<DateTime> readOnlyListOfDateTimeProperty,
            IReadOnlyList<DateTime?> readOnlyListOfNullableDateTimeProperty,
            IReadOnlyDictionary<DateTime, DateTime> readOnlyDictionaryOfDateTimeProperty,
            IReadOnlyDictionary<DateTime?, DateTime?> readOnlyDictionaryOfNullableDateTimeProperty,
            IReadOnlyDictionary<string, IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>> readOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty,
            IReadOnlyList<IReadOnlyDictionary<DateTime, IReadOnlyList<string>>> readOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty)
        {
            new { arrayOfDateTimeProperty }.AsArg().Must().NotBeNullNorEmptyEnumerable();
            new { arrayOfNullableDateTimeProperty }.AsArg().Must().NotBeNullNorEmptyEnumerable();
            new { readOnlyCollectionOfDateTimeProperty }.AsArg().Must().NotBeNullNorEmptyEnumerable();
            new { readOnlyCollectionOfNullableDateTimeProperty }.AsArg().Must().NotBeNullNorEmptyEnumerable();
            new { readOnlyListOfDateTimeProperty }.AsArg().Must().NotBeNullNorEmptyEnumerable();
            new { readOnlyListOfNullableDateTimeProperty }.AsArg().Must().NotBeNullNorEmptyEnumerable();
            new { readOnlyDictionaryOfDateTimeProperty }.AsArg().Must().NotBeNullNorEmptyDictionary();
            new { readOnlyDictionaryOfNullableDateTimeProperty }.AsArg().Must().NotBeNullNorEmptyDictionary();
            new { readOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty }.AsArg().Must().NotBeNullNorEmptyDictionaryNorContainAnyNullValues();
            new { readOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty }.AsArg().Must().NotBeNullNorEmptyEnumerableNorContainAnyNulls();

            this.DateTimeProperty = dateTimeProperty;
            this.NullableDateTimeProperty = nullableDateTimeProperty;
            this.ArrayOfDateTimeProperty = arrayOfDateTimeProperty;
            this.ArrayOfNullableDateTimeProperty = arrayOfNullableDateTimeProperty;
            this.ReadOnlyCollectionOfDateTimeProperty = readOnlyCollectionOfDateTimeProperty;
            this.ReadOnlyCollectionOfNullableDateTimeProperty = readOnlyCollectionOfNullableDateTimeProperty;
            this.ReadOnlyListOfDateTimeProperty = readOnlyListOfDateTimeProperty;
            this.ReadOnlyListOfNullableDateTimeProperty = readOnlyListOfNullableDateTimeProperty;
            this.ReadOnlyDictionaryOfDateTimeProperty = readOnlyDictionaryOfDateTimeProperty;
            this.ReadOnlyDictionaryOfNullableDateTimeProperty = readOnlyDictionaryOfNullableDateTimeProperty;
            this.ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty = readOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty;
            this.ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty = readOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty;
        }

        public DateTime DateTimeProperty { get; private set; }

        public DateTime? NullableDateTimeProperty { get; private set; }

        public DateTime[] ArrayOfDateTimeProperty { get; private set; }

        public DateTime?[] ArrayOfNullableDateTimeProperty { get; private set; }

        public IReadOnlyCollection<DateTime> ReadOnlyCollectionOfDateTimeProperty { get; private set; }

        public IReadOnlyCollection<DateTime?> ReadOnlyCollectionOfNullableDateTimeProperty { get; private set; }

        public IReadOnlyList<DateTime> ReadOnlyListOfDateTimeProperty { get; private set; }

        public IReadOnlyList<DateTime?> ReadOnlyListOfNullableDateTimeProperty { get; private set; }

        public IReadOnlyDictionary<DateTime, DateTime> ReadOnlyDictionaryOfDateTimeProperty { get; private set; }

        public IReadOnlyDictionary<DateTime?, DateTime?> ReadOnlyDictionaryOfNullableDateTimeProperty { get; private set; }

        public IReadOnlyDictionary<string, IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>> ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty { get; private set; }

        public IReadOnlyList<IReadOnlyDictionary<DateTime, IReadOnlyList<string>>> ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty { get; private set; }
    }
}