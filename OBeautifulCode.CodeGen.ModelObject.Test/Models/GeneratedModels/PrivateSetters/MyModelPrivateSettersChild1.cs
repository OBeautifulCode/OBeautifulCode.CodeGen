// --------------------------------------------------------------------------------------------------------------------
// <copyright file="MyModelPrivateSettersChild1.cs" company="OBeautifulCode">
//   Copyright (c) OBeautifulCode 2018. All rights reserved.
// </copyright>
// <auto-generated>
//   Sourced OBeautifulCode.CodeGen.ModelObject.Test.CodeGeneratorTest.GenerateModel()
// </auto-generated>
// --------------------------------------------------------------------------------------------------------------------

namespace OBeautifulCode.CodeGen.ModelObject.Test
{
    using System;
    using System.Collections.Generic;

    using OBeautifulCode.Assertion.Recipes;
    using OBeautifulCode.Type;

    public partial class MyModelPrivateSettersChild1 : MyModelPrivateSettersParent, IModelViaCodeGen
    {
        public MyModelPrivateSettersChild1(
            DateTime parentDateTimeProperty,
            DateTime? parentNullableDateTimeProperty,
            DateTime[] parentArrayOfDateTimeProperty,
            DateTime?[] parentArrayOfNullableDateTimeProperty,
            IReadOnlyCollection<DateTime> parentReadOnlyCollectionOfDateTimeProperty,
            IReadOnlyCollection<DateTime?> parentReadOnlyCollectionOfNullableDateTimeProperty,
            IReadOnlyList<DateTime> parentReadOnlyListOfDateTimeProperty,
            IReadOnlyList<DateTime?> parentReadOnlyListOfNullableDateTimeProperty,
            IReadOnlyDictionary<DateTime, DateTime> parentReadOnlyDictionaryOfDateTimeProperty,
            IReadOnlyDictionary<DateTime?, DateTime?> parentReadOnlyDictionaryOfNullableDateTimeProperty,
            IReadOnlyDictionary<string, IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>> parentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty,
            IReadOnlyList<IReadOnlyDictionary<DateTime, IReadOnlyList<string>>> parentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty,
            DateTime child1DateTimeProperty,
            DateTime? child1NullableDateTimeProperty,
            DateTime[] child1ArrayOfDateTimeProperty,
            DateTime?[] child1ArrayOfNullableDateTimeProperty,
            IReadOnlyCollection<DateTime> child1ReadOnlyCollectionOfDateTimeProperty,
            IReadOnlyCollection<DateTime?> child1ReadOnlyCollectionOfNullableDateTimeProperty,
            IReadOnlyList<DateTime> child1ReadOnlyListOfDateTimeProperty,
            IReadOnlyList<DateTime?> child1ReadOnlyListOfNullableDateTimeProperty,
            IReadOnlyDictionary<DateTime, DateTime> child1ReadOnlyDictionaryOfDateTimeProperty,
            IReadOnlyDictionary<DateTime?, DateTime?> child1ReadOnlyDictionaryOfNullableDateTimeProperty,
            IReadOnlyDictionary<string, IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>> child1ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty,
            IReadOnlyList<IReadOnlyDictionary<DateTime, IReadOnlyList<string>>> child1ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty)
            : base(parentDateTimeProperty, parentNullableDateTimeProperty, parentArrayOfDateTimeProperty, parentArrayOfNullableDateTimeProperty, parentReadOnlyCollectionOfDateTimeProperty, parentReadOnlyCollectionOfNullableDateTimeProperty, parentReadOnlyListOfDateTimeProperty, parentReadOnlyListOfNullableDateTimeProperty, parentReadOnlyDictionaryOfDateTimeProperty, parentReadOnlyDictionaryOfNullableDateTimeProperty, parentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty, parentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty)
        {
            new { child1ArrayOfDateTimeProperty }.AsArg().Must().NotBeNullNorEmptyEnumerable();
            new { child1ArrayOfNullableDateTimeProperty }.AsArg().Must().NotBeNullNorEmptyEnumerable();
            new { child1ReadOnlyCollectionOfDateTimeProperty }.AsArg().Must().NotBeNullNorEmptyEnumerable();
            new { child1ReadOnlyCollectionOfNullableDateTimeProperty }.AsArg().Must().NotBeNullNorEmptyEnumerable();
            new { child1ReadOnlyListOfDateTimeProperty }.AsArg().Must().NotBeNullNorEmptyEnumerable();
            new { child1ReadOnlyListOfNullableDateTimeProperty }.AsArg().Must().NotBeNullNorEmptyEnumerable();
            new { child1ReadOnlyDictionaryOfDateTimeProperty }.AsArg().Must().NotBeNullNorEmptyDictionary();
            new { child1ReadOnlyDictionaryOfNullableDateTimeProperty }.AsArg().Must().NotBeNullNorEmptyDictionary();
            new { child1ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty }.AsArg().Must().NotBeNullNorEmptyDictionaryNorContainAnyNullValues();
            new { child1ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty }.AsArg().Must().NotBeNullNorEmptyEnumerableNorContainAnyNulls();

            this.Child1DateTimeProperty = child1DateTimeProperty;
            this.Child1NullableDateTimeProperty = child1NullableDateTimeProperty;
            this.Child1ArrayOfDateTimeProperty = child1ArrayOfDateTimeProperty;
            this.Child1ArrayOfNullableDateTimeProperty = child1ArrayOfNullableDateTimeProperty;
            this.Child1ReadOnlyCollectionOfDateTimeProperty = child1ReadOnlyCollectionOfDateTimeProperty;
            this.Child1ReadOnlyCollectionOfNullableDateTimeProperty = child1ReadOnlyCollectionOfNullableDateTimeProperty;
            this.Child1ReadOnlyListOfDateTimeProperty = child1ReadOnlyListOfDateTimeProperty;
            this.Child1ReadOnlyListOfNullableDateTimeProperty = child1ReadOnlyListOfNullableDateTimeProperty;
            this.Child1ReadOnlyDictionaryOfDateTimeProperty = child1ReadOnlyDictionaryOfDateTimeProperty;
            this.Child1ReadOnlyDictionaryOfNullableDateTimeProperty = child1ReadOnlyDictionaryOfNullableDateTimeProperty;
            this.Child1ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty = child1ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty;
            this.Child1ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty = child1ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty;
        }

        public DateTime Child1DateTimeProperty { get; private set; }

        public DateTime? Child1NullableDateTimeProperty { get; private set; }

        public DateTime[] Child1ArrayOfDateTimeProperty { get; private set; }

        public DateTime?[] Child1ArrayOfNullableDateTimeProperty { get; private set; }

        public IReadOnlyCollection<DateTime> Child1ReadOnlyCollectionOfDateTimeProperty { get; private set; }

        public IReadOnlyCollection<DateTime?> Child1ReadOnlyCollectionOfNullableDateTimeProperty { get; private set; }

        public IReadOnlyList<DateTime> Child1ReadOnlyListOfDateTimeProperty { get; private set; }

        public IReadOnlyList<DateTime?> Child1ReadOnlyListOfNullableDateTimeProperty { get; private set; }

        public IReadOnlyDictionary<DateTime, DateTime> Child1ReadOnlyDictionaryOfDateTimeProperty { get; private set; }

        public IReadOnlyDictionary<DateTime?, DateTime?> Child1ReadOnlyDictionaryOfNullableDateTimeProperty { get; private set; }

        public IReadOnlyDictionary<string, IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>> Child1ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty { get; private set; }

        public IReadOnlyList<IReadOnlyDictionary<DateTime, IReadOnlyList<string>>> Child1ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty { get; private set; }
    }
}