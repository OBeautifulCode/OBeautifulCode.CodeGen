// --------------------------------------------------------------------------------------------------------------------
// <copyright file="MyModelPrivateSettersParent.cs" company="OBeautifulCode">
//   Copyright (c) OBeautifulCode 2018. All rights reserved.
// </copyright>
// <auto-generated>
//   Sourced OBeautifulCode.CodeGen.ModelObject.Test.CodeGeneratorTest.GenerateModel()
// </auto-generated>
// --------------------------------------------------------------------------------------------------------------------

namespace OBeautifulCode.CodeGen.ModelObject.Test
{
    using System;
    using System.Collections.Generic;

    using OBeautifulCode.Assertion.Recipes;
    using OBeautifulCode.Type;

    public abstract partial class MyModelPrivateSettersParent : IModelViaCodeGen
    {
        protected MyModelPrivateSettersParent(
            DateTime parentDateTimeProperty,
            DateTime? parentNullableDateTimeProperty,
            DateTime[] parentArrayOfDateTimeProperty,
            DateTime?[] parentArrayOfNullableDateTimeProperty,
            IReadOnlyCollection<DateTime> parentReadOnlyCollectionOfDateTimeProperty,
            IReadOnlyCollection<DateTime?> parentReadOnlyCollectionOfNullableDateTimeProperty,
            IReadOnlyList<DateTime> parentReadOnlyListOfDateTimeProperty,
            IReadOnlyList<DateTime?> parentReadOnlyListOfNullableDateTimeProperty,
            IReadOnlyDictionary<DateTime, DateTime> parentReadOnlyDictionaryOfDateTimeProperty,
            IReadOnlyDictionary<DateTime?, DateTime?> parentReadOnlyDictionaryOfNullableDateTimeProperty,
            IReadOnlyDictionary<string, IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>> parentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty,
            IReadOnlyList<IReadOnlyDictionary<DateTime, IReadOnlyList<string>>> parentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty)
        {
            new { parentArrayOfDateTimeProperty }.AsArg().Must().NotBeNullNorEmptyEnumerable();
            new { parentArrayOfNullableDateTimeProperty }.AsArg().Must().NotBeNullNorEmptyEnumerable();
            new { parentReadOnlyCollectionOfDateTimeProperty }.AsArg().Must().NotBeNullNorEmptyEnumerable();
            new { parentReadOnlyCollectionOfNullableDateTimeProperty }.AsArg().Must().NotBeNullNorEmptyEnumerable();
            new { parentReadOnlyListOfDateTimeProperty }.AsArg().Must().NotBeNullNorEmptyEnumerable();
            new { parentReadOnlyListOfNullableDateTimeProperty }.AsArg().Must().NotBeNullNorEmptyEnumerable();
            new { parentReadOnlyDictionaryOfDateTimeProperty }.AsArg().Must().NotBeNullNorEmptyDictionary();
            new { parentReadOnlyDictionaryOfNullableDateTimeProperty }.AsArg().Must().NotBeNullNorEmptyDictionary();
            new { parentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty }.AsArg().Must().NotBeNullNorEmptyDictionaryNorContainAnyNullValues();
            new { parentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty }.AsArg().Must().NotBeNullNorEmptyEnumerableNorContainAnyNulls();

            this.ParentDateTimeProperty = parentDateTimeProperty;
            this.ParentNullableDateTimeProperty = parentNullableDateTimeProperty;
            this.ParentArrayOfDateTimeProperty = parentArrayOfDateTimeProperty;
            this.ParentArrayOfNullableDateTimeProperty = parentArrayOfNullableDateTimeProperty;
            this.ParentReadOnlyCollectionOfDateTimeProperty = parentReadOnlyCollectionOfDateTimeProperty;
            this.ParentReadOnlyCollectionOfNullableDateTimeProperty = parentReadOnlyCollectionOfNullableDateTimeProperty;
            this.ParentReadOnlyListOfDateTimeProperty = parentReadOnlyListOfDateTimeProperty;
            this.ParentReadOnlyListOfNullableDateTimeProperty = parentReadOnlyListOfNullableDateTimeProperty;
            this.ParentReadOnlyDictionaryOfDateTimeProperty = parentReadOnlyDictionaryOfDateTimeProperty;
            this.ParentReadOnlyDictionaryOfNullableDateTimeProperty = parentReadOnlyDictionaryOfNullableDateTimeProperty;
            this.ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty = parentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty;
            this.ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty = parentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty;
        }

        public DateTime ParentDateTimeProperty { get; private set; }

        public DateTime? ParentNullableDateTimeProperty { get; private set; }

        public DateTime[] ParentArrayOfDateTimeProperty { get; private set; }

        public DateTime?[] ParentArrayOfNullableDateTimeProperty { get; private set; }

        public IReadOnlyCollection<DateTime> ParentReadOnlyCollectionOfDateTimeProperty { get; private set; }

        public IReadOnlyCollection<DateTime?> ParentReadOnlyCollectionOfNullableDateTimeProperty { get; private set; }

        public IReadOnlyList<DateTime> ParentReadOnlyListOfDateTimeProperty { get; private set; }

        public IReadOnlyList<DateTime?> ParentReadOnlyListOfNullableDateTimeProperty { get; private set; }

        public IReadOnlyDictionary<DateTime, DateTime> ParentReadOnlyDictionaryOfDateTimeProperty { get; private set; }

        public IReadOnlyDictionary<DateTime?, DateTime?> ParentReadOnlyDictionaryOfNullableDateTimeProperty { get; private set; }

        public IReadOnlyDictionary<string, IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>> ParentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty { get; private set; }

        public IReadOnlyList<IReadOnlyDictionary<DateTime, IReadOnlyList<string>>> ParentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty { get; private set; }
    }
}