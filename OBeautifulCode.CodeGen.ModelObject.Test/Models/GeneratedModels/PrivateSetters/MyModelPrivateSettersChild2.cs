// --------------------------------------------------------------------------------------------------------------------
// <copyright file="MyModelPrivateSettersChild2.cs" company="OBeautifulCode">
//   Copyright (c) OBeautifulCode 2018. All rights reserved.
// </copyright>
// <auto-generated>
//   Sourced OBeautifulCode.CodeGen.ModelObject.Test.CodeGeneratorTest.GenerateModel()
// </auto-generated>
// --------------------------------------------------------------------------------------------------------------------

namespace OBeautifulCode.CodeGen.ModelObject.Test
{
    using System;
    using System.Collections.Generic;

    using OBeautifulCode.Assertion.Recipes;
    using OBeautifulCode.Type;

    public partial class MyModelPrivateSettersChild2 : MyModelPrivateSettersParent, IModelViaCodeGen
    {
        public MyModelPrivateSettersChild2(
            DateTime parentDateTimeProperty,
            DateTime? parentNullableDateTimeProperty,
            DateTime[] parentArrayOfDateTimeProperty,
            DateTime?[] parentArrayOfNullableDateTimeProperty,
            IReadOnlyCollection<DateTime> parentReadOnlyCollectionOfDateTimeProperty,
            IReadOnlyCollection<DateTime?> parentReadOnlyCollectionOfNullableDateTimeProperty,
            IReadOnlyList<DateTime> parentReadOnlyListOfDateTimeProperty,
            IReadOnlyList<DateTime?> parentReadOnlyListOfNullableDateTimeProperty,
            IReadOnlyDictionary<DateTime, DateTime> parentReadOnlyDictionaryOfDateTimeProperty,
            IReadOnlyDictionary<DateTime?, DateTime?> parentReadOnlyDictionaryOfNullableDateTimeProperty,
            IReadOnlyDictionary<string, IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>> parentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty,
            IReadOnlyList<IReadOnlyDictionary<DateTime, IReadOnlyList<string>>> parentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty,
            DateTime child2DateTimeProperty,
            DateTime? child2NullableDateTimeProperty,
            DateTime[] child2ArrayOfDateTimeProperty,
            DateTime?[] child2ArrayOfNullableDateTimeProperty,
            IReadOnlyCollection<DateTime> child2ReadOnlyCollectionOfDateTimeProperty,
            IReadOnlyCollection<DateTime?> child2ReadOnlyCollectionOfNullableDateTimeProperty,
            IReadOnlyList<DateTime> child2ReadOnlyListOfDateTimeProperty,
            IReadOnlyList<DateTime?> child2ReadOnlyListOfNullableDateTimeProperty,
            IReadOnlyDictionary<DateTime, DateTime> child2ReadOnlyDictionaryOfDateTimeProperty,
            IReadOnlyDictionary<DateTime?, DateTime?> child2ReadOnlyDictionaryOfNullableDateTimeProperty,
            IReadOnlyDictionary<string, IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>> child2ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty,
            IReadOnlyList<IReadOnlyDictionary<DateTime, IReadOnlyList<string>>> child2ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty)
            : base(parentDateTimeProperty, parentNullableDateTimeProperty, parentArrayOfDateTimeProperty, parentArrayOfNullableDateTimeProperty, parentReadOnlyCollectionOfDateTimeProperty, parentReadOnlyCollectionOfNullableDateTimeProperty, parentReadOnlyListOfDateTimeProperty, parentReadOnlyListOfNullableDateTimeProperty, parentReadOnlyDictionaryOfDateTimeProperty, parentReadOnlyDictionaryOfNullableDateTimeProperty, parentReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty, parentReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty)
        {
            new { child2ArrayOfDateTimeProperty }.AsArg().Must().NotBeNullNorEmptyEnumerable();
            new { child2ArrayOfNullableDateTimeProperty }.AsArg().Must().NotBeNullNorEmptyEnumerable();
            new { child2ReadOnlyCollectionOfDateTimeProperty }.AsArg().Must().NotBeNullNorEmptyEnumerable();
            new { child2ReadOnlyCollectionOfNullableDateTimeProperty }.AsArg().Must().NotBeNullNorEmptyEnumerable();
            new { child2ReadOnlyListOfDateTimeProperty }.AsArg().Must().NotBeNullNorEmptyEnumerable();
            new { child2ReadOnlyListOfNullableDateTimeProperty }.AsArg().Must().NotBeNullNorEmptyEnumerable();
            new { child2ReadOnlyDictionaryOfDateTimeProperty }.AsArg().Must().NotBeNullNorEmptyDictionary();
            new { child2ReadOnlyDictionaryOfNullableDateTimeProperty }.AsArg().Must().NotBeNullNorEmptyDictionary();
            new { child2ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty }.AsArg().Must().NotBeNullNorEmptyDictionaryNorContainAnyNullValues();
            new { child2ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty }.AsArg().Must().NotBeNullNorEmptyEnumerableNorContainAnyNulls();

            this.Child2DateTimeProperty = child2DateTimeProperty;
            this.Child2NullableDateTimeProperty = child2NullableDateTimeProperty;
            this.Child2ArrayOfDateTimeProperty = child2ArrayOfDateTimeProperty;
            this.Child2ArrayOfNullableDateTimeProperty = child2ArrayOfNullableDateTimeProperty;
            this.Child2ReadOnlyCollectionOfDateTimeProperty = child2ReadOnlyCollectionOfDateTimeProperty;
            this.Child2ReadOnlyCollectionOfNullableDateTimeProperty = child2ReadOnlyCollectionOfNullableDateTimeProperty;
            this.Child2ReadOnlyListOfDateTimeProperty = child2ReadOnlyListOfDateTimeProperty;
            this.Child2ReadOnlyListOfNullableDateTimeProperty = child2ReadOnlyListOfNullableDateTimeProperty;
            this.Child2ReadOnlyDictionaryOfDateTimeProperty = child2ReadOnlyDictionaryOfDateTimeProperty;
            this.Child2ReadOnlyDictionaryOfNullableDateTimeProperty = child2ReadOnlyDictionaryOfNullableDateTimeProperty;
            this.Child2ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty = child2ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty;
            this.Child2ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty = child2ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty;
        }

        public DateTime Child2DateTimeProperty { get; private set; }

        public DateTime? Child2NullableDateTimeProperty { get; private set; }

        public DateTime[] Child2ArrayOfDateTimeProperty { get; private set; }

        public DateTime?[] Child2ArrayOfNullableDateTimeProperty { get; private set; }

        public IReadOnlyCollection<DateTime> Child2ReadOnlyCollectionOfDateTimeProperty { get; private set; }

        public IReadOnlyCollection<DateTime?> Child2ReadOnlyCollectionOfNullableDateTimeProperty { get; private set; }

        public IReadOnlyList<DateTime> Child2ReadOnlyListOfDateTimeProperty { get; private set; }

        public IReadOnlyList<DateTime?> Child2ReadOnlyListOfNullableDateTimeProperty { get; private set; }

        public IReadOnlyDictionary<DateTime, DateTime> Child2ReadOnlyDictionaryOfDateTimeProperty { get; private set; }

        public IReadOnlyDictionary<DateTime?, DateTime?> Child2ReadOnlyDictionaryOfNullableDateTimeProperty { get; private set; }

        public IReadOnlyDictionary<string, IReadOnlyDictionary<DateTime, IReadOnlyDictionary<ModelClass, IReadOnlyList<string>>>> Child2ReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyDictionaryOfReadOnlyListOfStringProperty { get; private set; }

        public IReadOnlyList<IReadOnlyDictionary<DateTime, IReadOnlyList<string>>> Child2ReadOnlyListOfReadOnlyDictionaryOfReadOnlyListOfStringProperty { get; private set; }
    }
}