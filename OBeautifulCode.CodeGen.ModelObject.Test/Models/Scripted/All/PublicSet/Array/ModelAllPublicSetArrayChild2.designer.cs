// --------------------------------------------------------------------------------------------------------------------
// <auto-generated>
//   Generated using OBeautifulCode.CodeGen.ModelObject (1.0.0.0)
// </auto-generated>
// --------------------------------------------------------------------------------------------------------------------

namespace OBeautifulCode.CodeGen.ModelObject.Test
{
    using global::System;
    using global::System.CodeDom.Compiler;
    using global::System.Collections.Concurrent;
    using global::System.Collections.Generic;
    using global::System.Collections.ObjectModel;
    using global::System.Diagnostics.CodeAnalysis;
    using global::System.Globalization;
    using global::System.Linq;

    using global::OBeautifulCode.Equality.Recipes;
    using global::OBeautifulCode.Type;
    using global::OBeautifulCode.Type.Recipes;

    using static global::System.FormattableString;

    [Serializable]
    public partial class ModelAllPublicSetArrayChild2 : IModel<ModelAllPublicSetArrayChild2>
    {
        /// <summary>
        /// Determines whether two objects of type <see cref="ModelAllPublicSetArrayChild2"/> are equal.
        /// </summary>
        /// <param name="left">The object to the left of the equality operator.</param>
        /// <param name="right">The object to the right of the equality operator.</param>
        /// <returns>true if the two items are equal; otherwise false.</returns>
        public static bool operator ==(ModelAllPublicSetArrayChild2 left, ModelAllPublicSetArrayChild2 right)
        {
            if (ReferenceEquals(left, right))
            {
                return true;
            }

            if (ReferenceEquals(left, null) || ReferenceEquals(right, null))
            {
                return false;
            }

            var result = left.Equals(right);

            return result;
        }

        /// <summary>
        /// Determines whether two objects of type <see cref="ModelAllPublicSetArrayChild2"/> are not equal.
        /// </summary>
        /// <param name="left">The object to the left of the equality operator.</param>
        /// <param name="right">The object to the right of the equality operator.</param>
        /// <returns>true if the two items are not equal; otherwise false.</returns>
        public static bool operator !=(ModelAllPublicSetArrayChild2 left, ModelAllPublicSetArrayChild2 right) => !(left == right);

        /// <inheritdoc />
        public bool Equals(ModelAllPublicSetArrayChild2 other)
        {
            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (ReferenceEquals(other, null))
            {
                return false;
            }

            var result = this.ParentArrayOfBoolProperty.IsEqualTo(other.ParentArrayOfBoolProperty)
                      && this.ParentArrayOfIntProperty.IsEqualTo(other.ParentArrayOfIntProperty)
                      && this.ParentArrayOfStringProperty.IsEqualTo(other.ParentArrayOfStringProperty)
                      && this.ParentArrayOfGuidProperty.IsEqualTo(other.ParentArrayOfGuidProperty)
                      && this.ParentArrayOfDateTimeProperty.IsEqualTo(other.ParentArrayOfDateTimeProperty)
                      && this.ParentArrayOfCustomEnumProperty.IsEqualTo(other.ParentArrayOfCustomEnumProperty)
                      && this.ParentArrayOfCustomFlagsEnumProperty.IsEqualTo(other.ParentArrayOfCustomFlagsEnumProperty)
                      && this.ParentArrayOfCustomClassProperty.IsEqualTo(other.ParentArrayOfCustomClassProperty)
                      && this.ParentArrayOfCustomBaseClassProperty.IsEqualTo(other.ParentArrayOfCustomBaseClassProperty)
                      && this.Child2ArrayOfBoolProperty.IsEqualTo(other.Child2ArrayOfBoolProperty)
                      && this.Child2ArrayOfIntProperty.IsEqualTo(other.Child2ArrayOfIntProperty)
                      && this.Child2ArrayOfStringProperty.IsEqualTo(other.Child2ArrayOfStringProperty)
                      && this.Child2ArrayOfGuidProperty.IsEqualTo(other.Child2ArrayOfGuidProperty)
                      && this.Child2ArrayOfDateTimeProperty.IsEqualTo(other.Child2ArrayOfDateTimeProperty)
                      && this.Child2ArrayOfCustomEnumProperty.IsEqualTo(other.Child2ArrayOfCustomEnumProperty)
                      && this.Child2ArrayOfCustomFlagsEnumProperty.IsEqualTo(other.Child2ArrayOfCustomFlagsEnumProperty)
                      && this.Child2ArrayOfCustomClassProperty.IsEqualTo(other.Child2ArrayOfCustomClassProperty)
                      && this.Child2ArrayOfCustomBaseClassProperty.IsEqualTo(other.Child2ArrayOfCustomBaseClassProperty);

            return result;
        }

        /// <inheritdoc />
        public override bool Equals(object obj) => this == (obj as ModelAllPublicSetArrayChild2);

        /// <inheritdoc />
        public override int GetHashCode() => HashCodeHelper.Initialize()
            .Hash(this.ParentArrayOfBoolProperty)
            .Hash(this.ParentArrayOfIntProperty)
            .Hash(this.ParentArrayOfStringProperty)
            .Hash(this.ParentArrayOfGuidProperty)
            .Hash(this.ParentArrayOfDateTimeProperty)
            .Hash(this.ParentArrayOfCustomEnumProperty)
            .Hash(this.ParentArrayOfCustomFlagsEnumProperty)
            .Hash(this.ParentArrayOfCustomClassProperty)
            .Hash(this.ParentArrayOfCustomBaseClassProperty)
            .Hash(this.Child2ArrayOfBoolProperty)
            .Hash(this.Child2ArrayOfIntProperty)
            .Hash(this.Child2ArrayOfStringProperty)
            .Hash(this.Child2ArrayOfGuidProperty)
            .Hash(this.Child2ArrayOfDateTimeProperty)
            .Hash(this.Child2ArrayOfCustomEnumProperty)
            .Hash(this.Child2ArrayOfCustomFlagsEnumProperty)
            .Hash(this.Child2ArrayOfCustomClassProperty)
            .Hash(this.Child2ArrayOfCustomBaseClassProperty)
            .Value;

        /// <inheritdoc />
        public new ModelAllPublicSetArrayChild2 DeepClone() => (ModelAllPublicSetArrayChild2)this.DeepCloneInternal();

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002: DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        public override ModelAllPublicSetArrayParent DeepCloneWithParentArrayOfBoolProperty(bool[] parentArrayOfBoolProperty)
        {
            var result = new ModelAllPublicSetArrayChild2
                             {
                                 ParentArrayOfBoolProperty            = parentArrayOfBoolProperty,
                                 ParentArrayOfIntProperty             = this.ParentArrayOfIntProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfStringProperty          = this.ParentArrayOfStringProperty?.Select(i => i?.Clone().ToString()).ToArray(),
                                 ParentArrayOfGuidProperty            = this.ParentArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfDateTimeProperty        = this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomEnumProperty      = this.ParentArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomFlagsEnumProperty = this.ParentArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomClassProperty     = this.ParentArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 ParentArrayOfCustomBaseClassProperty = this.ParentArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 Child2ArrayOfBoolProperty            = this.Child2ArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfIntProperty             = this.Child2ArrayOfIntProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfStringProperty          = this.Child2ArrayOfStringProperty?.Select(i => i?.Clone().ToString()).ToArray(),
                                 Child2ArrayOfGuidProperty            = this.Child2ArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfDateTimeProperty        = this.Child2ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomEnumProperty      = this.Child2ArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomFlagsEnumProperty = this.Child2ArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomClassProperty     = this.Child2ArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 Child2ArrayOfCustomBaseClassProperty = this.Child2ArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                             };

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002: DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        public override ModelAllPublicSetArrayParent DeepCloneWithParentArrayOfIntProperty(int[] parentArrayOfIntProperty)
        {
            var result = new ModelAllPublicSetArrayChild2
                             {
                                 ParentArrayOfBoolProperty            = this.ParentArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfIntProperty             = parentArrayOfIntProperty,
                                 ParentArrayOfStringProperty          = this.ParentArrayOfStringProperty?.Select(i => i?.Clone().ToString()).ToArray(),
                                 ParentArrayOfGuidProperty            = this.ParentArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfDateTimeProperty        = this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomEnumProperty      = this.ParentArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomFlagsEnumProperty = this.ParentArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomClassProperty     = this.ParentArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 ParentArrayOfCustomBaseClassProperty = this.ParentArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 Child2ArrayOfBoolProperty            = this.Child2ArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfIntProperty             = this.Child2ArrayOfIntProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfStringProperty          = this.Child2ArrayOfStringProperty?.Select(i => i?.Clone().ToString()).ToArray(),
                                 Child2ArrayOfGuidProperty            = this.Child2ArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfDateTimeProperty        = this.Child2ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomEnumProperty      = this.Child2ArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomFlagsEnumProperty = this.Child2ArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomClassProperty     = this.Child2ArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 Child2ArrayOfCustomBaseClassProperty = this.Child2ArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                             };

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002: DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        public override ModelAllPublicSetArrayParent DeepCloneWithParentArrayOfStringProperty(string[] parentArrayOfStringProperty)
        {
            var result = new ModelAllPublicSetArrayChild2
                             {
                                 ParentArrayOfBoolProperty            = this.ParentArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfIntProperty             = this.ParentArrayOfIntProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfStringProperty          = parentArrayOfStringProperty,
                                 ParentArrayOfGuidProperty            = this.ParentArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfDateTimeProperty        = this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomEnumProperty      = this.ParentArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomFlagsEnumProperty = this.ParentArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomClassProperty     = this.ParentArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 ParentArrayOfCustomBaseClassProperty = this.ParentArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 Child2ArrayOfBoolProperty            = this.Child2ArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfIntProperty             = this.Child2ArrayOfIntProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfStringProperty          = this.Child2ArrayOfStringProperty?.Select(i => i?.Clone().ToString()).ToArray(),
                                 Child2ArrayOfGuidProperty            = this.Child2ArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfDateTimeProperty        = this.Child2ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomEnumProperty      = this.Child2ArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomFlagsEnumProperty = this.Child2ArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomClassProperty     = this.Child2ArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 Child2ArrayOfCustomBaseClassProperty = this.Child2ArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                             };

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002: DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        public override ModelAllPublicSetArrayParent DeepCloneWithParentArrayOfGuidProperty(Guid[] parentArrayOfGuidProperty)
        {
            var result = new ModelAllPublicSetArrayChild2
                             {
                                 ParentArrayOfBoolProperty            = this.ParentArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfIntProperty             = this.ParentArrayOfIntProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfStringProperty          = this.ParentArrayOfStringProperty?.Select(i => i?.Clone().ToString()).ToArray(),
                                 ParentArrayOfGuidProperty            = parentArrayOfGuidProperty,
                                 ParentArrayOfDateTimeProperty        = this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomEnumProperty      = this.ParentArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomFlagsEnumProperty = this.ParentArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomClassProperty     = this.ParentArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 ParentArrayOfCustomBaseClassProperty = this.ParentArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 Child2ArrayOfBoolProperty            = this.Child2ArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfIntProperty             = this.Child2ArrayOfIntProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfStringProperty          = this.Child2ArrayOfStringProperty?.Select(i => i?.Clone().ToString()).ToArray(),
                                 Child2ArrayOfGuidProperty            = this.Child2ArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfDateTimeProperty        = this.Child2ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomEnumProperty      = this.Child2ArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomFlagsEnumProperty = this.Child2ArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomClassProperty     = this.Child2ArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 Child2ArrayOfCustomBaseClassProperty = this.Child2ArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                             };

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002: DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        public override ModelAllPublicSetArrayParent DeepCloneWithParentArrayOfDateTimeProperty(DateTime[] parentArrayOfDateTimeProperty)
        {
            var result = new ModelAllPublicSetArrayChild2
                             {
                                 ParentArrayOfBoolProperty            = this.ParentArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfIntProperty             = this.ParentArrayOfIntProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfStringProperty          = this.ParentArrayOfStringProperty?.Select(i => i?.Clone().ToString()).ToArray(),
                                 ParentArrayOfGuidProperty            = this.ParentArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfDateTimeProperty        = parentArrayOfDateTimeProperty,
                                 ParentArrayOfCustomEnumProperty      = this.ParentArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomFlagsEnumProperty = this.ParentArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomClassProperty     = this.ParentArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 ParentArrayOfCustomBaseClassProperty = this.ParentArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 Child2ArrayOfBoolProperty            = this.Child2ArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfIntProperty             = this.Child2ArrayOfIntProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfStringProperty          = this.Child2ArrayOfStringProperty?.Select(i => i?.Clone().ToString()).ToArray(),
                                 Child2ArrayOfGuidProperty            = this.Child2ArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfDateTimeProperty        = this.Child2ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomEnumProperty      = this.Child2ArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomFlagsEnumProperty = this.Child2ArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomClassProperty     = this.Child2ArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 Child2ArrayOfCustomBaseClassProperty = this.Child2ArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                             };

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002: DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        public override ModelAllPublicSetArrayParent DeepCloneWithParentArrayOfCustomEnumProperty(CustomEnum[] parentArrayOfCustomEnumProperty)
        {
            var result = new ModelAllPublicSetArrayChild2
                             {
                                 ParentArrayOfBoolProperty            = this.ParentArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfIntProperty             = this.ParentArrayOfIntProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfStringProperty          = this.ParentArrayOfStringProperty?.Select(i => i?.Clone().ToString()).ToArray(),
                                 ParentArrayOfGuidProperty            = this.ParentArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfDateTimeProperty        = this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomEnumProperty      = parentArrayOfCustomEnumProperty,
                                 ParentArrayOfCustomFlagsEnumProperty = this.ParentArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomClassProperty     = this.ParentArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 ParentArrayOfCustomBaseClassProperty = this.ParentArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 Child2ArrayOfBoolProperty            = this.Child2ArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfIntProperty             = this.Child2ArrayOfIntProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfStringProperty          = this.Child2ArrayOfStringProperty?.Select(i => i?.Clone().ToString()).ToArray(),
                                 Child2ArrayOfGuidProperty            = this.Child2ArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfDateTimeProperty        = this.Child2ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomEnumProperty      = this.Child2ArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomFlagsEnumProperty = this.Child2ArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomClassProperty     = this.Child2ArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 Child2ArrayOfCustomBaseClassProperty = this.Child2ArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                             };

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002: DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        public override ModelAllPublicSetArrayParent DeepCloneWithParentArrayOfCustomFlagsEnumProperty(CustomFlagsEnum[] parentArrayOfCustomFlagsEnumProperty)
        {
            var result = new ModelAllPublicSetArrayChild2
                             {
                                 ParentArrayOfBoolProperty            = this.ParentArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfIntProperty             = this.ParentArrayOfIntProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfStringProperty          = this.ParentArrayOfStringProperty?.Select(i => i?.Clone().ToString()).ToArray(),
                                 ParentArrayOfGuidProperty            = this.ParentArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfDateTimeProperty        = this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomEnumProperty      = this.ParentArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomFlagsEnumProperty = parentArrayOfCustomFlagsEnumProperty,
                                 ParentArrayOfCustomClassProperty     = this.ParentArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 ParentArrayOfCustomBaseClassProperty = this.ParentArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 Child2ArrayOfBoolProperty            = this.Child2ArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfIntProperty             = this.Child2ArrayOfIntProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfStringProperty          = this.Child2ArrayOfStringProperty?.Select(i => i?.Clone().ToString()).ToArray(),
                                 Child2ArrayOfGuidProperty            = this.Child2ArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfDateTimeProperty        = this.Child2ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomEnumProperty      = this.Child2ArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomFlagsEnumProperty = this.Child2ArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomClassProperty     = this.Child2ArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 Child2ArrayOfCustomBaseClassProperty = this.Child2ArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                             };

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002: DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        public override ModelAllPublicSetArrayParent DeepCloneWithParentArrayOfCustomClassProperty(CustomClass[] parentArrayOfCustomClassProperty)
        {
            var result = new ModelAllPublicSetArrayChild2
                             {
                                 ParentArrayOfBoolProperty            = this.ParentArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfIntProperty             = this.ParentArrayOfIntProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfStringProperty          = this.ParentArrayOfStringProperty?.Select(i => i?.Clone().ToString()).ToArray(),
                                 ParentArrayOfGuidProperty            = this.ParentArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfDateTimeProperty        = this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomEnumProperty      = this.ParentArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomFlagsEnumProperty = this.ParentArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomClassProperty     = parentArrayOfCustomClassProperty,
                                 ParentArrayOfCustomBaseClassProperty = this.ParentArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 Child2ArrayOfBoolProperty            = this.Child2ArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfIntProperty             = this.Child2ArrayOfIntProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfStringProperty          = this.Child2ArrayOfStringProperty?.Select(i => i?.Clone().ToString()).ToArray(),
                                 Child2ArrayOfGuidProperty            = this.Child2ArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfDateTimeProperty        = this.Child2ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomEnumProperty      = this.Child2ArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomFlagsEnumProperty = this.Child2ArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomClassProperty     = this.Child2ArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 Child2ArrayOfCustomBaseClassProperty = this.Child2ArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                             };

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002: DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        public override ModelAllPublicSetArrayParent DeepCloneWithParentArrayOfCustomBaseClassProperty(CustomBaseClass[] parentArrayOfCustomBaseClassProperty)
        {
            var result = new ModelAllPublicSetArrayChild2
                             {
                                 ParentArrayOfBoolProperty            = this.ParentArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfIntProperty             = this.ParentArrayOfIntProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfStringProperty          = this.ParentArrayOfStringProperty?.Select(i => i?.Clone().ToString()).ToArray(),
                                 ParentArrayOfGuidProperty            = this.ParentArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfDateTimeProperty        = this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomEnumProperty      = this.ParentArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomFlagsEnumProperty = this.ParentArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomClassProperty     = this.ParentArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 ParentArrayOfCustomBaseClassProperty = parentArrayOfCustomBaseClassProperty,
                                 Child2ArrayOfBoolProperty            = this.Child2ArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfIntProperty             = this.Child2ArrayOfIntProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfStringProperty          = this.Child2ArrayOfStringProperty?.Select(i => i?.Clone().ToString()).ToArray(),
                                 Child2ArrayOfGuidProperty            = this.Child2ArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfDateTimeProperty        = this.Child2ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomEnumProperty      = this.Child2ArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomFlagsEnumProperty = this.Child2ArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomClassProperty     = this.Child2ArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 Child2ArrayOfCustomBaseClassProperty = this.Child2ArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2ArrayOfBoolProperty" />.
        /// </summary>
        /// <param name="child2ArrayOfBoolProperty">The new <see cref="Child2ArrayOfBoolProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPublicSetArrayChild2" /> using the specified <paramref name="child2ArrayOfBoolProperty" /> for <see cref="Child2ArrayOfBoolProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002: DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        public ModelAllPublicSetArrayChild2 DeepCloneWithChild2ArrayOfBoolProperty(bool[] child2ArrayOfBoolProperty)
        {
            var result = new ModelAllPublicSetArrayChild2
                             {
                                 ParentArrayOfBoolProperty            = this.ParentArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfIntProperty             = this.ParentArrayOfIntProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfStringProperty          = this.ParentArrayOfStringProperty?.Select(i => i?.Clone().ToString()).ToArray(),
                                 ParentArrayOfGuidProperty            = this.ParentArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfDateTimeProperty        = this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomEnumProperty      = this.ParentArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomFlagsEnumProperty = this.ParentArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomClassProperty     = this.ParentArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 ParentArrayOfCustomBaseClassProperty = this.ParentArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 Child2ArrayOfBoolProperty            = child2ArrayOfBoolProperty,
                                 Child2ArrayOfIntProperty             = this.Child2ArrayOfIntProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfStringProperty          = this.Child2ArrayOfStringProperty?.Select(i => i?.Clone().ToString()).ToArray(),
                                 Child2ArrayOfGuidProperty            = this.Child2ArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfDateTimeProperty        = this.Child2ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomEnumProperty      = this.Child2ArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomFlagsEnumProperty = this.Child2ArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomClassProperty     = this.Child2ArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 Child2ArrayOfCustomBaseClassProperty = this.Child2ArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2ArrayOfIntProperty" />.
        /// </summary>
        /// <param name="child2ArrayOfIntProperty">The new <see cref="Child2ArrayOfIntProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPublicSetArrayChild2" /> using the specified <paramref name="child2ArrayOfIntProperty" /> for <see cref="Child2ArrayOfIntProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002: DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        public ModelAllPublicSetArrayChild2 DeepCloneWithChild2ArrayOfIntProperty(int[] child2ArrayOfIntProperty)
        {
            var result = new ModelAllPublicSetArrayChild2
                             {
                                 ParentArrayOfBoolProperty            = this.ParentArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfIntProperty             = this.ParentArrayOfIntProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfStringProperty          = this.ParentArrayOfStringProperty?.Select(i => i?.Clone().ToString()).ToArray(),
                                 ParentArrayOfGuidProperty            = this.ParentArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfDateTimeProperty        = this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomEnumProperty      = this.ParentArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomFlagsEnumProperty = this.ParentArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomClassProperty     = this.ParentArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 ParentArrayOfCustomBaseClassProperty = this.ParentArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 Child2ArrayOfBoolProperty            = this.Child2ArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfIntProperty             = child2ArrayOfIntProperty,
                                 Child2ArrayOfStringProperty          = this.Child2ArrayOfStringProperty?.Select(i => i?.Clone().ToString()).ToArray(),
                                 Child2ArrayOfGuidProperty            = this.Child2ArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfDateTimeProperty        = this.Child2ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomEnumProperty      = this.Child2ArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomFlagsEnumProperty = this.Child2ArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomClassProperty     = this.Child2ArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 Child2ArrayOfCustomBaseClassProperty = this.Child2ArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2ArrayOfStringProperty" />.
        /// </summary>
        /// <param name="child2ArrayOfStringProperty">The new <see cref="Child2ArrayOfStringProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPublicSetArrayChild2" /> using the specified <paramref name="child2ArrayOfStringProperty" /> for <see cref="Child2ArrayOfStringProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002: DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        public ModelAllPublicSetArrayChild2 DeepCloneWithChild2ArrayOfStringProperty(string[] child2ArrayOfStringProperty)
        {
            var result = new ModelAllPublicSetArrayChild2
                             {
                                 ParentArrayOfBoolProperty            = this.ParentArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfIntProperty             = this.ParentArrayOfIntProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfStringProperty          = this.ParentArrayOfStringProperty?.Select(i => i?.Clone().ToString()).ToArray(),
                                 ParentArrayOfGuidProperty            = this.ParentArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfDateTimeProperty        = this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomEnumProperty      = this.ParentArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomFlagsEnumProperty = this.ParentArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomClassProperty     = this.ParentArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 ParentArrayOfCustomBaseClassProperty = this.ParentArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 Child2ArrayOfBoolProperty            = this.Child2ArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfIntProperty             = this.Child2ArrayOfIntProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfStringProperty          = child2ArrayOfStringProperty,
                                 Child2ArrayOfGuidProperty            = this.Child2ArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfDateTimeProperty        = this.Child2ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomEnumProperty      = this.Child2ArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomFlagsEnumProperty = this.Child2ArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomClassProperty     = this.Child2ArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 Child2ArrayOfCustomBaseClassProperty = this.Child2ArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2ArrayOfGuidProperty" />.
        /// </summary>
        /// <param name="child2ArrayOfGuidProperty">The new <see cref="Child2ArrayOfGuidProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPublicSetArrayChild2" /> using the specified <paramref name="child2ArrayOfGuidProperty" /> for <see cref="Child2ArrayOfGuidProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002: DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        public ModelAllPublicSetArrayChild2 DeepCloneWithChild2ArrayOfGuidProperty(Guid[] child2ArrayOfGuidProperty)
        {
            var result = new ModelAllPublicSetArrayChild2
                             {
                                 ParentArrayOfBoolProperty            = this.ParentArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfIntProperty             = this.ParentArrayOfIntProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfStringProperty          = this.ParentArrayOfStringProperty?.Select(i => i?.Clone().ToString()).ToArray(),
                                 ParentArrayOfGuidProperty            = this.ParentArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfDateTimeProperty        = this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomEnumProperty      = this.ParentArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomFlagsEnumProperty = this.ParentArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomClassProperty     = this.ParentArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 ParentArrayOfCustomBaseClassProperty = this.ParentArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 Child2ArrayOfBoolProperty            = this.Child2ArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfIntProperty             = this.Child2ArrayOfIntProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfStringProperty          = this.Child2ArrayOfStringProperty?.Select(i => i?.Clone().ToString()).ToArray(),
                                 Child2ArrayOfGuidProperty            = child2ArrayOfGuidProperty,
                                 Child2ArrayOfDateTimeProperty        = this.Child2ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomEnumProperty      = this.Child2ArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomFlagsEnumProperty = this.Child2ArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomClassProperty     = this.Child2ArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 Child2ArrayOfCustomBaseClassProperty = this.Child2ArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2ArrayOfDateTimeProperty" />.
        /// </summary>
        /// <param name="child2ArrayOfDateTimeProperty">The new <see cref="Child2ArrayOfDateTimeProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPublicSetArrayChild2" /> using the specified <paramref name="child2ArrayOfDateTimeProperty" /> for <see cref="Child2ArrayOfDateTimeProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002: DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        public ModelAllPublicSetArrayChild2 DeepCloneWithChild2ArrayOfDateTimeProperty(DateTime[] child2ArrayOfDateTimeProperty)
        {
            var result = new ModelAllPublicSetArrayChild2
                             {
                                 ParentArrayOfBoolProperty            = this.ParentArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfIntProperty             = this.ParentArrayOfIntProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfStringProperty          = this.ParentArrayOfStringProperty?.Select(i => i?.Clone().ToString()).ToArray(),
                                 ParentArrayOfGuidProperty            = this.ParentArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfDateTimeProperty        = this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomEnumProperty      = this.ParentArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomFlagsEnumProperty = this.ParentArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomClassProperty     = this.ParentArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 ParentArrayOfCustomBaseClassProperty = this.ParentArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 Child2ArrayOfBoolProperty            = this.Child2ArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfIntProperty             = this.Child2ArrayOfIntProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfStringProperty          = this.Child2ArrayOfStringProperty?.Select(i => i?.Clone().ToString()).ToArray(),
                                 Child2ArrayOfGuidProperty            = this.Child2ArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfDateTimeProperty        = child2ArrayOfDateTimeProperty,
                                 Child2ArrayOfCustomEnumProperty      = this.Child2ArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomFlagsEnumProperty = this.Child2ArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomClassProperty     = this.Child2ArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 Child2ArrayOfCustomBaseClassProperty = this.Child2ArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2ArrayOfCustomEnumProperty" />.
        /// </summary>
        /// <param name="child2ArrayOfCustomEnumProperty">The new <see cref="Child2ArrayOfCustomEnumProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPublicSetArrayChild2" /> using the specified <paramref name="child2ArrayOfCustomEnumProperty" /> for <see cref="Child2ArrayOfCustomEnumProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002: DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        public ModelAllPublicSetArrayChild2 DeepCloneWithChild2ArrayOfCustomEnumProperty(CustomEnum[] child2ArrayOfCustomEnumProperty)
        {
            var result = new ModelAllPublicSetArrayChild2
                             {
                                 ParentArrayOfBoolProperty            = this.ParentArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfIntProperty             = this.ParentArrayOfIntProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfStringProperty          = this.ParentArrayOfStringProperty?.Select(i => i?.Clone().ToString()).ToArray(),
                                 ParentArrayOfGuidProperty            = this.ParentArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfDateTimeProperty        = this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomEnumProperty      = this.ParentArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomFlagsEnumProperty = this.ParentArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomClassProperty     = this.ParentArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 ParentArrayOfCustomBaseClassProperty = this.ParentArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 Child2ArrayOfBoolProperty            = this.Child2ArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfIntProperty             = this.Child2ArrayOfIntProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfStringProperty          = this.Child2ArrayOfStringProperty?.Select(i => i?.Clone().ToString()).ToArray(),
                                 Child2ArrayOfGuidProperty            = this.Child2ArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfDateTimeProperty        = this.Child2ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomEnumProperty      = child2ArrayOfCustomEnumProperty,
                                 Child2ArrayOfCustomFlagsEnumProperty = this.Child2ArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomClassProperty     = this.Child2ArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 Child2ArrayOfCustomBaseClassProperty = this.Child2ArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2ArrayOfCustomFlagsEnumProperty" />.
        /// </summary>
        /// <param name="child2ArrayOfCustomFlagsEnumProperty">The new <see cref="Child2ArrayOfCustomFlagsEnumProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPublicSetArrayChild2" /> using the specified <paramref name="child2ArrayOfCustomFlagsEnumProperty" /> for <see cref="Child2ArrayOfCustomFlagsEnumProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002: DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        public ModelAllPublicSetArrayChild2 DeepCloneWithChild2ArrayOfCustomFlagsEnumProperty(CustomFlagsEnum[] child2ArrayOfCustomFlagsEnumProperty)
        {
            var result = new ModelAllPublicSetArrayChild2
                             {
                                 ParentArrayOfBoolProperty            = this.ParentArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfIntProperty             = this.ParentArrayOfIntProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfStringProperty          = this.ParentArrayOfStringProperty?.Select(i => i?.Clone().ToString()).ToArray(),
                                 ParentArrayOfGuidProperty            = this.ParentArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfDateTimeProperty        = this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomEnumProperty      = this.ParentArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomFlagsEnumProperty = this.ParentArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomClassProperty     = this.ParentArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 ParentArrayOfCustomBaseClassProperty = this.ParentArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 Child2ArrayOfBoolProperty            = this.Child2ArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfIntProperty             = this.Child2ArrayOfIntProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfStringProperty          = this.Child2ArrayOfStringProperty?.Select(i => i?.Clone().ToString()).ToArray(),
                                 Child2ArrayOfGuidProperty            = this.Child2ArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfDateTimeProperty        = this.Child2ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomEnumProperty      = this.Child2ArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomFlagsEnumProperty = child2ArrayOfCustomFlagsEnumProperty,
                                 Child2ArrayOfCustomClassProperty     = this.Child2ArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 Child2ArrayOfCustomBaseClassProperty = this.Child2ArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2ArrayOfCustomClassProperty" />.
        /// </summary>
        /// <param name="child2ArrayOfCustomClassProperty">The new <see cref="Child2ArrayOfCustomClassProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPublicSetArrayChild2" /> using the specified <paramref name="child2ArrayOfCustomClassProperty" /> for <see cref="Child2ArrayOfCustomClassProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002: DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        public ModelAllPublicSetArrayChild2 DeepCloneWithChild2ArrayOfCustomClassProperty(CustomClass[] child2ArrayOfCustomClassProperty)
        {
            var result = new ModelAllPublicSetArrayChild2
                             {
                                 ParentArrayOfBoolProperty            = this.ParentArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfIntProperty             = this.ParentArrayOfIntProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfStringProperty          = this.ParentArrayOfStringProperty?.Select(i => i?.Clone().ToString()).ToArray(),
                                 ParentArrayOfGuidProperty            = this.ParentArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfDateTimeProperty        = this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomEnumProperty      = this.ParentArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomFlagsEnumProperty = this.ParentArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomClassProperty     = this.ParentArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 ParentArrayOfCustomBaseClassProperty = this.ParentArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 Child2ArrayOfBoolProperty            = this.Child2ArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfIntProperty             = this.Child2ArrayOfIntProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfStringProperty          = this.Child2ArrayOfStringProperty?.Select(i => i?.Clone().ToString()).ToArray(),
                                 Child2ArrayOfGuidProperty            = this.Child2ArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfDateTimeProperty        = this.Child2ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomEnumProperty      = this.Child2ArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomFlagsEnumProperty = this.Child2ArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomClassProperty     = child2ArrayOfCustomClassProperty,
                                 Child2ArrayOfCustomBaseClassProperty = this.Child2ArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2ArrayOfCustomBaseClassProperty" />.
        /// </summary>
        /// <param name="child2ArrayOfCustomBaseClassProperty">The new <see cref="Child2ArrayOfCustomBaseClassProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPublicSetArrayChild2" /> using the specified <paramref name="child2ArrayOfCustomBaseClassProperty" /> for <see cref="Child2ArrayOfCustomBaseClassProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002: DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        public ModelAllPublicSetArrayChild2 DeepCloneWithChild2ArrayOfCustomBaseClassProperty(CustomBaseClass[] child2ArrayOfCustomBaseClassProperty)
        {
            var result = new ModelAllPublicSetArrayChild2
                             {
                                 ParentArrayOfBoolProperty            = this.ParentArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfIntProperty             = this.ParentArrayOfIntProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfStringProperty          = this.ParentArrayOfStringProperty?.Select(i => i?.Clone().ToString()).ToArray(),
                                 ParentArrayOfGuidProperty            = this.ParentArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfDateTimeProperty        = this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomEnumProperty      = this.ParentArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomFlagsEnumProperty = this.ParentArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomClassProperty     = this.ParentArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 ParentArrayOfCustomBaseClassProperty = this.ParentArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 Child2ArrayOfBoolProperty            = this.Child2ArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfIntProperty             = this.Child2ArrayOfIntProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfStringProperty          = this.Child2ArrayOfStringProperty?.Select(i => i?.Clone().ToString()).ToArray(),
                                 Child2ArrayOfGuidProperty            = this.Child2ArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfDateTimeProperty        = this.Child2ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomEnumProperty      = this.Child2ArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomFlagsEnumProperty = this.Child2ArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomClassProperty     = this.Child2ArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 Child2ArrayOfCustomBaseClassProperty = child2ArrayOfCustomBaseClassProperty,
                             };

            return result;
        }

        /// <inheritdoc />
        protected override ModelAllPublicSetArrayParent DeepCloneInternal()
        {
            var result = new ModelAllPublicSetArrayChild2
                             {
                                 ParentArrayOfBoolProperty            = this.ParentArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfIntProperty             = this.ParentArrayOfIntProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfStringProperty          = this.ParentArrayOfStringProperty?.Select(i => i?.Clone().ToString()).ToArray(),
                                 ParentArrayOfGuidProperty            = this.ParentArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfDateTimeProperty        = this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomEnumProperty      = this.ParentArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomFlagsEnumProperty = this.ParentArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 ParentArrayOfCustomClassProperty     = this.ParentArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 ParentArrayOfCustomBaseClassProperty = this.ParentArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 Child2ArrayOfBoolProperty            = this.Child2ArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfIntProperty             = this.Child2ArrayOfIntProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfStringProperty          = this.Child2ArrayOfStringProperty?.Select(i => i?.Clone().ToString()).ToArray(),
                                 Child2ArrayOfGuidProperty            = this.Child2ArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfDateTimeProperty        = this.Child2ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomEnumProperty      = this.Child2ArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomFlagsEnumProperty = this.Child2ArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 Child2ArrayOfCustomClassProperty     = this.Child2ArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 Child2ArrayOfCustomBaseClassProperty = this.Child2ArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                             };

            return result;
        }

        /// <inheritdoc />
        public override string ToString()
        {
            var result = Invariant($"OBeautifulCode.CodeGen.ModelObject.Test.ModelAllPublicSetArrayChild2: ParentArrayOfBoolProperty = {this.ParentArrayOfBoolProperty?.ToString() ?? "<null>"}, ParentArrayOfIntProperty = {this.ParentArrayOfIntProperty?.ToString() ?? "<null>"}, ParentArrayOfStringProperty = {this.ParentArrayOfStringProperty?.ToString() ?? "<null>"}, ParentArrayOfGuidProperty = {this.ParentArrayOfGuidProperty?.ToString() ?? "<null>"}, ParentArrayOfDateTimeProperty = {this.ParentArrayOfDateTimeProperty?.ToString() ?? "<null>"}, ParentArrayOfCustomEnumProperty = {this.ParentArrayOfCustomEnumProperty?.ToString() ?? "<null>"}, ParentArrayOfCustomFlagsEnumProperty = {this.ParentArrayOfCustomFlagsEnumProperty?.ToString() ?? "<null>"}, ParentArrayOfCustomClassProperty = {this.ParentArrayOfCustomClassProperty?.ToString() ?? "<null>"}, ParentArrayOfCustomBaseClassProperty = {this.ParentArrayOfCustomBaseClassProperty?.ToString() ?? "<null>"}, Child2ArrayOfBoolProperty = {this.Child2ArrayOfBoolProperty?.ToString() ?? "<null>"}, Child2ArrayOfIntProperty = {this.Child2ArrayOfIntProperty?.ToString() ?? "<null>"}, Child2ArrayOfStringProperty = {this.Child2ArrayOfStringProperty?.ToString() ?? "<null>"}, Child2ArrayOfGuidProperty = {this.Child2ArrayOfGuidProperty?.ToString() ?? "<null>"}, Child2ArrayOfDateTimeProperty = {this.Child2ArrayOfDateTimeProperty?.ToString() ?? "<null>"}, Child2ArrayOfCustomEnumProperty = {this.Child2ArrayOfCustomEnumProperty?.ToString() ?? "<null>"}, Child2ArrayOfCustomFlagsEnumProperty = {this.Child2ArrayOfCustomFlagsEnumProperty?.ToString() ?? "<null>"}, Child2ArrayOfCustomClassProperty = {this.Child2ArrayOfCustomClassProperty?.ToString() ?? "<null>"}, Child2ArrayOfCustomBaseClassProperty = {this.Child2ArrayOfCustomBaseClassProperty?.ToString() ?? "<null>"}.");

            return result;
        }
    }
}