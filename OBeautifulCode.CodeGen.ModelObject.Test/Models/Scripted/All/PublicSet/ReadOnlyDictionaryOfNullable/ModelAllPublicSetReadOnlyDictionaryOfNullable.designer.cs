// --------------------------------------------------------------------------------------------------------------------
// <auto-generated>
//   Generated using OBeautifulCode.CodeGen.ModelObject (1.0.0.0)
// </auto-generated>
// --------------------------------------------------------------------------------------------------------------------

namespace OBeautifulCode.CodeGen.ModelObject.Test
{
    using global::System;
    using global::System.CodeDom.Compiler;
    using global::System.Collections.Concurrent;
    using global::System.Collections.Generic;
    using global::System.Collections.ObjectModel;
    using global::System.Diagnostics.CodeAnalysis;
    using global::System.Globalization;
    using global::System.Linq;

    using global::OBeautifulCode.Cloning.Recipes;
    using global::OBeautifulCode.Equality.Recipes;
    using global::OBeautifulCode.Type;
    using global::OBeautifulCode.Type.Recipes;

    using static global::System.FormattableString;

    [Serializable]
    public partial class ModelAllPublicSetReadOnlyDictionaryOfNullable : IModel<ModelAllPublicSetReadOnlyDictionaryOfNullable>
    {
        /// <summary>
        /// Determines whether two objects of type <see cref="ModelAllPublicSetReadOnlyDictionaryOfNullable"/> are equal.
        /// </summary>
        /// <param name="left">The object to the left of the equality operator.</param>
        /// <param name="right">The object to the right of the equality operator.</param>
        /// <returns>true if the two items are equal; otherwise false.</returns>
        public static bool operator ==(ModelAllPublicSetReadOnlyDictionaryOfNullable left, ModelAllPublicSetReadOnlyDictionaryOfNullable right)
        {
            if (ReferenceEquals(left, right))
            {
                return true;
            }

            if (ReferenceEquals(left, null) || ReferenceEquals(right, null))
            {
                return false;
            }

            var result = left.Equals(right);

            return result;
        }

        /// <summary>
        /// Determines whether two objects of type <see cref="ModelAllPublicSetReadOnlyDictionaryOfNullable"/> are not equal.
        /// </summary>
        /// <param name="left">The object to the left of the equality operator.</param>
        /// <param name="right">The object to the right of the equality operator.</param>
        /// <returns>true if the two items are not equal; otherwise false.</returns>
        public static bool operator !=(ModelAllPublicSetReadOnlyDictionaryOfNullable left, ModelAllPublicSetReadOnlyDictionaryOfNullable right) => !(left == right);

        /// <inheritdoc />
        public bool Equals(ModelAllPublicSetReadOnlyDictionaryOfNullable other)
        {
            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (ReferenceEquals(other, null))
            {
                return false;
            }

            var result = this.ReadOnlyDictionaryInterfaceOfNullableBoolProperty.IsEqualTo(other.ReadOnlyDictionaryInterfaceOfNullableBoolProperty)
                      && this.ReadOnlyDictionaryInterfaceOfNullableIntProperty.IsEqualTo(other.ReadOnlyDictionaryInterfaceOfNullableIntProperty)
                      && this.ReadOnlyDictionaryInterfaceOfNullableGuidProperty.IsEqualTo(other.ReadOnlyDictionaryInterfaceOfNullableGuidProperty)
                      && this.ReadOnlyDictionaryInterfaceOfNullableCustomEnumProperty.IsEqualTo(other.ReadOnlyDictionaryInterfaceOfNullableCustomEnumProperty)
                      && this.ReadOnlyDictionaryInterfaceOfNullableCustomEnumValidatedNotDefaultProperty.IsEqualTo(other.ReadOnlyDictionaryInterfaceOfNullableCustomEnumValidatedNotDefaultProperty)
                      && this.ReadOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty.IsEqualTo(other.ReadOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty);

            return result;
        }

        /// <inheritdoc />
        public override bool Equals(object obj) => this == (obj as ModelAllPublicSetReadOnlyDictionaryOfNullable);

        /// <inheritdoc />
        public override int GetHashCode() => HashCodeHelper.Initialize()
            .Hash(this.ReadOnlyDictionaryInterfaceOfNullableBoolProperty)
            .Hash(this.ReadOnlyDictionaryInterfaceOfNullableIntProperty)
            .Hash(this.ReadOnlyDictionaryInterfaceOfNullableGuidProperty)
            .Hash(this.ReadOnlyDictionaryInterfaceOfNullableCustomEnumProperty)
            .Hash(this.ReadOnlyDictionaryInterfaceOfNullableCustomEnumValidatedNotDefaultProperty)
            .Hash(this.ReadOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty)
            .Value;

        /// <inheritdoc />
        public object Clone() => this.DeepClone();

        /// <inheritdoc />
        public ModelAllPublicSetReadOnlyDictionaryOfNullable DeepClone()
        {
            var result = new ModelAllPublicSetReadOnlyDictionaryOfNullable
                             {
                                 ReadOnlyDictionaryInterfaceOfNullableBoolProperty                          = this.ReadOnlyDictionaryInterfaceOfNullableBoolProperty?.DeepClone(),
                                 ReadOnlyDictionaryInterfaceOfNullableIntProperty                           = this.ReadOnlyDictionaryInterfaceOfNullableIntProperty?.DeepClone(),
                                 ReadOnlyDictionaryInterfaceOfNullableGuidProperty                          = this.ReadOnlyDictionaryInterfaceOfNullableGuidProperty?.DeepClone(),
                                 ReadOnlyDictionaryInterfaceOfNullableCustomEnumProperty                    = this.ReadOnlyDictionaryInterfaceOfNullableCustomEnumProperty?.DeepClone(),
                                 ReadOnlyDictionaryInterfaceOfNullableCustomEnumValidatedNotDefaultProperty = this.ReadOnlyDictionaryInterfaceOfNullableCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 ReadOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty               = this.ReadOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty?.DeepClone(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="ReadOnlyDictionaryInterfaceOfNullableBoolProperty" />.
        /// </summary>
        /// <param name="readOnlyDictionaryInterfaceOfNullableBoolProperty">The new <see cref="ReadOnlyDictionaryInterfaceOfNullableBoolProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPublicSetReadOnlyDictionaryOfNullable" /> using the specified <paramref name="readOnlyDictionaryInterfaceOfNullableBoolProperty" /> for <see cref="ReadOnlyDictionaryInterfaceOfNullableBoolProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPublicSetReadOnlyDictionaryOfNullable DeepCloneWithReadOnlyDictionaryInterfaceOfNullableBoolProperty(IReadOnlyDictionary<bool?, bool?> readOnlyDictionaryInterfaceOfNullableBoolProperty)
        {
            var result = new ModelAllPublicSetReadOnlyDictionaryOfNullable
                             {
                                 ReadOnlyDictionaryInterfaceOfNullableBoolProperty                          = readOnlyDictionaryInterfaceOfNullableBoolProperty,
                                 ReadOnlyDictionaryInterfaceOfNullableIntProperty                           = this.ReadOnlyDictionaryInterfaceOfNullableIntProperty?.DeepClone(),
                                 ReadOnlyDictionaryInterfaceOfNullableGuidProperty                          = this.ReadOnlyDictionaryInterfaceOfNullableGuidProperty?.DeepClone(),
                                 ReadOnlyDictionaryInterfaceOfNullableCustomEnumProperty                    = this.ReadOnlyDictionaryInterfaceOfNullableCustomEnumProperty?.DeepClone(),
                                 ReadOnlyDictionaryInterfaceOfNullableCustomEnumValidatedNotDefaultProperty = this.ReadOnlyDictionaryInterfaceOfNullableCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 ReadOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty               = this.ReadOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty?.DeepClone(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="ReadOnlyDictionaryInterfaceOfNullableIntProperty" />.
        /// </summary>
        /// <param name="readOnlyDictionaryInterfaceOfNullableIntProperty">The new <see cref="ReadOnlyDictionaryInterfaceOfNullableIntProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPublicSetReadOnlyDictionaryOfNullable" /> using the specified <paramref name="readOnlyDictionaryInterfaceOfNullableIntProperty" /> for <see cref="ReadOnlyDictionaryInterfaceOfNullableIntProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPublicSetReadOnlyDictionaryOfNullable DeepCloneWithReadOnlyDictionaryInterfaceOfNullableIntProperty(IReadOnlyDictionary<int?, int?> readOnlyDictionaryInterfaceOfNullableIntProperty)
        {
            var result = new ModelAllPublicSetReadOnlyDictionaryOfNullable
                             {
                                 ReadOnlyDictionaryInterfaceOfNullableBoolProperty                          = this.ReadOnlyDictionaryInterfaceOfNullableBoolProperty?.DeepClone(),
                                 ReadOnlyDictionaryInterfaceOfNullableIntProperty                           = readOnlyDictionaryInterfaceOfNullableIntProperty,
                                 ReadOnlyDictionaryInterfaceOfNullableGuidProperty                          = this.ReadOnlyDictionaryInterfaceOfNullableGuidProperty?.DeepClone(),
                                 ReadOnlyDictionaryInterfaceOfNullableCustomEnumProperty                    = this.ReadOnlyDictionaryInterfaceOfNullableCustomEnumProperty?.DeepClone(),
                                 ReadOnlyDictionaryInterfaceOfNullableCustomEnumValidatedNotDefaultProperty = this.ReadOnlyDictionaryInterfaceOfNullableCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 ReadOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty               = this.ReadOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty?.DeepClone(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="ReadOnlyDictionaryInterfaceOfNullableGuidProperty" />.
        /// </summary>
        /// <param name="readOnlyDictionaryInterfaceOfNullableGuidProperty">The new <see cref="ReadOnlyDictionaryInterfaceOfNullableGuidProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPublicSetReadOnlyDictionaryOfNullable" /> using the specified <paramref name="readOnlyDictionaryInterfaceOfNullableGuidProperty" /> for <see cref="ReadOnlyDictionaryInterfaceOfNullableGuidProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPublicSetReadOnlyDictionaryOfNullable DeepCloneWithReadOnlyDictionaryInterfaceOfNullableGuidProperty(IReadOnlyDictionary<Guid?, Guid?> readOnlyDictionaryInterfaceOfNullableGuidProperty)
        {
            var result = new ModelAllPublicSetReadOnlyDictionaryOfNullable
                             {
                                 ReadOnlyDictionaryInterfaceOfNullableBoolProperty                          = this.ReadOnlyDictionaryInterfaceOfNullableBoolProperty?.DeepClone(),
                                 ReadOnlyDictionaryInterfaceOfNullableIntProperty                           = this.ReadOnlyDictionaryInterfaceOfNullableIntProperty?.DeepClone(),
                                 ReadOnlyDictionaryInterfaceOfNullableGuidProperty                          = readOnlyDictionaryInterfaceOfNullableGuidProperty,
                                 ReadOnlyDictionaryInterfaceOfNullableCustomEnumProperty                    = this.ReadOnlyDictionaryInterfaceOfNullableCustomEnumProperty?.DeepClone(),
                                 ReadOnlyDictionaryInterfaceOfNullableCustomEnumValidatedNotDefaultProperty = this.ReadOnlyDictionaryInterfaceOfNullableCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 ReadOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty               = this.ReadOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty?.DeepClone(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="ReadOnlyDictionaryInterfaceOfNullableCustomEnumProperty" />.
        /// </summary>
        /// <param name="readOnlyDictionaryInterfaceOfNullableCustomEnumProperty">The new <see cref="ReadOnlyDictionaryInterfaceOfNullableCustomEnumProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPublicSetReadOnlyDictionaryOfNullable" /> using the specified <paramref name="readOnlyDictionaryInterfaceOfNullableCustomEnumProperty" /> for <see cref="ReadOnlyDictionaryInterfaceOfNullableCustomEnumProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPublicSetReadOnlyDictionaryOfNullable DeepCloneWithReadOnlyDictionaryInterfaceOfNullableCustomEnumProperty(IReadOnlyDictionary<CustomEnum?, CustomEnum?> readOnlyDictionaryInterfaceOfNullableCustomEnumProperty)
        {
            var result = new ModelAllPublicSetReadOnlyDictionaryOfNullable
                             {
                                 ReadOnlyDictionaryInterfaceOfNullableBoolProperty                          = this.ReadOnlyDictionaryInterfaceOfNullableBoolProperty?.DeepClone(),
                                 ReadOnlyDictionaryInterfaceOfNullableIntProperty                           = this.ReadOnlyDictionaryInterfaceOfNullableIntProperty?.DeepClone(),
                                 ReadOnlyDictionaryInterfaceOfNullableGuidProperty                          = this.ReadOnlyDictionaryInterfaceOfNullableGuidProperty?.DeepClone(),
                                 ReadOnlyDictionaryInterfaceOfNullableCustomEnumProperty                    = readOnlyDictionaryInterfaceOfNullableCustomEnumProperty,
                                 ReadOnlyDictionaryInterfaceOfNullableCustomEnumValidatedNotDefaultProperty = this.ReadOnlyDictionaryInterfaceOfNullableCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 ReadOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty               = this.ReadOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty?.DeepClone(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="ReadOnlyDictionaryInterfaceOfNullableCustomEnumValidatedNotDefaultProperty" />.
        /// </summary>
        /// <param name="readOnlyDictionaryInterfaceOfNullableCustomEnumValidatedNotDefaultProperty">The new <see cref="ReadOnlyDictionaryInterfaceOfNullableCustomEnumValidatedNotDefaultProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPublicSetReadOnlyDictionaryOfNullable" /> using the specified <paramref name="readOnlyDictionaryInterfaceOfNullableCustomEnumValidatedNotDefaultProperty" /> for <see cref="ReadOnlyDictionaryInterfaceOfNullableCustomEnumValidatedNotDefaultProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPublicSetReadOnlyDictionaryOfNullable DeepCloneWithReadOnlyDictionaryInterfaceOfNullableCustomEnumValidatedNotDefaultProperty(IReadOnlyDictionary<CustomEnumValidatedNotDefault?, CustomEnumValidatedNotDefault?> readOnlyDictionaryInterfaceOfNullableCustomEnumValidatedNotDefaultProperty)
        {
            var result = new ModelAllPublicSetReadOnlyDictionaryOfNullable
                             {
                                 ReadOnlyDictionaryInterfaceOfNullableBoolProperty                          = this.ReadOnlyDictionaryInterfaceOfNullableBoolProperty?.DeepClone(),
                                 ReadOnlyDictionaryInterfaceOfNullableIntProperty                           = this.ReadOnlyDictionaryInterfaceOfNullableIntProperty?.DeepClone(),
                                 ReadOnlyDictionaryInterfaceOfNullableGuidProperty                          = this.ReadOnlyDictionaryInterfaceOfNullableGuidProperty?.DeepClone(),
                                 ReadOnlyDictionaryInterfaceOfNullableCustomEnumProperty                    = this.ReadOnlyDictionaryInterfaceOfNullableCustomEnumProperty?.DeepClone(),
                                 ReadOnlyDictionaryInterfaceOfNullableCustomEnumValidatedNotDefaultProperty = readOnlyDictionaryInterfaceOfNullableCustomEnumValidatedNotDefaultProperty,
                                 ReadOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty               = this.ReadOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty?.DeepClone(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="ReadOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty" />.
        /// </summary>
        /// <param name="readOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty">The new <see cref="ReadOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPublicSetReadOnlyDictionaryOfNullable" /> using the specified <paramref name="readOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty" /> for <see cref="ReadOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPublicSetReadOnlyDictionaryOfNullable DeepCloneWithReadOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty(IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?> readOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty)
        {
            var result = new ModelAllPublicSetReadOnlyDictionaryOfNullable
                             {
                                 ReadOnlyDictionaryInterfaceOfNullableBoolProperty                          = this.ReadOnlyDictionaryInterfaceOfNullableBoolProperty?.DeepClone(),
                                 ReadOnlyDictionaryInterfaceOfNullableIntProperty                           = this.ReadOnlyDictionaryInterfaceOfNullableIntProperty?.DeepClone(),
                                 ReadOnlyDictionaryInterfaceOfNullableGuidProperty                          = this.ReadOnlyDictionaryInterfaceOfNullableGuidProperty?.DeepClone(),
                                 ReadOnlyDictionaryInterfaceOfNullableCustomEnumProperty                    = this.ReadOnlyDictionaryInterfaceOfNullableCustomEnumProperty?.DeepClone(),
                                 ReadOnlyDictionaryInterfaceOfNullableCustomEnumValidatedNotDefaultProperty = this.ReadOnlyDictionaryInterfaceOfNullableCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 ReadOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty               = readOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty,
                             };

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        public override string ToString()
        {
            var result = Invariant($"OBeautifulCode.CodeGen.ModelObject.Test.ModelAllPublicSetReadOnlyDictionaryOfNullable: ReadOnlyDictionaryInterfaceOfNullableBoolProperty = {this.ReadOnlyDictionaryInterfaceOfNullableBoolProperty?.ToString() ?? "<null>"}, ReadOnlyDictionaryInterfaceOfNullableIntProperty = {this.ReadOnlyDictionaryInterfaceOfNullableIntProperty?.ToString() ?? "<null>"}, ReadOnlyDictionaryInterfaceOfNullableGuidProperty = {this.ReadOnlyDictionaryInterfaceOfNullableGuidProperty?.ToString() ?? "<null>"}, ReadOnlyDictionaryInterfaceOfNullableCustomEnumProperty = {this.ReadOnlyDictionaryInterfaceOfNullableCustomEnumProperty?.ToString() ?? "<null>"}, ReadOnlyDictionaryInterfaceOfNullableCustomEnumValidatedNotDefaultProperty = {this.ReadOnlyDictionaryInterfaceOfNullableCustomEnumValidatedNotDefaultProperty?.ToString() ?? "<null>"}, ReadOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty = {this.ReadOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty?.ToString() ?? "<null>"}.");

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        public IReadOnlyList<ValidationFailure> GetValidationFailures(
            ValidationOptions options = null,
            PropertyPathTracker propertyPathTracker = null)
        {
            options = options ?? new ValidationOptions();
            propertyPathTracker = propertyPathTracker ?? new PropertyPathTracker();

            bool stopOnFirstObjectWithFailures;
            switch (options.ValidateUntil)
            {
                case ValidateUntil.FullyTraversed:
                    stopOnFirstObjectWithFailures = false;
                    break;
                case ValidateUntil.FirstInvalidObject:
                    stopOnFirstObjectWithFailures = true;
                    break;
                default:
                    throw new NotSupportedException(Invariant($"This {nameof(ValidateUntil)} is not supported: {options.ValidateUntil}."));
            }

            bool validateProperties;
            switch (options.ValidationScope)
            {
                case ValidationScope.SelfAndProperties:
                    validateProperties = true;
                    break;
                case ValidationScope.SelfOnly:
                    validateProperties = false;
                    break;
                default:
                    throw new NotSupportedException(Invariant($"This {nameof(ValidationScope)} is not supported: {options.ValidationScope}."));
            }

            var result = new List<ValidationFailure>();

            void ValidateProperties()
            {
                IReadOnlyList<ValidationFailure> localValidationFailures;

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.ReadOnlyDictionaryInterfaceOfNullableBoolProperty, options, propertyPathTracker, nameof(this.ReadOnlyDictionaryInterfaceOfNullableBoolProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.ReadOnlyDictionaryInterfaceOfNullableIntProperty, options, propertyPathTracker, nameof(this.ReadOnlyDictionaryInterfaceOfNullableIntProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.ReadOnlyDictionaryInterfaceOfNullableGuidProperty, options, propertyPathTracker, nameof(this.ReadOnlyDictionaryInterfaceOfNullableGuidProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.ReadOnlyDictionaryInterfaceOfNullableCustomEnumProperty, options, propertyPathTracker, nameof(this.ReadOnlyDictionaryInterfaceOfNullableCustomEnumProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.ReadOnlyDictionaryInterfaceOfNullableCustomEnumValidatedNotDefaultProperty, options, propertyPathTracker, nameof(this.ReadOnlyDictionaryInterfaceOfNullableCustomEnumValidatedNotDefaultProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.ReadOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty, options, propertyPathTracker, nameof(this.ReadOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }
            }

            void ValidateSelf()
            {
                var segmentSeparator = propertyPathTracker.HasSegments ? propertyPathTracker.SegmentSeparator : string.Empty;

                var selfValidationFailures = (this.GetSelfValidationFailures() ?? new SelfValidationFailure[0])
                    .Where(_ => _ != null)
                    .Select(_ =>
                    {
                        var propertyNames = _.PropertyNames.Count > 1
                            ? Invariant($"({string.Join("|", _.PropertyNames)})")
                            : _.PropertyNames.Single();

                        return new ValidationFailure(
                            this.GetType().ToStringReadable(),
                            Invariant($"{propertyPathTracker.FullPath}{segmentSeparator}{propertyNames}"),
                            _.Message);
                    })
                    .ToList();

                result.AddRange(selfValidationFailures);
            }

            if (options.ValidationOrder == ValidationOrder.PropertiesThenSelf)
            {
                if (validateProperties)
                {
                    ValidateProperties();
                }

                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return result;
                }

                ValidateSelf();
            }
            else if (options.ValidationOrder == ValidationOrder.SelfThenProperties)
            {
                ValidateSelf();

                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return result;
                }

                if (validateProperties)
                {
                    ValidateProperties();
                }
            }
            else
            {
                throw new NotSupportedException(Invariant($"This {nameof(ValidationOrder)} is not supported: {options.ValidationOrder}."));
            }

            return result;
        }

        /// <inheritdoc />
        public IReadOnlyList<SelfValidationFailure> GetSelfValidationFailures()
        {
            var result = new SelfValidationFailure[0];

            return result;
        }
    }
}