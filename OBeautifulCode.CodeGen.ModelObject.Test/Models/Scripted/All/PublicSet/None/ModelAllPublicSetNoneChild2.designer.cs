// --------------------------------------------------------------------------------------------------------------------
// <auto-generated>
//   Generated using OBeautifulCode.CodeGen.ModelObject (1.0.0.0)
// </auto-generated>
// --------------------------------------------------------------------------------------------------------------------

namespace OBeautifulCode.CodeGen.ModelObject.Test
{
    using global::System;
    using global::System.CodeDom.Compiler;
    using global::System.Collections.Concurrent;
    using global::System.Collections.Generic;
    using global::System.Collections.ObjectModel;
    using global::System.Diagnostics.CodeAnalysis;
    using global::System.Globalization;
    using global::System.Linq;

    using global::OBeautifulCode.Cloning.Recipes;
    using global::OBeautifulCode.Equality.Recipes;
    using global::OBeautifulCode.Type;
    using global::OBeautifulCode.Type.Recipes;

    using static global::System.FormattableString;

    [Serializable]
    public partial class ModelAllPublicSetNoneChild2 : IModel<ModelAllPublicSetNoneChild2>
    {
        /// <summary>
        /// Determines whether two objects of type <see cref="ModelAllPublicSetNoneChild2"/> are equal.
        /// </summary>
        /// <param name="left">The object to the left of the equality operator.</param>
        /// <param name="right">The object to the right of the equality operator.</param>
        /// <returns>true if the two items are equal; otherwise false.</returns>
        public static bool operator ==(ModelAllPublicSetNoneChild2 left, ModelAllPublicSetNoneChild2 right)
        {
            if (ReferenceEquals(left, right))
            {
                return true;
            }

            if (ReferenceEquals(left, null) || ReferenceEquals(right, null))
            {
                return false;
            }

            var result = left.Equals(right);

            return result;
        }

        /// <summary>
        /// Determines whether two objects of type <see cref="ModelAllPublicSetNoneChild2"/> are not equal.
        /// </summary>
        /// <param name="left">The object to the left of the equality operator.</param>
        /// <param name="right">The object to the right of the equality operator.</param>
        /// <returns>true if the two items are not equal; otherwise false.</returns>
        public static bool operator !=(ModelAllPublicSetNoneChild2 left, ModelAllPublicSetNoneChild2 right) => !(left == right);

        /// <inheritdoc />
        public bool Equals(ModelAllPublicSetNoneChild2 other)
        {
            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (ReferenceEquals(other, null))
            {
                return false;
            }

            var result = this.ParentBoolProperty.IsEqualTo(other.ParentBoolProperty)
                      && this.ParentIntProperty.IsEqualTo(other.ParentIntProperty)
                      && this.ParentStringProperty.IsEqualTo(other.ParentStringProperty, StringComparer.Ordinal)
                      && this.ParentGuidProperty.IsEqualTo(other.ParentGuidProperty)
                      && this.ParentDateTimeProperty.IsEqualTo(other.ParentDateTimeProperty)
                      && this.ParentCustomEnumProperty.IsEqualTo(other.ParentCustomEnumProperty)
                      && this.ParentCustomFlagsEnumProperty.IsEqualTo(other.ParentCustomFlagsEnumProperty)
                      && this.ParentCustomClassProperty.IsEqualTo(other.ParentCustomClassProperty)
                      && this.ParentCustomBaseClassProperty.IsEqualTo(other.ParentCustomBaseClassProperty)
                      && this.ParentCustomGenericClassOfCustomClassProperty.IsEqualTo(other.ParentCustomGenericClassOfCustomClassProperty)
                      && this.Child2BoolProperty.IsEqualTo(other.Child2BoolProperty)
                      && this.Child2IntProperty.IsEqualTo(other.Child2IntProperty)
                      && this.Child2StringProperty.IsEqualTo(other.Child2StringProperty, StringComparer.Ordinal)
                      && this.Child2GuidProperty.IsEqualTo(other.Child2GuidProperty)
                      && this.Child2DateTimeProperty.IsEqualTo(other.Child2DateTimeProperty)
                      && this.Child2CustomEnumProperty.IsEqualTo(other.Child2CustomEnumProperty)
                      && this.Child2CustomFlagsEnumProperty.IsEqualTo(other.Child2CustomFlagsEnumProperty)
                      && this.Child2CustomClassProperty.IsEqualTo(other.Child2CustomClassProperty)
                      && this.Child2CustomBaseClassProperty.IsEqualTo(other.Child2CustomBaseClassProperty)
                      && this.Child2CustomGenericClassOfCustomClassProperty.IsEqualTo(other.Child2CustomGenericClassOfCustomClassProperty);

            return result;
        }

        /// <inheritdoc />
        public override bool Equals(object obj) => this == (obj as ModelAllPublicSetNoneChild2);

        /// <inheritdoc />
        public override int GetHashCode() => HashCodeHelper.Initialize()
            .Hash(this.ParentBoolProperty)
            .Hash(this.ParentIntProperty)
            .Hash(this.ParentStringProperty)
            .Hash(this.ParentGuidProperty)
            .Hash(this.ParentDateTimeProperty)
            .Hash(this.ParentCustomEnumProperty)
            .Hash(this.ParentCustomFlagsEnumProperty)
            .Hash(this.ParentCustomClassProperty)
            .Hash(this.ParentCustomBaseClassProperty)
            .Hash(this.ParentCustomGenericClassOfCustomClassProperty)
            .Hash(this.Child2BoolProperty)
            .Hash(this.Child2IntProperty)
            .Hash(this.Child2StringProperty)
            .Hash(this.Child2GuidProperty)
            .Hash(this.Child2DateTimeProperty)
            .Hash(this.Child2CustomEnumProperty)
            .Hash(this.Child2CustomFlagsEnumProperty)
            .Hash(this.Child2CustomClassProperty)
            .Hash(this.Child2CustomBaseClassProperty)
            .Hash(this.Child2CustomGenericClassOfCustomClassProperty)
            .Value;

        /// <inheritdoc />
        public new ModelAllPublicSetNoneChild2 DeepClone() => (ModelAllPublicSetNoneChild2)this.DeepCloneInternal();

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPublicSetNoneParent DeepCloneWithParentBoolProperty(bool parentBoolProperty)
        {
            var result = new ModelAllPublicSetNoneChild2
                             {
                                 ParentBoolProperty                            = parentBoolProperty,
                                 ParentIntProperty                             = this.ParentIntProperty.DeepClone(),
                                 ParentStringProperty                          = this.ParentStringProperty?.DeepClone(),
                                 ParentGuidProperty                            = this.ParentGuidProperty.DeepClone(),
                                 ParentDateTimeProperty                        = this.ParentDateTimeProperty.DeepClone(),
                                 ParentCustomEnumProperty                      = this.ParentCustomEnumProperty.DeepClone(),
                                 ParentCustomFlagsEnumProperty                 = this.ParentCustomFlagsEnumProperty.DeepClone(),
                                 ParentCustomClassProperty                     = this.ParentCustomClassProperty?.DeepClone(),
                                 ParentCustomBaseClassProperty                 = this.ParentCustomBaseClassProperty?.DeepClone(),
                                 ParentCustomGenericClassOfCustomClassProperty = this.ParentCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 Child2BoolProperty                            = this.Child2BoolProperty.DeepClone(),
                                 Child2IntProperty                             = this.Child2IntProperty.DeepClone(),
                                 Child2StringProperty                          = this.Child2StringProperty?.DeepClone(),
                                 Child2GuidProperty                            = this.Child2GuidProperty.DeepClone(),
                                 Child2DateTimeProperty                        = this.Child2DateTimeProperty.DeepClone(),
                                 Child2CustomEnumProperty                      = this.Child2CustomEnumProperty.DeepClone(),
                                 Child2CustomFlagsEnumProperty                 = this.Child2CustomFlagsEnumProperty.DeepClone(),
                                 Child2CustomClassProperty                     = this.Child2CustomClassProperty?.DeepClone(),
                                 Child2CustomBaseClassProperty                 = this.Child2CustomBaseClassProperty?.DeepClone(),
                                 Child2CustomGenericClassOfCustomClassProperty = this.Child2CustomGenericClassOfCustomClassProperty?.DeepClone(),
                             };

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPublicSetNoneParent DeepCloneWithParentIntProperty(int parentIntProperty)
        {
            var result = new ModelAllPublicSetNoneChild2
                             {
                                 ParentBoolProperty                            = this.ParentBoolProperty.DeepClone(),
                                 ParentIntProperty                             = parentIntProperty,
                                 ParentStringProperty                          = this.ParentStringProperty?.DeepClone(),
                                 ParentGuidProperty                            = this.ParentGuidProperty.DeepClone(),
                                 ParentDateTimeProperty                        = this.ParentDateTimeProperty.DeepClone(),
                                 ParentCustomEnumProperty                      = this.ParentCustomEnumProperty.DeepClone(),
                                 ParentCustomFlagsEnumProperty                 = this.ParentCustomFlagsEnumProperty.DeepClone(),
                                 ParentCustomClassProperty                     = this.ParentCustomClassProperty?.DeepClone(),
                                 ParentCustomBaseClassProperty                 = this.ParentCustomBaseClassProperty?.DeepClone(),
                                 ParentCustomGenericClassOfCustomClassProperty = this.ParentCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 Child2BoolProperty                            = this.Child2BoolProperty.DeepClone(),
                                 Child2IntProperty                             = this.Child2IntProperty.DeepClone(),
                                 Child2StringProperty                          = this.Child2StringProperty?.DeepClone(),
                                 Child2GuidProperty                            = this.Child2GuidProperty.DeepClone(),
                                 Child2DateTimeProperty                        = this.Child2DateTimeProperty.DeepClone(),
                                 Child2CustomEnumProperty                      = this.Child2CustomEnumProperty.DeepClone(),
                                 Child2CustomFlagsEnumProperty                 = this.Child2CustomFlagsEnumProperty.DeepClone(),
                                 Child2CustomClassProperty                     = this.Child2CustomClassProperty?.DeepClone(),
                                 Child2CustomBaseClassProperty                 = this.Child2CustomBaseClassProperty?.DeepClone(),
                                 Child2CustomGenericClassOfCustomClassProperty = this.Child2CustomGenericClassOfCustomClassProperty?.DeepClone(),
                             };

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPublicSetNoneParent DeepCloneWithParentStringProperty(string parentStringProperty)
        {
            var result = new ModelAllPublicSetNoneChild2
                             {
                                 ParentBoolProperty                            = this.ParentBoolProperty.DeepClone(),
                                 ParentIntProperty                             = this.ParentIntProperty.DeepClone(),
                                 ParentStringProperty                          = parentStringProperty,
                                 ParentGuidProperty                            = this.ParentGuidProperty.DeepClone(),
                                 ParentDateTimeProperty                        = this.ParentDateTimeProperty.DeepClone(),
                                 ParentCustomEnumProperty                      = this.ParentCustomEnumProperty.DeepClone(),
                                 ParentCustomFlagsEnumProperty                 = this.ParentCustomFlagsEnumProperty.DeepClone(),
                                 ParentCustomClassProperty                     = this.ParentCustomClassProperty?.DeepClone(),
                                 ParentCustomBaseClassProperty                 = this.ParentCustomBaseClassProperty?.DeepClone(),
                                 ParentCustomGenericClassOfCustomClassProperty = this.ParentCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 Child2BoolProperty                            = this.Child2BoolProperty.DeepClone(),
                                 Child2IntProperty                             = this.Child2IntProperty.DeepClone(),
                                 Child2StringProperty                          = this.Child2StringProperty?.DeepClone(),
                                 Child2GuidProperty                            = this.Child2GuidProperty.DeepClone(),
                                 Child2DateTimeProperty                        = this.Child2DateTimeProperty.DeepClone(),
                                 Child2CustomEnumProperty                      = this.Child2CustomEnumProperty.DeepClone(),
                                 Child2CustomFlagsEnumProperty                 = this.Child2CustomFlagsEnumProperty.DeepClone(),
                                 Child2CustomClassProperty                     = this.Child2CustomClassProperty?.DeepClone(),
                                 Child2CustomBaseClassProperty                 = this.Child2CustomBaseClassProperty?.DeepClone(),
                                 Child2CustomGenericClassOfCustomClassProperty = this.Child2CustomGenericClassOfCustomClassProperty?.DeepClone(),
                             };

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPublicSetNoneParent DeepCloneWithParentGuidProperty(Guid parentGuidProperty)
        {
            var result = new ModelAllPublicSetNoneChild2
                             {
                                 ParentBoolProperty                            = this.ParentBoolProperty.DeepClone(),
                                 ParentIntProperty                             = this.ParentIntProperty.DeepClone(),
                                 ParentStringProperty                          = this.ParentStringProperty?.DeepClone(),
                                 ParentGuidProperty                            = parentGuidProperty,
                                 ParentDateTimeProperty                        = this.ParentDateTimeProperty.DeepClone(),
                                 ParentCustomEnumProperty                      = this.ParentCustomEnumProperty.DeepClone(),
                                 ParentCustomFlagsEnumProperty                 = this.ParentCustomFlagsEnumProperty.DeepClone(),
                                 ParentCustomClassProperty                     = this.ParentCustomClassProperty?.DeepClone(),
                                 ParentCustomBaseClassProperty                 = this.ParentCustomBaseClassProperty?.DeepClone(),
                                 ParentCustomGenericClassOfCustomClassProperty = this.ParentCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 Child2BoolProperty                            = this.Child2BoolProperty.DeepClone(),
                                 Child2IntProperty                             = this.Child2IntProperty.DeepClone(),
                                 Child2StringProperty                          = this.Child2StringProperty?.DeepClone(),
                                 Child2GuidProperty                            = this.Child2GuidProperty.DeepClone(),
                                 Child2DateTimeProperty                        = this.Child2DateTimeProperty.DeepClone(),
                                 Child2CustomEnumProperty                      = this.Child2CustomEnumProperty.DeepClone(),
                                 Child2CustomFlagsEnumProperty                 = this.Child2CustomFlagsEnumProperty.DeepClone(),
                                 Child2CustomClassProperty                     = this.Child2CustomClassProperty?.DeepClone(),
                                 Child2CustomBaseClassProperty                 = this.Child2CustomBaseClassProperty?.DeepClone(),
                                 Child2CustomGenericClassOfCustomClassProperty = this.Child2CustomGenericClassOfCustomClassProperty?.DeepClone(),
                             };

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPublicSetNoneParent DeepCloneWithParentDateTimeProperty(DateTime parentDateTimeProperty)
        {
            var result = new ModelAllPublicSetNoneChild2
                             {
                                 ParentBoolProperty                            = this.ParentBoolProperty.DeepClone(),
                                 ParentIntProperty                             = this.ParentIntProperty.DeepClone(),
                                 ParentStringProperty                          = this.ParentStringProperty?.DeepClone(),
                                 ParentGuidProperty                            = this.ParentGuidProperty.DeepClone(),
                                 ParentDateTimeProperty                        = parentDateTimeProperty,
                                 ParentCustomEnumProperty                      = this.ParentCustomEnumProperty.DeepClone(),
                                 ParentCustomFlagsEnumProperty                 = this.ParentCustomFlagsEnumProperty.DeepClone(),
                                 ParentCustomClassProperty                     = this.ParentCustomClassProperty?.DeepClone(),
                                 ParentCustomBaseClassProperty                 = this.ParentCustomBaseClassProperty?.DeepClone(),
                                 ParentCustomGenericClassOfCustomClassProperty = this.ParentCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 Child2BoolProperty                            = this.Child2BoolProperty.DeepClone(),
                                 Child2IntProperty                             = this.Child2IntProperty.DeepClone(),
                                 Child2StringProperty                          = this.Child2StringProperty?.DeepClone(),
                                 Child2GuidProperty                            = this.Child2GuidProperty.DeepClone(),
                                 Child2DateTimeProperty                        = this.Child2DateTimeProperty.DeepClone(),
                                 Child2CustomEnumProperty                      = this.Child2CustomEnumProperty.DeepClone(),
                                 Child2CustomFlagsEnumProperty                 = this.Child2CustomFlagsEnumProperty.DeepClone(),
                                 Child2CustomClassProperty                     = this.Child2CustomClassProperty?.DeepClone(),
                                 Child2CustomBaseClassProperty                 = this.Child2CustomBaseClassProperty?.DeepClone(),
                                 Child2CustomGenericClassOfCustomClassProperty = this.Child2CustomGenericClassOfCustomClassProperty?.DeepClone(),
                             };

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPublicSetNoneParent DeepCloneWithParentCustomEnumProperty(CustomEnum parentCustomEnumProperty)
        {
            var result = new ModelAllPublicSetNoneChild2
                             {
                                 ParentBoolProperty                            = this.ParentBoolProperty.DeepClone(),
                                 ParentIntProperty                             = this.ParentIntProperty.DeepClone(),
                                 ParentStringProperty                          = this.ParentStringProperty?.DeepClone(),
                                 ParentGuidProperty                            = this.ParentGuidProperty.DeepClone(),
                                 ParentDateTimeProperty                        = this.ParentDateTimeProperty.DeepClone(),
                                 ParentCustomEnumProperty                      = parentCustomEnumProperty,
                                 ParentCustomFlagsEnumProperty                 = this.ParentCustomFlagsEnumProperty.DeepClone(),
                                 ParentCustomClassProperty                     = this.ParentCustomClassProperty?.DeepClone(),
                                 ParentCustomBaseClassProperty                 = this.ParentCustomBaseClassProperty?.DeepClone(),
                                 ParentCustomGenericClassOfCustomClassProperty = this.ParentCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 Child2BoolProperty                            = this.Child2BoolProperty.DeepClone(),
                                 Child2IntProperty                             = this.Child2IntProperty.DeepClone(),
                                 Child2StringProperty                          = this.Child2StringProperty?.DeepClone(),
                                 Child2GuidProperty                            = this.Child2GuidProperty.DeepClone(),
                                 Child2DateTimeProperty                        = this.Child2DateTimeProperty.DeepClone(),
                                 Child2CustomEnumProperty                      = this.Child2CustomEnumProperty.DeepClone(),
                                 Child2CustomFlagsEnumProperty                 = this.Child2CustomFlagsEnumProperty.DeepClone(),
                                 Child2CustomClassProperty                     = this.Child2CustomClassProperty?.DeepClone(),
                                 Child2CustomBaseClassProperty                 = this.Child2CustomBaseClassProperty?.DeepClone(),
                                 Child2CustomGenericClassOfCustomClassProperty = this.Child2CustomGenericClassOfCustomClassProperty?.DeepClone(),
                             };

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPublicSetNoneParent DeepCloneWithParentCustomFlagsEnumProperty(CustomFlagsEnum parentCustomFlagsEnumProperty)
        {
            var result = new ModelAllPublicSetNoneChild2
                             {
                                 ParentBoolProperty                            = this.ParentBoolProperty.DeepClone(),
                                 ParentIntProperty                             = this.ParentIntProperty.DeepClone(),
                                 ParentStringProperty                          = this.ParentStringProperty?.DeepClone(),
                                 ParentGuidProperty                            = this.ParentGuidProperty.DeepClone(),
                                 ParentDateTimeProperty                        = this.ParentDateTimeProperty.DeepClone(),
                                 ParentCustomEnumProperty                      = this.ParentCustomEnumProperty.DeepClone(),
                                 ParentCustomFlagsEnumProperty                 = parentCustomFlagsEnumProperty,
                                 ParentCustomClassProperty                     = this.ParentCustomClassProperty?.DeepClone(),
                                 ParentCustomBaseClassProperty                 = this.ParentCustomBaseClassProperty?.DeepClone(),
                                 ParentCustomGenericClassOfCustomClassProperty = this.ParentCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 Child2BoolProperty                            = this.Child2BoolProperty.DeepClone(),
                                 Child2IntProperty                             = this.Child2IntProperty.DeepClone(),
                                 Child2StringProperty                          = this.Child2StringProperty?.DeepClone(),
                                 Child2GuidProperty                            = this.Child2GuidProperty.DeepClone(),
                                 Child2DateTimeProperty                        = this.Child2DateTimeProperty.DeepClone(),
                                 Child2CustomEnumProperty                      = this.Child2CustomEnumProperty.DeepClone(),
                                 Child2CustomFlagsEnumProperty                 = this.Child2CustomFlagsEnumProperty.DeepClone(),
                                 Child2CustomClassProperty                     = this.Child2CustomClassProperty?.DeepClone(),
                                 Child2CustomBaseClassProperty                 = this.Child2CustomBaseClassProperty?.DeepClone(),
                                 Child2CustomGenericClassOfCustomClassProperty = this.Child2CustomGenericClassOfCustomClassProperty?.DeepClone(),
                             };

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPublicSetNoneParent DeepCloneWithParentCustomClassProperty(CustomClass parentCustomClassProperty)
        {
            var result = new ModelAllPublicSetNoneChild2
                             {
                                 ParentBoolProperty                            = this.ParentBoolProperty.DeepClone(),
                                 ParentIntProperty                             = this.ParentIntProperty.DeepClone(),
                                 ParentStringProperty                          = this.ParentStringProperty?.DeepClone(),
                                 ParentGuidProperty                            = this.ParentGuidProperty.DeepClone(),
                                 ParentDateTimeProperty                        = this.ParentDateTimeProperty.DeepClone(),
                                 ParentCustomEnumProperty                      = this.ParentCustomEnumProperty.DeepClone(),
                                 ParentCustomFlagsEnumProperty                 = this.ParentCustomFlagsEnumProperty.DeepClone(),
                                 ParentCustomClassProperty                     = parentCustomClassProperty,
                                 ParentCustomBaseClassProperty                 = this.ParentCustomBaseClassProperty?.DeepClone(),
                                 ParentCustomGenericClassOfCustomClassProperty = this.ParentCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 Child2BoolProperty                            = this.Child2BoolProperty.DeepClone(),
                                 Child2IntProperty                             = this.Child2IntProperty.DeepClone(),
                                 Child2StringProperty                          = this.Child2StringProperty?.DeepClone(),
                                 Child2GuidProperty                            = this.Child2GuidProperty.DeepClone(),
                                 Child2DateTimeProperty                        = this.Child2DateTimeProperty.DeepClone(),
                                 Child2CustomEnumProperty                      = this.Child2CustomEnumProperty.DeepClone(),
                                 Child2CustomFlagsEnumProperty                 = this.Child2CustomFlagsEnumProperty.DeepClone(),
                                 Child2CustomClassProperty                     = this.Child2CustomClassProperty?.DeepClone(),
                                 Child2CustomBaseClassProperty                 = this.Child2CustomBaseClassProperty?.DeepClone(),
                                 Child2CustomGenericClassOfCustomClassProperty = this.Child2CustomGenericClassOfCustomClassProperty?.DeepClone(),
                             };

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPublicSetNoneParent DeepCloneWithParentCustomBaseClassProperty(CustomBaseClass parentCustomBaseClassProperty)
        {
            var result = new ModelAllPublicSetNoneChild2
                             {
                                 ParentBoolProperty                            = this.ParentBoolProperty.DeepClone(),
                                 ParentIntProperty                             = this.ParentIntProperty.DeepClone(),
                                 ParentStringProperty                          = this.ParentStringProperty?.DeepClone(),
                                 ParentGuidProperty                            = this.ParentGuidProperty.DeepClone(),
                                 ParentDateTimeProperty                        = this.ParentDateTimeProperty.DeepClone(),
                                 ParentCustomEnumProperty                      = this.ParentCustomEnumProperty.DeepClone(),
                                 ParentCustomFlagsEnumProperty                 = this.ParentCustomFlagsEnumProperty.DeepClone(),
                                 ParentCustomClassProperty                     = this.ParentCustomClassProperty?.DeepClone(),
                                 ParentCustomBaseClassProperty                 = parentCustomBaseClassProperty,
                                 ParentCustomGenericClassOfCustomClassProperty = this.ParentCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 Child2BoolProperty                            = this.Child2BoolProperty.DeepClone(),
                                 Child2IntProperty                             = this.Child2IntProperty.DeepClone(),
                                 Child2StringProperty                          = this.Child2StringProperty?.DeepClone(),
                                 Child2GuidProperty                            = this.Child2GuidProperty.DeepClone(),
                                 Child2DateTimeProperty                        = this.Child2DateTimeProperty.DeepClone(),
                                 Child2CustomEnumProperty                      = this.Child2CustomEnumProperty.DeepClone(),
                                 Child2CustomFlagsEnumProperty                 = this.Child2CustomFlagsEnumProperty.DeepClone(),
                                 Child2CustomClassProperty                     = this.Child2CustomClassProperty?.DeepClone(),
                                 Child2CustomBaseClassProperty                 = this.Child2CustomBaseClassProperty?.DeepClone(),
                                 Child2CustomGenericClassOfCustomClassProperty = this.Child2CustomGenericClassOfCustomClassProperty?.DeepClone(),
                             };

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPublicSetNoneParent DeepCloneWithParentCustomGenericClassOfCustomClassProperty(CustomGenericClass<CustomClass> parentCustomGenericClassOfCustomClassProperty)
        {
            var result = new ModelAllPublicSetNoneChild2
                             {
                                 ParentBoolProperty                            = this.ParentBoolProperty.DeepClone(),
                                 ParentIntProperty                             = this.ParentIntProperty.DeepClone(),
                                 ParentStringProperty                          = this.ParentStringProperty?.DeepClone(),
                                 ParentGuidProperty                            = this.ParentGuidProperty.DeepClone(),
                                 ParentDateTimeProperty                        = this.ParentDateTimeProperty.DeepClone(),
                                 ParentCustomEnumProperty                      = this.ParentCustomEnumProperty.DeepClone(),
                                 ParentCustomFlagsEnumProperty                 = this.ParentCustomFlagsEnumProperty.DeepClone(),
                                 ParentCustomClassProperty                     = this.ParentCustomClassProperty?.DeepClone(),
                                 ParentCustomBaseClassProperty                 = this.ParentCustomBaseClassProperty?.DeepClone(),
                                 ParentCustomGenericClassOfCustomClassProperty = parentCustomGenericClassOfCustomClassProperty,
                                 Child2BoolProperty                            = this.Child2BoolProperty.DeepClone(),
                                 Child2IntProperty                             = this.Child2IntProperty.DeepClone(),
                                 Child2StringProperty                          = this.Child2StringProperty?.DeepClone(),
                                 Child2GuidProperty                            = this.Child2GuidProperty.DeepClone(),
                                 Child2DateTimeProperty                        = this.Child2DateTimeProperty.DeepClone(),
                                 Child2CustomEnumProperty                      = this.Child2CustomEnumProperty.DeepClone(),
                                 Child2CustomFlagsEnumProperty                 = this.Child2CustomFlagsEnumProperty.DeepClone(),
                                 Child2CustomClassProperty                     = this.Child2CustomClassProperty?.DeepClone(),
                                 Child2CustomBaseClassProperty                 = this.Child2CustomBaseClassProperty?.DeepClone(),
                                 Child2CustomGenericClassOfCustomClassProperty = this.Child2CustomGenericClassOfCustomClassProperty?.DeepClone(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2BoolProperty" />.
        /// </summary>
        /// <param name="child2BoolProperty">The new <see cref="Child2BoolProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPublicSetNoneChild2" /> using the specified <paramref name="child2BoolProperty" /> for <see cref="Child2BoolProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPublicSetNoneChild2 DeepCloneWithChild2BoolProperty(bool child2BoolProperty)
        {
            var result = new ModelAllPublicSetNoneChild2
                             {
                                 ParentBoolProperty                            = this.ParentBoolProperty.DeepClone(),
                                 ParentIntProperty                             = this.ParentIntProperty.DeepClone(),
                                 ParentStringProperty                          = this.ParentStringProperty?.DeepClone(),
                                 ParentGuidProperty                            = this.ParentGuidProperty.DeepClone(),
                                 ParentDateTimeProperty                        = this.ParentDateTimeProperty.DeepClone(),
                                 ParentCustomEnumProperty                      = this.ParentCustomEnumProperty.DeepClone(),
                                 ParentCustomFlagsEnumProperty                 = this.ParentCustomFlagsEnumProperty.DeepClone(),
                                 ParentCustomClassProperty                     = this.ParentCustomClassProperty?.DeepClone(),
                                 ParentCustomBaseClassProperty                 = this.ParentCustomBaseClassProperty?.DeepClone(),
                                 ParentCustomGenericClassOfCustomClassProperty = this.ParentCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 Child2BoolProperty                            = child2BoolProperty,
                                 Child2IntProperty                             = this.Child2IntProperty.DeepClone(),
                                 Child2StringProperty                          = this.Child2StringProperty?.DeepClone(),
                                 Child2GuidProperty                            = this.Child2GuidProperty.DeepClone(),
                                 Child2DateTimeProperty                        = this.Child2DateTimeProperty.DeepClone(),
                                 Child2CustomEnumProperty                      = this.Child2CustomEnumProperty.DeepClone(),
                                 Child2CustomFlagsEnumProperty                 = this.Child2CustomFlagsEnumProperty.DeepClone(),
                                 Child2CustomClassProperty                     = this.Child2CustomClassProperty?.DeepClone(),
                                 Child2CustomBaseClassProperty                 = this.Child2CustomBaseClassProperty?.DeepClone(),
                                 Child2CustomGenericClassOfCustomClassProperty = this.Child2CustomGenericClassOfCustomClassProperty?.DeepClone(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2IntProperty" />.
        /// </summary>
        /// <param name="child2IntProperty">The new <see cref="Child2IntProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPublicSetNoneChild2" /> using the specified <paramref name="child2IntProperty" /> for <see cref="Child2IntProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPublicSetNoneChild2 DeepCloneWithChild2IntProperty(int child2IntProperty)
        {
            var result = new ModelAllPublicSetNoneChild2
                             {
                                 ParentBoolProperty                            = this.ParentBoolProperty.DeepClone(),
                                 ParentIntProperty                             = this.ParentIntProperty.DeepClone(),
                                 ParentStringProperty                          = this.ParentStringProperty?.DeepClone(),
                                 ParentGuidProperty                            = this.ParentGuidProperty.DeepClone(),
                                 ParentDateTimeProperty                        = this.ParentDateTimeProperty.DeepClone(),
                                 ParentCustomEnumProperty                      = this.ParentCustomEnumProperty.DeepClone(),
                                 ParentCustomFlagsEnumProperty                 = this.ParentCustomFlagsEnumProperty.DeepClone(),
                                 ParentCustomClassProperty                     = this.ParentCustomClassProperty?.DeepClone(),
                                 ParentCustomBaseClassProperty                 = this.ParentCustomBaseClassProperty?.DeepClone(),
                                 ParentCustomGenericClassOfCustomClassProperty = this.ParentCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 Child2BoolProperty                            = this.Child2BoolProperty.DeepClone(),
                                 Child2IntProperty                             = child2IntProperty,
                                 Child2StringProperty                          = this.Child2StringProperty?.DeepClone(),
                                 Child2GuidProperty                            = this.Child2GuidProperty.DeepClone(),
                                 Child2DateTimeProperty                        = this.Child2DateTimeProperty.DeepClone(),
                                 Child2CustomEnumProperty                      = this.Child2CustomEnumProperty.DeepClone(),
                                 Child2CustomFlagsEnumProperty                 = this.Child2CustomFlagsEnumProperty.DeepClone(),
                                 Child2CustomClassProperty                     = this.Child2CustomClassProperty?.DeepClone(),
                                 Child2CustomBaseClassProperty                 = this.Child2CustomBaseClassProperty?.DeepClone(),
                                 Child2CustomGenericClassOfCustomClassProperty = this.Child2CustomGenericClassOfCustomClassProperty?.DeepClone(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2StringProperty" />.
        /// </summary>
        /// <param name="child2StringProperty">The new <see cref="Child2StringProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPublicSetNoneChild2" /> using the specified <paramref name="child2StringProperty" /> for <see cref="Child2StringProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPublicSetNoneChild2 DeepCloneWithChild2StringProperty(string child2StringProperty)
        {
            var result = new ModelAllPublicSetNoneChild2
                             {
                                 ParentBoolProperty                            = this.ParentBoolProperty.DeepClone(),
                                 ParentIntProperty                             = this.ParentIntProperty.DeepClone(),
                                 ParentStringProperty                          = this.ParentStringProperty?.DeepClone(),
                                 ParentGuidProperty                            = this.ParentGuidProperty.DeepClone(),
                                 ParentDateTimeProperty                        = this.ParentDateTimeProperty.DeepClone(),
                                 ParentCustomEnumProperty                      = this.ParentCustomEnumProperty.DeepClone(),
                                 ParentCustomFlagsEnumProperty                 = this.ParentCustomFlagsEnumProperty.DeepClone(),
                                 ParentCustomClassProperty                     = this.ParentCustomClassProperty?.DeepClone(),
                                 ParentCustomBaseClassProperty                 = this.ParentCustomBaseClassProperty?.DeepClone(),
                                 ParentCustomGenericClassOfCustomClassProperty = this.ParentCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 Child2BoolProperty                            = this.Child2BoolProperty.DeepClone(),
                                 Child2IntProperty                             = this.Child2IntProperty.DeepClone(),
                                 Child2StringProperty                          = child2StringProperty,
                                 Child2GuidProperty                            = this.Child2GuidProperty.DeepClone(),
                                 Child2DateTimeProperty                        = this.Child2DateTimeProperty.DeepClone(),
                                 Child2CustomEnumProperty                      = this.Child2CustomEnumProperty.DeepClone(),
                                 Child2CustomFlagsEnumProperty                 = this.Child2CustomFlagsEnumProperty.DeepClone(),
                                 Child2CustomClassProperty                     = this.Child2CustomClassProperty?.DeepClone(),
                                 Child2CustomBaseClassProperty                 = this.Child2CustomBaseClassProperty?.DeepClone(),
                                 Child2CustomGenericClassOfCustomClassProperty = this.Child2CustomGenericClassOfCustomClassProperty?.DeepClone(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2GuidProperty" />.
        /// </summary>
        /// <param name="child2GuidProperty">The new <see cref="Child2GuidProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPublicSetNoneChild2" /> using the specified <paramref name="child2GuidProperty" /> for <see cref="Child2GuidProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPublicSetNoneChild2 DeepCloneWithChild2GuidProperty(Guid child2GuidProperty)
        {
            var result = new ModelAllPublicSetNoneChild2
                             {
                                 ParentBoolProperty                            = this.ParentBoolProperty.DeepClone(),
                                 ParentIntProperty                             = this.ParentIntProperty.DeepClone(),
                                 ParentStringProperty                          = this.ParentStringProperty?.DeepClone(),
                                 ParentGuidProperty                            = this.ParentGuidProperty.DeepClone(),
                                 ParentDateTimeProperty                        = this.ParentDateTimeProperty.DeepClone(),
                                 ParentCustomEnumProperty                      = this.ParentCustomEnumProperty.DeepClone(),
                                 ParentCustomFlagsEnumProperty                 = this.ParentCustomFlagsEnumProperty.DeepClone(),
                                 ParentCustomClassProperty                     = this.ParentCustomClassProperty?.DeepClone(),
                                 ParentCustomBaseClassProperty                 = this.ParentCustomBaseClassProperty?.DeepClone(),
                                 ParentCustomGenericClassOfCustomClassProperty = this.ParentCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 Child2BoolProperty                            = this.Child2BoolProperty.DeepClone(),
                                 Child2IntProperty                             = this.Child2IntProperty.DeepClone(),
                                 Child2StringProperty                          = this.Child2StringProperty?.DeepClone(),
                                 Child2GuidProperty                            = child2GuidProperty,
                                 Child2DateTimeProperty                        = this.Child2DateTimeProperty.DeepClone(),
                                 Child2CustomEnumProperty                      = this.Child2CustomEnumProperty.DeepClone(),
                                 Child2CustomFlagsEnumProperty                 = this.Child2CustomFlagsEnumProperty.DeepClone(),
                                 Child2CustomClassProperty                     = this.Child2CustomClassProperty?.DeepClone(),
                                 Child2CustomBaseClassProperty                 = this.Child2CustomBaseClassProperty?.DeepClone(),
                                 Child2CustomGenericClassOfCustomClassProperty = this.Child2CustomGenericClassOfCustomClassProperty?.DeepClone(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2DateTimeProperty" />.
        /// </summary>
        /// <param name="child2DateTimeProperty">The new <see cref="Child2DateTimeProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPublicSetNoneChild2" /> using the specified <paramref name="child2DateTimeProperty" /> for <see cref="Child2DateTimeProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPublicSetNoneChild2 DeepCloneWithChild2DateTimeProperty(DateTime child2DateTimeProperty)
        {
            var result = new ModelAllPublicSetNoneChild2
                             {
                                 ParentBoolProperty                            = this.ParentBoolProperty.DeepClone(),
                                 ParentIntProperty                             = this.ParentIntProperty.DeepClone(),
                                 ParentStringProperty                          = this.ParentStringProperty?.DeepClone(),
                                 ParentGuidProperty                            = this.ParentGuidProperty.DeepClone(),
                                 ParentDateTimeProperty                        = this.ParentDateTimeProperty.DeepClone(),
                                 ParentCustomEnumProperty                      = this.ParentCustomEnumProperty.DeepClone(),
                                 ParentCustomFlagsEnumProperty                 = this.ParentCustomFlagsEnumProperty.DeepClone(),
                                 ParentCustomClassProperty                     = this.ParentCustomClassProperty?.DeepClone(),
                                 ParentCustomBaseClassProperty                 = this.ParentCustomBaseClassProperty?.DeepClone(),
                                 ParentCustomGenericClassOfCustomClassProperty = this.ParentCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 Child2BoolProperty                            = this.Child2BoolProperty.DeepClone(),
                                 Child2IntProperty                             = this.Child2IntProperty.DeepClone(),
                                 Child2StringProperty                          = this.Child2StringProperty?.DeepClone(),
                                 Child2GuidProperty                            = this.Child2GuidProperty.DeepClone(),
                                 Child2DateTimeProperty                        = child2DateTimeProperty,
                                 Child2CustomEnumProperty                      = this.Child2CustomEnumProperty.DeepClone(),
                                 Child2CustomFlagsEnumProperty                 = this.Child2CustomFlagsEnumProperty.DeepClone(),
                                 Child2CustomClassProperty                     = this.Child2CustomClassProperty?.DeepClone(),
                                 Child2CustomBaseClassProperty                 = this.Child2CustomBaseClassProperty?.DeepClone(),
                                 Child2CustomGenericClassOfCustomClassProperty = this.Child2CustomGenericClassOfCustomClassProperty?.DeepClone(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2CustomEnumProperty" />.
        /// </summary>
        /// <param name="child2CustomEnumProperty">The new <see cref="Child2CustomEnumProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPublicSetNoneChild2" /> using the specified <paramref name="child2CustomEnumProperty" /> for <see cref="Child2CustomEnumProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPublicSetNoneChild2 DeepCloneWithChild2CustomEnumProperty(CustomEnum child2CustomEnumProperty)
        {
            var result = new ModelAllPublicSetNoneChild2
                             {
                                 ParentBoolProperty                            = this.ParentBoolProperty.DeepClone(),
                                 ParentIntProperty                             = this.ParentIntProperty.DeepClone(),
                                 ParentStringProperty                          = this.ParentStringProperty?.DeepClone(),
                                 ParentGuidProperty                            = this.ParentGuidProperty.DeepClone(),
                                 ParentDateTimeProperty                        = this.ParentDateTimeProperty.DeepClone(),
                                 ParentCustomEnumProperty                      = this.ParentCustomEnumProperty.DeepClone(),
                                 ParentCustomFlagsEnumProperty                 = this.ParentCustomFlagsEnumProperty.DeepClone(),
                                 ParentCustomClassProperty                     = this.ParentCustomClassProperty?.DeepClone(),
                                 ParentCustomBaseClassProperty                 = this.ParentCustomBaseClassProperty?.DeepClone(),
                                 ParentCustomGenericClassOfCustomClassProperty = this.ParentCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 Child2BoolProperty                            = this.Child2BoolProperty.DeepClone(),
                                 Child2IntProperty                             = this.Child2IntProperty.DeepClone(),
                                 Child2StringProperty                          = this.Child2StringProperty?.DeepClone(),
                                 Child2GuidProperty                            = this.Child2GuidProperty.DeepClone(),
                                 Child2DateTimeProperty                        = this.Child2DateTimeProperty.DeepClone(),
                                 Child2CustomEnumProperty                      = child2CustomEnumProperty,
                                 Child2CustomFlagsEnumProperty                 = this.Child2CustomFlagsEnumProperty.DeepClone(),
                                 Child2CustomClassProperty                     = this.Child2CustomClassProperty?.DeepClone(),
                                 Child2CustomBaseClassProperty                 = this.Child2CustomBaseClassProperty?.DeepClone(),
                                 Child2CustomGenericClassOfCustomClassProperty = this.Child2CustomGenericClassOfCustomClassProperty?.DeepClone(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2CustomFlagsEnumProperty" />.
        /// </summary>
        /// <param name="child2CustomFlagsEnumProperty">The new <see cref="Child2CustomFlagsEnumProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPublicSetNoneChild2" /> using the specified <paramref name="child2CustomFlagsEnumProperty" /> for <see cref="Child2CustomFlagsEnumProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPublicSetNoneChild2 DeepCloneWithChild2CustomFlagsEnumProperty(CustomFlagsEnum child2CustomFlagsEnumProperty)
        {
            var result = new ModelAllPublicSetNoneChild2
                             {
                                 ParentBoolProperty                            = this.ParentBoolProperty.DeepClone(),
                                 ParentIntProperty                             = this.ParentIntProperty.DeepClone(),
                                 ParentStringProperty                          = this.ParentStringProperty?.DeepClone(),
                                 ParentGuidProperty                            = this.ParentGuidProperty.DeepClone(),
                                 ParentDateTimeProperty                        = this.ParentDateTimeProperty.DeepClone(),
                                 ParentCustomEnumProperty                      = this.ParentCustomEnumProperty.DeepClone(),
                                 ParentCustomFlagsEnumProperty                 = this.ParentCustomFlagsEnumProperty.DeepClone(),
                                 ParentCustomClassProperty                     = this.ParentCustomClassProperty?.DeepClone(),
                                 ParentCustomBaseClassProperty                 = this.ParentCustomBaseClassProperty?.DeepClone(),
                                 ParentCustomGenericClassOfCustomClassProperty = this.ParentCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 Child2BoolProperty                            = this.Child2BoolProperty.DeepClone(),
                                 Child2IntProperty                             = this.Child2IntProperty.DeepClone(),
                                 Child2StringProperty                          = this.Child2StringProperty?.DeepClone(),
                                 Child2GuidProperty                            = this.Child2GuidProperty.DeepClone(),
                                 Child2DateTimeProperty                        = this.Child2DateTimeProperty.DeepClone(),
                                 Child2CustomEnumProperty                      = this.Child2CustomEnumProperty.DeepClone(),
                                 Child2CustomFlagsEnumProperty                 = child2CustomFlagsEnumProperty,
                                 Child2CustomClassProperty                     = this.Child2CustomClassProperty?.DeepClone(),
                                 Child2CustomBaseClassProperty                 = this.Child2CustomBaseClassProperty?.DeepClone(),
                                 Child2CustomGenericClassOfCustomClassProperty = this.Child2CustomGenericClassOfCustomClassProperty?.DeepClone(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2CustomClassProperty" />.
        /// </summary>
        /// <param name="child2CustomClassProperty">The new <see cref="Child2CustomClassProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPublicSetNoneChild2" /> using the specified <paramref name="child2CustomClassProperty" /> for <see cref="Child2CustomClassProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPublicSetNoneChild2 DeepCloneWithChild2CustomClassProperty(CustomClass child2CustomClassProperty)
        {
            var result = new ModelAllPublicSetNoneChild2
                             {
                                 ParentBoolProperty                            = this.ParentBoolProperty.DeepClone(),
                                 ParentIntProperty                             = this.ParentIntProperty.DeepClone(),
                                 ParentStringProperty                          = this.ParentStringProperty?.DeepClone(),
                                 ParentGuidProperty                            = this.ParentGuidProperty.DeepClone(),
                                 ParentDateTimeProperty                        = this.ParentDateTimeProperty.DeepClone(),
                                 ParentCustomEnumProperty                      = this.ParentCustomEnumProperty.DeepClone(),
                                 ParentCustomFlagsEnumProperty                 = this.ParentCustomFlagsEnumProperty.DeepClone(),
                                 ParentCustomClassProperty                     = this.ParentCustomClassProperty?.DeepClone(),
                                 ParentCustomBaseClassProperty                 = this.ParentCustomBaseClassProperty?.DeepClone(),
                                 ParentCustomGenericClassOfCustomClassProperty = this.ParentCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 Child2BoolProperty                            = this.Child2BoolProperty.DeepClone(),
                                 Child2IntProperty                             = this.Child2IntProperty.DeepClone(),
                                 Child2StringProperty                          = this.Child2StringProperty?.DeepClone(),
                                 Child2GuidProperty                            = this.Child2GuidProperty.DeepClone(),
                                 Child2DateTimeProperty                        = this.Child2DateTimeProperty.DeepClone(),
                                 Child2CustomEnumProperty                      = this.Child2CustomEnumProperty.DeepClone(),
                                 Child2CustomFlagsEnumProperty                 = this.Child2CustomFlagsEnumProperty.DeepClone(),
                                 Child2CustomClassProperty                     = child2CustomClassProperty,
                                 Child2CustomBaseClassProperty                 = this.Child2CustomBaseClassProperty?.DeepClone(),
                                 Child2CustomGenericClassOfCustomClassProperty = this.Child2CustomGenericClassOfCustomClassProperty?.DeepClone(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2CustomBaseClassProperty" />.
        /// </summary>
        /// <param name="child2CustomBaseClassProperty">The new <see cref="Child2CustomBaseClassProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPublicSetNoneChild2" /> using the specified <paramref name="child2CustomBaseClassProperty" /> for <see cref="Child2CustomBaseClassProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPublicSetNoneChild2 DeepCloneWithChild2CustomBaseClassProperty(CustomBaseClass child2CustomBaseClassProperty)
        {
            var result = new ModelAllPublicSetNoneChild2
                             {
                                 ParentBoolProperty                            = this.ParentBoolProperty.DeepClone(),
                                 ParentIntProperty                             = this.ParentIntProperty.DeepClone(),
                                 ParentStringProperty                          = this.ParentStringProperty?.DeepClone(),
                                 ParentGuidProperty                            = this.ParentGuidProperty.DeepClone(),
                                 ParentDateTimeProperty                        = this.ParentDateTimeProperty.DeepClone(),
                                 ParentCustomEnumProperty                      = this.ParentCustomEnumProperty.DeepClone(),
                                 ParentCustomFlagsEnumProperty                 = this.ParentCustomFlagsEnumProperty.DeepClone(),
                                 ParentCustomClassProperty                     = this.ParentCustomClassProperty?.DeepClone(),
                                 ParentCustomBaseClassProperty                 = this.ParentCustomBaseClassProperty?.DeepClone(),
                                 ParentCustomGenericClassOfCustomClassProperty = this.ParentCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 Child2BoolProperty                            = this.Child2BoolProperty.DeepClone(),
                                 Child2IntProperty                             = this.Child2IntProperty.DeepClone(),
                                 Child2StringProperty                          = this.Child2StringProperty?.DeepClone(),
                                 Child2GuidProperty                            = this.Child2GuidProperty.DeepClone(),
                                 Child2DateTimeProperty                        = this.Child2DateTimeProperty.DeepClone(),
                                 Child2CustomEnumProperty                      = this.Child2CustomEnumProperty.DeepClone(),
                                 Child2CustomFlagsEnumProperty                 = this.Child2CustomFlagsEnumProperty.DeepClone(),
                                 Child2CustomClassProperty                     = this.Child2CustomClassProperty?.DeepClone(),
                                 Child2CustomBaseClassProperty                 = child2CustomBaseClassProperty,
                                 Child2CustomGenericClassOfCustomClassProperty = this.Child2CustomGenericClassOfCustomClassProperty?.DeepClone(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2CustomGenericClassOfCustomClassProperty" />.
        /// </summary>
        /// <param name="child2CustomGenericClassOfCustomClassProperty">The new <see cref="Child2CustomGenericClassOfCustomClassProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPublicSetNoneChild2" /> using the specified <paramref name="child2CustomGenericClassOfCustomClassProperty" /> for <see cref="Child2CustomGenericClassOfCustomClassProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPublicSetNoneChild2 DeepCloneWithChild2CustomGenericClassOfCustomClassProperty(CustomGenericClass<CustomClass> child2CustomGenericClassOfCustomClassProperty)
        {
            var result = new ModelAllPublicSetNoneChild2
                             {
                                 ParentBoolProperty                            = this.ParentBoolProperty.DeepClone(),
                                 ParentIntProperty                             = this.ParentIntProperty.DeepClone(),
                                 ParentStringProperty                          = this.ParentStringProperty?.DeepClone(),
                                 ParentGuidProperty                            = this.ParentGuidProperty.DeepClone(),
                                 ParentDateTimeProperty                        = this.ParentDateTimeProperty.DeepClone(),
                                 ParentCustomEnumProperty                      = this.ParentCustomEnumProperty.DeepClone(),
                                 ParentCustomFlagsEnumProperty                 = this.ParentCustomFlagsEnumProperty.DeepClone(),
                                 ParentCustomClassProperty                     = this.ParentCustomClassProperty?.DeepClone(),
                                 ParentCustomBaseClassProperty                 = this.ParentCustomBaseClassProperty?.DeepClone(),
                                 ParentCustomGenericClassOfCustomClassProperty = this.ParentCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 Child2BoolProperty                            = this.Child2BoolProperty.DeepClone(),
                                 Child2IntProperty                             = this.Child2IntProperty.DeepClone(),
                                 Child2StringProperty                          = this.Child2StringProperty?.DeepClone(),
                                 Child2GuidProperty                            = this.Child2GuidProperty.DeepClone(),
                                 Child2DateTimeProperty                        = this.Child2DateTimeProperty.DeepClone(),
                                 Child2CustomEnumProperty                      = this.Child2CustomEnumProperty.DeepClone(),
                                 Child2CustomFlagsEnumProperty                 = this.Child2CustomFlagsEnumProperty.DeepClone(),
                                 Child2CustomClassProperty                     = this.Child2CustomClassProperty?.DeepClone(),
                                 Child2CustomBaseClassProperty                 = this.Child2CustomBaseClassProperty?.DeepClone(),
                                 Child2CustomGenericClassOfCustomClassProperty = child2CustomGenericClassOfCustomClassProperty,
                             };

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        protected override ModelAllPublicSetNoneParent DeepCloneInternal()
        {
            var result = new ModelAllPublicSetNoneChild2
                             {
                                 ParentBoolProperty                            = this.ParentBoolProperty.DeepClone(),
                                 ParentIntProperty                             = this.ParentIntProperty.DeepClone(),
                                 ParentStringProperty                          = this.ParentStringProperty?.DeepClone(),
                                 ParentGuidProperty                            = this.ParentGuidProperty.DeepClone(),
                                 ParentDateTimeProperty                        = this.ParentDateTimeProperty.DeepClone(),
                                 ParentCustomEnumProperty                      = this.ParentCustomEnumProperty.DeepClone(),
                                 ParentCustomFlagsEnumProperty                 = this.ParentCustomFlagsEnumProperty.DeepClone(),
                                 ParentCustomClassProperty                     = this.ParentCustomClassProperty?.DeepClone(),
                                 ParentCustomBaseClassProperty                 = this.ParentCustomBaseClassProperty?.DeepClone(),
                                 ParentCustomGenericClassOfCustomClassProperty = this.ParentCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 Child2BoolProperty                            = this.Child2BoolProperty.DeepClone(),
                                 Child2IntProperty                             = this.Child2IntProperty.DeepClone(),
                                 Child2StringProperty                          = this.Child2StringProperty?.DeepClone(),
                                 Child2GuidProperty                            = this.Child2GuidProperty.DeepClone(),
                                 Child2DateTimeProperty                        = this.Child2DateTimeProperty.DeepClone(),
                                 Child2CustomEnumProperty                      = this.Child2CustomEnumProperty.DeepClone(),
                                 Child2CustomFlagsEnumProperty                 = this.Child2CustomFlagsEnumProperty.DeepClone(),
                                 Child2CustomClassProperty                     = this.Child2CustomClassProperty?.DeepClone(),
                                 Child2CustomBaseClassProperty                 = this.Child2CustomBaseClassProperty?.DeepClone(),
                                 Child2CustomGenericClassOfCustomClassProperty = this.Child2CustomGenericClassOfCustomClassProperty?.DeepClone(),
                             };

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        public override string ToString()
        {
            var result = Invariant($"OBeautifulCode.CodeGen.ModelObject.Test.ModelAllPublicSetNoneChild2: ParentBoolProperty = {this.ParentBoolProperty.ToString(CultureInfo.InvariantCulture) ?? "<null>"}, ParentIntProperty = {this.ParentIntProperty.ToString(CultureInfo.InvariantCulture) ?? "<null>"}, ParentStringProperty = {this.ParentStringProperty?.ToString(CultureInfo.InvariantCulture) ?? "<null>"}, ParentGuidProperty = {this.ParentGuidProperty.ToString() ?? "<null>"}, ParentDateTimeProperty = {this.ParentDateTimeProperty.ToString(CultureInfo.InvariantCulture) ?? "<null>"}, ParentCustomEnumProperty = {this.ParentCustomEnumProperty.ToString() ?? "<null>"}, ParentCustomFlagsEnumProperty = {this.ParentCustomFlagsEnumProperty.ToString() ?? "<null>"}, ParentCustomClassProperty = {this.ParentCustomClassProperty?.ToString() ?? "<null>"}, ParentCustomBaseClassProperty = {this.ParentCustomBaseClassProperty?.ToString() ?? "<null>"}, ParentCustomGenericClassOfCustomClassProperty = {this.ParentCustomGenericClassOfCustomClassProperty?.ToString() ?? "<null>"}, Child2BoolProperty = {this.Child2BoolProperty.ToString(CultureInfo.InvariantCulture) ?? "<null>"}, Child2IntProperty = {this.Child2IntProperty.ToString(CultureInfo.InvariantCulture) ?? "<null>"}, Child2StringProperty = {this.Child2StringProperty?.ToString(CultureInfo.InvariantCulture) ?? "<null>"}, Child2GuidProperty = {this.Child2GuidProperty.ToString() ?? "<null>"}, Child2DateTimeProperty = {this.Child2DateTimeProperty.ToString(CultureInfo.InvariantCulture) ?? "<null>"}, Child2CustomEnumProperty = {this.Child2CustomEnumProperty.ToString() ?? "<null>"}, Child2CustomFlagsEnumProperty = {this.Child2CustomFlagsEnumProperty.ToString() ?? "<null>"}, Child2CustomClassProperty = {this.Child2CustomClassProperty?.ToString() ?? "<null>"}, Child2CustomBaseClassProperty = {this.Child2CustomBaseClassProperty?.ToString() ?? "<null>"}, Child2CustomGenericClassOfCustomClassProperty = {this.Child2CustomGenericClassOfCustomClassProperty?.ToString() ?? "<null>"}.");

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        public override IReadOnlyList<ValidationFailure> GetValidationFailures(
            ValidationOptions options = null,
            PropertyPathTracker propertyPathTracker = null)
        {
            options = options ?? new ValidationOptions();
            propertyPathTracker = propertyPathTracker ?? new PropertyPathTracker();

            bool stopOnFirstObjectWithFailures;
            switch (options.ValidateUntil)
            {
                case ValidateUntil.FullyTraversed:
                    stopOnFirstObjectWithFailures = false;
                    break;
                case ValidateUntil.FirstInvalidObject:
                    stopOnFirstObjectWithFailures = true;
                    break;
                default:
                    throw new NotSupportedException(Invariant($"This {nameof(ValidateUntil)} is not supported: {options.ValidateUntil}."));
            }

            bool validateProperties;
            switch (options.ValidationScope)
            {
                case ValidationScope.SelfAndProperties:
                    validateProperties = true;
                    break;
                case ValidationScope.SelfOnly:
                    validateProperties = false;
                    break;
                default:
                    throw new NotSupportedException(Invariant($"This {nameof(ValidationScope)} is not supported: {options.ValidationScope}."));
            }

            var result = new List<ValidationFailure>();

            void ValidateProperties()
            {
                IReadOnlyList<ValidationFailure> localValidationFailures;

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.ParentBoolProperty, options, propertyPathTracker, nameof(this.ParentBoolProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.ParentIntProperty, options, propertyPathTracker, nameof(this.ParentIntProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.ParentStringProperty, options, propertyPathTracker, nameof(this.ParentStringProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.ParentGuidProperty, options, propertyPathTracker, nameof(this.ParentGuidProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.ParentDateTimeProperty, options, propertyPathTracker, nameof(this.ParentDateTimeProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.ParentCustomEnumProperty, options, propertyPathTracker, nameof(this.ParentCustomEnumProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.ParentCustomFlagsEnumProperty, options, propertyPathTracker, nameof(this.ParentCustomFlagsEnumProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.ParentCustomClassProperty, options, propertyPathTracker, nameof(this.ParentCustomClassProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.ParentCustomBaseClassProperty, options, propertyPathTracker, nameof(this.ParentCustomBaseClassProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.ParentCustomGenericClassOfCustomClassProperty, options, propertyPathTracker, nameof(this.ParentCustomGenericClassOfCustomClassProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.Child2BoolProperty, options, propertyPathTracker, nameof(this.Child2BoolProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.Child2IntProperty, options, propertyPathTracker, nameof(this.Child2IntProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.Child2StringProperty, options, propertyPathTracker, nameof(this.Child2StringProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.Child2GuidProperty, options, propertyPathTracker, nameof(this.Child2GuidProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.Child2DateTimeProperty, options, propertyPathTracker, nameof(this.Child2DateTimeProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.Child2CustomEnumProperty, options, propertyPathTracker, nameof(this.Child2CustomEnumProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.Child2CustomFlagsEnumProperty, options, propertyPathTracker, nameof(this.Child2CustomFlagsEnumProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.Child2CustomClassProperty, options, propertyPathTracker, nameof(this.Child2CustomClassProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.Child2CustomBaseClassProperty, options, propertyPathTracker, nameof(this.Child2CustomBaseClassProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.Child2CustomGenericClassOfCustomClassProperty, options, propertyPathTracker, nameof(this.Child2CustomGenericClassOfCustomClassProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }
            }

            void ValidateSelf()
            {
                var segmentSeparator = propertyPathTracker.HasSegments ? propertyPathTracker.SegmentSeparator : string.Empty;

                var selfValidationFailures = (this.GetSelfValidationFailures() ?? new SelfValidationFailure[0])
                    .Where(_ => _ != null)
                    .Select(_ =>
                    {
                        var propertyNames = _.PropertyNames.Count > 1
                            ? Invariant($"({string.Join("|", _.PropertyNames)})")
                            : _.PropertyNames.Single();

                        return new ValidationFailure(
                            this.GetType().ToStringReadable(),
                            Invariant($"{propertyPathTracker.FullPath}{segmentSeparator}{propertyNames}"),
                            _.Message);
                    })
                    .ToList();

                result.AddRange(selfValidationFailures);
            }

            if (options.ValidationOrder == ValidationOrder.PropertiesThenSelf)
            {
                if (validateProperties)
                {
                    ValidateProperties();
                }

                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return result;
                }

                ValidateSelf();
            }
            else if (options.ValidationOrder == ValidationOrder.SelfThenProperties)
            {
                ValidateSelf();

                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return result;
                }

                if (validateProperties)
                {
                    ValidateProperties();
                }
            }
            else
            {
                throw new NotSupportedException(Invariant($"This {nameof(ValidationOrder)} is not supported: {options.ValidationOrder}."));
            }

            return result;
        }

        /// <inheritdoc />
        public override IReadOnlyList<SelfValidationFailure> GetSelfValidationFailures()
        {
            var result = base.GetSelfValidationFailures();

            return result;
        }
    }
}