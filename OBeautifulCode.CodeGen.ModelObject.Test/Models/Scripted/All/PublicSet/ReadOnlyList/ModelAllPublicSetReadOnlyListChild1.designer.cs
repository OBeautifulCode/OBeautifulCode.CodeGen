// --------------------------------------------------------------------------------------------------------------------
// <auto-generated>
//   Generated using OBeautifulCode.CodeGen.ModelObject (1.0.0.0)
// </auto-generated>
// --------------------------------------------------------------------------------------------------------------------

namespace OBeautifulCode.CodeGen.ModelObject.Test
{
    using global::System;
    using global::System.CodeDom.Compiler;
    using global::System.Collections.Concurrent;
    using global::System.Collections.Generic;
    using global::System.Collections.ObjectModel;
    using global::System.Diagnostics.CodeAnalysis;
    using global::System.Globalization;
    using global::System.Linq;

    using global::OBeautifulCode.Equality.Recipes;
    using global::OBeautifulCode.Type;
    using global::OBeautifulCode.Type.Recipes;

    using static global::System.FormattableString;

    [Serializable]
    public partial class ModelAllPublicSetReadOnlyListChild1 : IModel<ModelAllPublicSetReadOnlyListChild1>
    {
        /// <summary>
        /// Determines whether two objects of type <see cref="ModelAllPublicSetReadOnlyListChild1"/> are equal.
        /// </summary>
        /// <param name="left">The object to the left of the equality operator.</param>
        /// <param name="right">The object to the right of the equality operator.</param>
        /// <returns>true if the two items are equal; otherwise false.</returns>
        public static bool operator ==(ModelAllPublicSetReadOnlyListChild1 left, ModelAllPublicSetReadOnlyListChild1 right)
        {
            if (ReferenceEquals(left, right))
            {
                return true;
            }

            if (ReferenceEquals(left, null) || ReferenceEquals(right, null))
            {
                return false;
            }

            var result = left.Equals(right);

            return result;
        }

        /// <summary>
        /// Determines whether two objects of type <see cref="ModelAllPublicSetReadOnlyListChild1"/> are not equal.
        /// </summary>
        /// <param name="left">The object to the left of the equality operator.</param>
        /// <param name="right">The object to the right of the equality operator.</param>
        /// <returns>true if the two items are not equal; otherwise false.</returns>
        public static bool operator !=(ModelAllPublicSetReadOnlyListChild1 left, ModelAllPublicSetReadOnlyListChild1 right) => !(left == right);

        /// <inheritdoc />
        public bool Equals(ModelAllPublicSetReadOnlyListChild1 other)
        {
            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (ReferenceEquals(other, null))
            {
                return false;
            }

            var result = this.ParentReadOnlyListInterfaceOfBoolProperty.IsEqualTo(other.ParentReadOnlyListInterfaceOfBoolProperty)
                      && this.ParentReadOnlyListInterfaceOfIntProperty.IsEqualTo(other.ParentReadOnlyListInterfaceOfIntProperty)
                      && this.ParentReadOnlyListInterfaceOfStringProperty.IsEqualTo(other.ParentReadOnlyListInterfaceOfStringProperty)
                      && this.ParentReadOnlyListInterfaceOfGuidProperty.IsEqualTo(other.ParentReadOnlyListInterfaceOfGuidProperty)
                      && this.ParentReadOnlyListInterfaceOfDateTimeProperty.IsEqualTo(other.ParentReadOnlyListInterfaceOfDateTimeProperty)
                      && this.ParentReadOnlyListInterfaceOfCustomEnumProperty.IsEqualTo(other.ParentReadOnlyListInterfaceOfCustomEnumProperty)
                      && this.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty.IsEqualTo(other.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty)
                      && this.ParentReadOnlyListInterfaceOfCustomClassProperty.IsEqualTo(other.ParentReadOnlyListInterfaceOfCustomClassProperty)
                      && this.ParentReadOnlyListInterfaceOfCustomBaseClassProperty.IsEqualTo(other.ParentReadOnlyListInterfaceOfCustomBaseClassProperty)
                      && this.Child1ReadOnlyListInterfaceOfBoolProperty.IsEqualTo(other.Child1ReadOnlyListInterfaceOfBoolProperty)
                      && this.Child1ReadOnlyListInterfaceOfIntProperty.IsEqualTo(other.Child1ReadOnlyListInterfaceOfIntProperty)
                      && this.Child1ReadOnlyListInterfaceOfStringProperty.IsEqualTo(other.Child1ReadOnlyListInterfaceOfStringProperty)
                      && this.Child1ReadOnlyListInterfaceOfGuidProperty.IsEqualTo(other.Child1ReadOnlyListInterfaceOfGuidProperty)
                      && this.Child1ReadOnlyListInterfaceOfDateTimeProperty.IsEqualTo(other.Child1ReadOnlyListInterfaceOfDateTimeProperty)
                      && this.Child1ReadOnlyListInterfaceOfCustomEnumProperty.IsEqualTo(other.Child1ReadOnlyListInterfaceOfCustomEnumProperty)
                      && this.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty.IsEqualTo(other.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty)
                      && this.Child1ReadOnlyListInterfaceOfCustomClassProperty.IsEqualTo(other.Child1ReadOnlyListInterfaceOfCustomClassProperty)
                      && this.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty.IsEqualTo(other.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty);

            return result;
        }

        /// <inheritdoc />
        public override bool Equals(object obj) => this == (obj as ModelAllPublicSetReadOnlyListChild1);

        /// <inheritdoc />
        public override int GetHashCode() => HashCodeHelper.Initialize()
            .Hash(this.ParentReadOnlyListInterfaceOfBoolProperty)
            .Hash(this.ParentReadOnlyListInterfaceOfIntProperty)
            .Hash(this.ParentReadOnlyListInterfaceOfStringProperty)
            .Hash(this.ParentReadOnlyListInterfaceOfGuidProperty)
            .Hash(this.ParentReadOnlyListInterfaceOfDateTimeProperty)
            .Hash(this.ParentReadOnlyListInterfaceOfCustomEnumProperty)
            .Hash(this.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty)
            .Hash(this.ParentReadOnlyListInterfaceOfCustomClassProperty)
            .Hash(this.ParentReadOnlyListInterfaceOfCustomBaseClassProperty)
            .Hash(this.Child1ReadOnlyListInterfaceOfBoolProperty)
            .Hash(this.Child1ReadOnlyListInterfaceOfIntProperty)
            .Hash(this.Child1ReadOnlyListInterfaceOfStringProperty)
            .Hash(this.Child1ReadOnlyListInterfaceOfGuidProperty)
            .Hash(this.Child1ReadOnlyListInterfaceOfDateTimeProperty)
            .Hash(this.Child1ReadOnlyListInterfaceOfCustomEnumProperty)
            .Hash(this.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty)
            .Hash(this.Child1ReadOnlyListInterfaceOfCustomClassProperty)
            .Hash(this.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty)
            .Value;

        /// <inheritdoc />
        public new ModelAllPublicSetReadOnlyListChild1 DeepClone() => (ModelAllPublicSetReadOnlyListChild1)this.DeepCloneInternal();

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002: DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        public override ModelAllPublicSetReadOnlyListParent DeepCloneWithParentReadOnlyListInterfaceOfBoolProperty(IReadOnlyList<bool> parentReadOnlyListInterfaceOfBoolProperty)
        {
            var result = new ModelAllPublicSetReadOnlyListChild1
                             {
                                 ParentReadOnlyListInterfaceOfBoolProperty            = parentReadOnlyListInterfaceOfBoolProperty,
                                 ParentReadOnlyListInterfaceOfIntProperty             = this.ParentReadOnlyListInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfStringProperty          = this.ParentReadOnlyListInterfaceOfStringProperty?.Select(i => i?.Clone().ToString()).ToList(),
                                 ParentReadOnlyListInterfaceOfGuidProperty            = this.ParentReadOnlyListInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfDateTimeProperty        = this.ParentReadOnlyListInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomEnumProperty      = this.ParentReadOnlyListInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty = this.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomClassProperty     = this.ParentReadOnlyListInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomBaseClassProperty = this.ParentReadOnlyListInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyListInterfaceOfBoolProperty            = this.Child1ReadOnlyListInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfIntProperty             = this.Child1ReadOnlyListInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfStringProperty          = this.Child1ReadOnlyListInterfaceOfStringProperty?.Select(i => i?.Clone().ToString()).ToList(),
                                 Child1ReadOnlyListInterfaceOfGuidProperty            = this.Child1ReadOnlyListInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfDateTimeProperty        = this.Child1ReadOnlyListInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomEnumProperty      = this.Child1ReadOnlyListInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty = this.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomClassProperty     = this.Child1ReadOnlyListInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomBaseClassProperty = this.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                             };

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002: DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        public override ModelAllPublicSetReadOnlyListParent DeepCloneWithParentReadOnlyListInterfaceOfIntProperty(IReadOnlyList<int> parentReadOnlyListInterfaceOfIntProperty)
        {
            var result = new ModelAllPublicSetReadOnlyListChild1
                             {
                                 ParentReadOnlyListInterfaceOfBoolProperty            = this.ParentReadOnlyListInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfIntProperty             = parentReadOnlyListInterfaceOfIntProperty,
                                 ParentReadOnlyListInterfaceOfStringProperty          = this.ParentReadOnlyListInterfaceOfStringProperty?.Select(i => i?.Clone().ToString()).ToList(),
                                 ParentReadOnlyListInterfaceOfGuidProperty            = this.ParentReadOnlyListInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfDateTimeProperty        = this.ParentReadOnlyListInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomEnumProperty      = this.ParentReadOnlyListInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty = this.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomClassProperty     = this.ParentReadOnlyListInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomBaseClassProperty = this.ParentReadOnlyListInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyListInterfaceOfBoolProperty            = this.Child1ReadOnlyListInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfIntProperty             = this.Child1ReadOnlyListInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfStringProperty          = this.Child1ReadOnlyListInterfaceOfStringProperty?.Select(i => i?.Clone().ToString()).ToList(),
                                 Child1ReadOnlyListInterfaceOfGuidProperty            = this.Child1ReadOnlyListInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfDateTimeProperty        = this.Child1ReadOnlyListInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomEnumProperty      = this.Child1ReadOnlyListInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty = this.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomClassProperty     = this.Child1ReadOnlyListInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomBaseClassProperty = this.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                             };

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002: DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        public override ModelAllPublicSetReadOnlyListParent DeepCloneWithParentReadOnlyListInterfaceOfStringProperty(IReadOnlyList<string> parentReadOnlyListInterfaceOfStringProperty)
        {
            var result = new ModelAllPublicSetReadOnlyListChild1
                             {
                                 ParentReadOnlyListInterfaceOfBoolProperty            = this.ParentReadOnlyListInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfIntProperty             = this.ParentReadOnlyListInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfStringProperty          = parentReadOnlyListInterfaceOfStringProperty,
                                 ParentReadOnlyListInterfaceOfGuidProperty            = this.ParentReadOnlyListInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfDateTimeProperty        = this.ParentReadOnlyListInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomEnumProperty      = this.ParentReadOnlyListInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty = this.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomClassProperty     = this.ParentReadOnlyListInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomBaseClassProperty = this.ParentReadOnlyListInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyListInterfaceOfBoolProperty            = this.Child1ReadOnlyListInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfIntProperty             = this.Child1ReadOnlyListInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfStringProperty          = this.Child1ReadOnlyListInterfaceOfStringProperty?.Select(i => i?.Clone().ToString()).ToList(),
                                 Child1ReadOnlyListInterfaceOfGuidProperty            = this.Child1ReadOnlyListInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfDateTimeProperty        = this.Child1ReadOnlyListInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomEnumProperty      = this.Child1ReadOnlyListInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty = this.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomClassProperty     = this.Child1ReadOnlyListInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomBaseClassProperty = this.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                             };

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002: DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        public override ModelAllPublicSetReadOnlyListParent DeepCloneWithParentReadOnlyListInterfaceOfGuidProperty(IReadOnlyList<Guid> parentReadOnlyListInterfaceOfGuidProperty)
        {
            var result = new ModelAllPublicSetReadOnlyListChild1
                             {
                                 ParentReadOnlyListInterfaceOfBoolProperty            = this.ParentReadOnlyListInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfIntProperty             = this.ParentReadOnlyListInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfStringProperty          = this.ParentReadOnlyListInterfaceOfStringProperty?.Select(i => i?.Clone().ToString()).ToList(),
                                 ParentReadOnlyListInterfaceOfGuidProperty            = parentReadOnlyListInterfaceOfGuidProperty,
                                 ParentReadOnlyListInterfaceOfDateTimeProperty        = this.ParentReadOnlyListInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomEnumProperty      = this.ParentReadOnlyListInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty = this.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomClassProperty     = this.ParentReadOnlyListInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomBaseClassProperty = this.ParentReadOnlyListInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyListInterfaceOfBoolProperty            = this.Child1ReadOnlyListInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfIntProperty             = this.Child1ReadOnlyListInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfStringProperty          = this.Child1ReadOnlyListInterfaceOfStringProperty?.Select(i => i?.Clone().ToString()).ToList(),
                                 Child1ReadOnlyListInterfaceOfGuidProperty            = this.Child1ReadOnlyListInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfDateTimeProperty        = this.Child1ReadOnlyListInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomEnumProperty      = this.Child1ReadOnlyListInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty = this.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomClassProperty     = this.Child1ReadOnlyListInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomBaseClassProperty = this.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                             };

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002: DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        public override ModelAllPublicSetReadOnlyListParent DeepCloneWithParentReadOnlyListInterfaceOfDateTimeProperty(IReadOnlyList<DateTime> parentReadOnlyListInterfaceOfDateTimeProperty)
        {
            var result = new ModelAllPublicSetReadOnlyListChild1
                             {
                                 ParentReadOnlyListInterfaceOfBoolProperty            = this.ParentReadOnlyListInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfIntProperty             = this.ParentReadOnlyListInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfStringProperty          = this.ParentReadOnlyListInterfaceOfStringProperty?.Select(i => i?.Clone().ToString()).ToList(),
                                 ParentReadOnlyListInterfaceOfGuidProperty            = this.ParentReadOnlyListInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfDateTimeProperty        = parentReadOnlyListInterfaceOfDateTimeProperty,
                                 ParentReadOnlyListInterfaceOfCustomEnumProperty      = this.ParentReadOnlyListInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty = this.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomClassProperty     = this.ParentReadOnlyListInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomBaseClassProperty = this.ParentReadOnlyListInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyListInterfaceOfBoolProperty            = this.Child1ReadOnlyListInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfIntProperty             = this.Child1ReadOnlyListInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfStringProperty          = this.Child1ReadOnlyListInterfaceOfStringProperty?.Select(i => i?.Clone().ToString()).ToList(),
                                 Child1ReadOnlyListInterfaceOfGuidProperty            = this.Child1ReadOnlyListInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfDateTimeProperty        = this.Child1ReadOnlyListInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomEnumProperty      = this.Child1ReadOnlyListInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty = this.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomClassProperty     = this.Child1ReadOnlyListInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomBaseClassProperty = this.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                             };

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002: DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        public override ModelAllPublicSetReadOnlyListParent DeepCloneWithParentReadOnlyListInterfaceOfCustomEnumProperty(IReadOnlyList<CustomEnum> parentReadOnlyListInterfaceOfCustomEnumProperty)
        {
            var result = new ModelAllPublicSetReadOnlyListChild1
                             {
                                 ParentReadOnlyListInterfaceOfBoolProperty            = this.ParentReadOnlyListInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfIntProperty             = this.ParentReadOnlyListInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfStringProperty          = this.ParentReadOnlyListInterfaceOfStringProperty?.Select(i => i?.Clone().ToString()).ToList(),
                                 ParentReadOnlyListInterfaceOfGuidProperty            = this.ParentReadOnlyListInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfDateTimeProperty        = this.ParentReadOnlyListInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomEnumProperty      = parentReadOnlyListInterfaceOfCustomEnumProperty,
                                 ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty = this.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomClassProperty     = this.ParentReadOnlyListInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomBaseClassProperty = this.ParentReadOnlyListInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyListInterfaceOfBoolProperty            = this.Child1ReadOnlyListInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfIntProperty             = this.Child1ReadOnlyListInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfStringProperty          = this.Child1ReadOnlyListInterfaceOfStringProperty?.Select(i => i?.Clone().ToString()).ToList(),
                                 Child1ReadOnlyListInterfaceOfGuidProperty            = this.Child1ReadOnlyListInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfDateTimeProperty        = this.Child1ReadOnlyListInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomEnumProperty      = this.Child1ReadOnlyListInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty = this.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomClassProperty     = this.Child1ReadOnlyListInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomBaseClassProperty = this.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                             };

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002: DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        public override ModelAllPublicSetReadOnlyListParent DeepCloneWithParentReadOnlyListInterfaceOfCustomFlagsEnumProperty(IReadOnlyList<CustomFlagsEnum> parentReadOnlyListInterfaceOfCustomFlagsEnumProperty)
        {
            var result = new ModelAllPublicSetReadOnlyListChild1
                             {
                                 ParentReadOnlyListInterfaceOfBoolProperty            = this.ParentReadOnlyListInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfIntProperty             = this.ParentReadOnlyListInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfStringProperty          = this.ParentReadOnlyListInterfaceOfStringProperty?.Select(i => i?.Clone().ToString()).ToList(),
                                 ParentReadOnlyListInterfaceOfGuidProperty            = this.ParentReadOnlyListInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfDateTimeProperty        = this.ParentReadOnlyListInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomEnumProperty      = this.ParentReadOnlyListInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty = parentReadOnlyListInterfaceOfCustomFlagsEnumProperty,
                                 ParentReadOnlyListInterfaceOfCustomClassProperty     = this.ParentReadOnlyListInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomBaseClassProperty = this.ParentReadOnlyListInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyListInterfaceOfBoolProperty            = this.Child1ReadOnlyListInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfIntProperty             = this.Child1ReadOnlyListInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfStringProperty          = this.Child1ReadOnlyListInterfaceOfStringProperty?.Select(i => i?.Clone().ToString()).ToList(),
                                 Child1ReadOnlyListInterfaceOfGuidProperty            = this.Child1ReadOnlyListInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfDateTimeProperty        = this.Child1ReadOnlyListInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomEnumProperty      = this.Child1ReadOnlyListInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty = this.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomClassProperty     = this.Child1ReadOnlyListInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomBaseClassProperty = this.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                             };

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002: DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        public override ModelAllPublicSetReadOnlyListParent DeepCloneWithParentReadOnlyListInterfaceOfCustomClassProperty(IReadOnlyList<CustomClass> parentReadOnlyListInterfaceOfCustomClassProperty)
        {
            var result = new ModelAllPublicSetReadOnlyListChild1
                             {
                                 ParentReadOnlyListInterfaceOfBoolProperty            = this.ParentReadOnlyListInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfIntProperty             = this.ParentReadOnlyListInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfStringProperty          = this.ParentReadOnlyListInterfaceOfStringProperty?.Select(i => i?.Clone().ToString()).ToList(),
                                 ParentReadOnlyListInterfaceOfGuidProperty            = this.ParentReadOnlyListInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfDateTimeProperty        = this.ParentReadOnlyListInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomEnumProperty      = this.ParentReadOnlyListInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty = this.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomClassProperty     = parentReadOnlyListInterfaceOfCustomClassProperty,
                                 ParentReadOnlyListInterfaceOfCustomBaseClassProperty = this.ParentReadOnlyListInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyListInterfaceOfBoolProperty            = this.Child1ReadOnlyListInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfIntProperty             = this.Child1ReadOnlyListInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfStringProperty          = this.Child1ReadOnlyListInterfaceOfStringProperty?.Select(i => i?.Clone().ToString()).ToList(),
                                 Child1ReadOnlyListInterfaceOfGuidProperty            = this.Child1ReadOnlyListInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfDateTimeProperty        = this.Child1ReadOnlyListInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomEnumProperty      = this.Child1ReadOnlyListInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty = this.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomClassProperty     = this.Child1ReadOnlyListInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomBaseClassProperty = this.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                             };

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002: DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        public override ModelAllPublicSetReadOnlyListParent DeepCloneWithParentReadOnlyListInterfaceOfCustomBaseClassProperty(IReadOnlyList<CustomBaseClass> parentReadOnlyListInterfaceOfCustomBaseClassProperty)
        {
            var result = new ModelAllPublicSetReadOnlyListChild1
                             {
                                 ParentReadOnlyListInterfaceOfBoolProperty            = this.ParentReadOnlyListInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfIntProperty             = this.ParentReadOnlyListInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfStringProperty          = this.ParentReadOnlyListInterfaceOfStringProperty?.Select(i => i?.Clone().ToString()).ToList(),
                                 ParentReadOnlyListInterfaceOfGuidProperty            = this.ParentReadOnlyListInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfDateTimeProperty        = this.ParentReadOnlyListInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomEnumProperty      = this.ParentReadOnlyListInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty = this.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomClassProperty     = this.ParentReadOnlyListInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomBaseClassProperty = parentReadOnlyListInterfaceOfCustomBaseClassProperty,
                                 Child1ReadOnlyListInterfaceOfBoolProperty            = this.Child1ReadOnlyListInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfIntProperty             = this.Child1ReadOnlyListInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfStringProperty          = this.Child1ReadOnlyListInterfaceOfStringProperty?.Select(i => i?.Clone().ToString()).ToList(),
                                 Child1ReadOnlyListInterfaceOfGuidProperty            = this.Child1ReadOnlyListInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfDateTimeProperty        = this.Child1ReadOnlyListInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomEnumProperty      = this.Child1ReadOnlyListInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty = this.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomClassProperty     = this.Child1ReadOnlyListInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomBaseClassProperty = this.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ReadOnlyListInterfaceOfBoolProperty" />.
        /// </summary>
        /// <param name="child1ReadOnlyListInterfaceOfBoolProperty">The new <see cref="Child1ReadOnlyListInterfaceOfBoolProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPublicSetReadOnlyListChild1" /> using the specified <paramref name="child1ReadOnlyListInterfaceOfBoolProperty" /> for <see cref="Child1ReadOnlyListInterfaceOfBoolProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002: DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        public ModelAllPublicSetReadOnlyListChild1 DeepCloneWithChild1ReadOnlyListInterfaceOfBoolProperty(IReadOnlyList<bool> child1ReadOnlyListInterfaceOfBoolProperty)
        {
            var result = new ModelAllPublicSetReadOnlyListChild1
                             {
                                 ParentReadOnlyListInterfaceOfBoolProperty            = this.ParentReadOnlyListInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfIntProperty             = this.ParentReadOnlyListInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfStringProperty          = this.ParentReadOnlyListInterfaceOfStringProperty?.Select(i => i?.Clone().ToString()).ToList(),
                                 ParentReadOnlyListInterfaceOfGuidProperty            = this.ParentReadOnlyListInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfDateTimeProperty        = this.ParentReadOnlyListInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomEnumProperty      = this.ParentReadOnlyListInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty = this.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomClassProperty     = this.ParentReadOnlyListInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomBaseClassProperty = this.ParentReadOnlyListInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyListInterfaceOfBoolProperty            = child1ReadOnlyListInterfaceOfBoolProperty,
                                 Child1ReadOnlyListInterfaceOfIntProperty             = this.Child1ReadOnlyListInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfStringProperty          = this.Child1ReadOnlyListInterfaceOfStringProperty?.Select(i => i?.Clone().ToString()).ToList(),
                                 Child1ReadOnlyListInterfaceOfGuidProperty            = this.Child1ReadOnlyListInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfDateTimeProperty        = this.Child1ReadOnlyListInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomEnumProperty      = this.Child1ReadOnlyListInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty = this.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomClassProperty     = this.Child1ReadOnlyListInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomBaseClassProperty = this.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ReadOnlyListInterfaceOfIntProperty" />.
        /// </summary>
        /// <param name="child1ReadOnlyListInterfaceOfIntProperty">The new <see cref="Child1ReadOnlyListInterfaceOfIntProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPublicSetReadOnlyListChild1" /> using the specified <paramref name="child1ReadOnlyListInterfaceOfIntProperty" /> for <see cref="Child1ReadOnlyListInterfaceOfIntProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002: DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        public ModelAllPublicSetReadOnlyListChild1 DeepCloneWithChild1ReadOnlyListInterfaceOfIntProperty(IReadOnlyList<int> child1ReadOnlyListInterfaceOfIntProperty)
        {
            var result = new ModelAllPublicSetReadOnlyListChild1
                             {
                                 ParentReadOnlyListInterfaceOfBoolProperty            = this.ParentReadOnlyListInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfIntProperty             = this.ParentReadOnlyListInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfStringProperty          = this.ParentReadOnlyListInterfaceOfStringProperty?.Select(i => i?.Clone().ToString()).ToList(),
                                 ParentReadOnlyListInterfaceOfGuidProperty            = this.ParentReadOnlyListInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfDateTimeProperty        = this.ParentReadOnlyListInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomEnumProperty      = this.ParentReadOnlyListInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty = this.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomClassProperty     = this.ParentReadOnlyListInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomBaseClassProperty = this.ParentReadOnlyListInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyListInterfaceOfBoolProperty            = this.Child1ReadOnlyListInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfIntProperty             = child1ReadOnlyListInterfaceOfIntProperty,
                                 Child1ReadOnlyListInterfaceOfStringProperty          = this.Child1ReadOnlyListInterfaceOfStringProperty?.Select(i => i?.Clone().ToString()).ToList(),
                                 Child1ReadOnlyListInterfaceOfGuidProperty            = this.Child1ReadOnlyListInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfDateTimeProperty        = this.Child1ReadOnlyListInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomEnumProperty      = this.Child1ReadOnlyListInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty = this.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomClassProperty     = this.Child1ReadOnlyListInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomBaseClassProperty = this.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ReadOnlyListInterfaceOfStringProperty" />.
        /// </summary>
        /// <param name="child1ReadOnlyListInterfaceOfStringProperty">The new <see cref="Child1ReadOnlyListInterfaceOfStringProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPublicSetReadOnlyListChild1" /> using the specified <paramref name="child1ReadOnlyListInterfaceOfStringProperty" /> for <see cref="Child1ReadOnlyListInterfaceOfStringProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002: DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        public ModelAllPublicSetReadOnlyListChild1 DeepCloneWithChild1ReadOnlyListInterfaceOfStringProperty(IReadOnlyList<string> child1ReadOnlyListInterfaceOfStringProperty)
        {
            var result = new ModelAllPublicSetReadOnlyListChild1
                             {
                                 ParentReadOnlyListInterfaceOfBoolProperty            = this.ParentReadOnlyListInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfIntProperty             = this.ParentReadOnlyListInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfStringProperty          = this.ParentReadOnlyListInterfaceOfStringProperty?.Select(i => i?.Clone().ToString()).ToList(),
                                 ParentReadOnlyListInterfaceOfGuidProperty            = this.ParentReadOnlyListInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfDateTimeProperty        = this.ParentReadOnlyListInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomEnumProperty      = this.ParentReadOnlyListInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty = this.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomClassProperty     = this.ParentReadOnlyListInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomBaseClassProperty = this.ParentReadOnlyListInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyListInterfaceOfBoolProperty            = this.Child1ReadOnlyListInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfIntProperty             = this.Child1ReadOnlyListInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfStringProperty          = child1ReadOnlyListInterfaceOfStringProperty,
                                 Child1ReadOnlyListInterfaceOfGuidProperty            = this.Child1ReadOnlyListInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfDateTimeProperty        = this.Child1ReadOnlyListInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomEnumProperty      = this.Child1ReadOnlyListInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty = this.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomClassProperty     = this.Child1ReadOnlyListInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomBaseClassProperty = this.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ReadOnlyListInterfaceOfGuidProperty" />.
        /// </summary>
        /// <param name="child1ReadOnlyListInterfaceOfGuidProperty">The new <see cref="Child1ReadOnlyListInterfaceOfGuidProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPublicSetReadOnlyListChild1" /> using the specified <paramref name="child1ReadOnlyListInterfaceOfGuidProperty" /> for <see cref="Child1ReadOnlyListInterfaceOfGuidProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002: DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        public ModelAllPublicSetReadOnlyListChild1 DeepCloneWithChild1ReadOnlyListInterfaceOfGuidProperty(IReadOnlyList<Guid> child1ReadOnlyListInterfaceOfGuidProperty)
        {
            var result = new ModelAllPublicSetReadOnlyListChild1
                             {
                                 ParentReadOnlyListInterfaceOfBoolProperty            = this.ParentReadOnlyListInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfIntProperty             = this.ParentReadOnlyListInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfStringProperty          = this.ParentReadOnlyListInterfaceOfStringProperty?.Select(i => i?.Clone().ToString()).ToList(),
                                 ParentReadOnlyListInterfaceOfGuidProperty            = this.ParentReadOnlyListInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfDateTimeProperty        = this.ParentReadOnlyListInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomEnumProperty      = this.ParentReadOnlyListInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty = this.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomClassProperty     = this.ParentReadOnlyListInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomBaseClassProperty = this.ParentReadOnlyListInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyListInterfaceOfBoolProperty            = this.Child1ReadOnlyListInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfIntProperty             = this.Child1ReadOnlyListInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfStringProperty          = this.Child1ReadOnlyListInterfaceOfStringProperty?.Select(i => i?.Clone().ToString()).ToList(),
                                 Child1ReadOnlyListInterfaceOfGuidProperty            = child1ReadOnlyListInterfaceOfGuidProperty,
                                 Child1ReadOnlyListInterfaceOfDateTimeProperty        = this.Child1ReadOnlyListInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomEnumProperty      = this.Child1ReadOnlyListInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty = this.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomClassProperty     = this.Child1ReadOnlyListInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomBaseClassProperty = this.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ReadOnlyListInterfaceOfDateTimeProperty" />.
        /// </summary>
        /// <param name="child1ReadOnlyListInterfaceOfDateTimeProperty">The new <see cref="Child1ReadOnlyListInterfaceOfDateTimeProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPublicSetReadOnlyListChild1" /> using the specified <paramref name="child1ReadOnlyListInterfaceOfDateTimeProperty" /> for <see cref="Child1ReadOnlyListInterfaceOfDateTimeProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002: DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        public ModelAllPublicSetReadOnlyListChild1 DeepCloneWithChild1ReadOnlyListInterfaceOfDateTimeProperty(IReadOnlyList<DateTime> child1ReadOnlyListInterfaceOfDateTimeProperty)
        {
            var result = new ModelAllPublicSetReadOnlyListChild1
                             {
                                 ParentReadOnlyListInterfaceOfBoolProperty            = this.ParentReadOnlyListInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfIntProperty             = this.ParentReadOnlyListInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfStringProperty          = this.ParentReadOnlyListInterfaceOfStringProperty?.Select(i => i?.Clone().ToString()).ToList(),
                                 ParentReadOnlyListInterfaceOfGuidProperty            = this.ParentReadOnlyListInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfDateTimeProperty        = this.ParentReadOnlyListInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomEnumProperty      = this.ParentReadOnlyListInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty = this.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomClassProperty     = this.ParentReadOnlyListInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomBaseClassProperty = this.ParentReadOnlyListInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyListInterfaceOfBoolProperty            = this.Child1ReadOnlyListInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfIntProperty             = this.Child1ReadOnlyListInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfStringProperty          = this.Child1ReadOnlyListInterfaceOfStringProperty?.Select(i => i?.Clone().ToString()).ToList(),
                                 Child1ReadOnlyListInterfaceOfGuidProperty            = this.Child1ReadOnlyListInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfDateTimeProperty        = child1ReadOnlyListInterfaceOfDateTimeProperty,
                                 Child1ReadOnlyListInterfaceOfCustomEnumProperty      = this.Child1ReadOnlyListInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty = this.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomClassProperty     = this.Child1ReadOnlyListInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomBaseClassProperty = this.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ReadOnlyListInterfaceOfCustomEnumProperty" />.
        /// </summary>
        /// <param name="child1ReadOnlyListInterfaceOfCustomEnumProperty">The new <see cref="Child1ReadOnlyListInterfaceOfCustomEnumProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPublicSetReadOnlyListChild1" /> using the specified <paramref name="child1ReadOnlyListInterfaceOfCustomEnumProperty" /> for <see cref="Child1ReadOnlyListInterfaceOfCustomEnumProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002: DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        public ModelAllPublicSetReadOnlyListChild1 DeepCloneWithChild1ReadOnlyListInterfaceOfCustomEnumProperty(IReadOnlyList<CustomEnum> child1ReadOnlyListInterfaceOfCustomEnumProperty)
        {
            var result = new ModelAllPublicSetReadOnlyListChild1
                             {
                                 ParentReadOnlyListInterfaceOfBoolProperty            = this.ParentReadOnlyListInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfIntProperty             = this.ParentReadOnlyListInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfStringProperty          = this.ParentReadOnlyListInterfaceOfStringProperty?.Select(i => i?.Clone().ToString()).ToList(),
                                 ParentReadOnlyListInterfaceOfGuidProperty            = this.ParentReadOnlyListInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfDateTimeProperty        = this.ParentReadOnlyListInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomEnumProperty      = this.ParentReadOnlyListInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty = this.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomClassProperty     = this.ParentReadOnlyListInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomBaseClassProperty = this.ParentReadOnlyListInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyListInterfaceOfBoolProperty            = this.Child1ReadOnlyListInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfIntProperty             = this.Child1ReadOnlyListInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfStringProperty          = this.Child1ReadOnlyListInterfaceOfStringProperty?.Select(i => i?.Clone().ToString()).ToList(),
                                 Child1ReadOnlyListInterfaceOfGuidProperty            = this.Child1ReadOnlyListInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfDateTimeProperty        = this.Child1ReadOnlyListInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomEnumProperty      = child1ReadOnlyListInterfaceOfCustomEnumProperty,
                                 Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty = this.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomClassProperty     = this.Child1ReadOnlyListInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomBaseClassProperty = this.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty" />.
        /// </summary>
        /// <param name="child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty">The new <see cref="Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPublicSetReadOnlyListChild1" /> using the specified <paramref name="child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty" /> for <see cref="Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002: DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        public ModelAllPublicSetReadOnlyListChild1 DeepCloneWithChild1ReadOnlyListInterfaceOfCustomFlagsEnumProperty(IReadOnlyList<CustomFlagsEnum> child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty)
        {
            var result = new ModelAllPublicSetReadOnlyListChild1
                             {
                                 ParentReadOnlyListInterfaceOfBoolProperty            = this.ParentReadOnlyListInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfIntProperty             = this.ParentReadOnlyListInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfStringProperty          = this.ParentReadOnlyListInterfaceOfStringProperty?.Select(i => i?.Clone().ToString()).ToList(),
                                 ParentReadOnlyListInterfaceOfGuidProperty            = this.ParentReadOnlyListInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfDateTimeProperty        = this.ParentReadOnlyListInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomEnumProperty      = this.ParentReadOnlyListInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty = this.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomClassProperty     = this.ParentReadOnlyListInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomBaseClassProperty = this.ParentReadOnlyListInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyListInterfaceOfBoolProperty            = this.Child1ReadOnlyListInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfIntProperty             = this.Child1ReadOnlyListInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfStringProperty          = this.Child1ReadOnlyListInterfaceOfStringProperty?.Select(i => i?.Clone().ToString()).ToList(),
                                 Child1ReadOnlyListInterfaceOfGuidProperty            = this.Child1ReadOnlyListInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfDateTimeProperty        = this.Child1ReadOnlyListInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomEnumProperty      = this.Child1ReadOnlyListInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty = child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty,
                                 Child1ReadOnlyListInterfaceOfCustomClassProperty     = this.Child1ReadOnlyListInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomBaseClassProperty = this.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ReadOnlyListInterfaceOfCustomClassProperty" />.
        /// </summary>
        /// <param name="child1ReadOnlyListInterfaceOfCustomClassProperty">The new <see cref="Child1ReadOnlyListInterfaceOfCustomClassProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPublicSetReadOnlyListChild1" /> using the specified <paramref name="child1ReadOnlyListInterfaceOfCustomClassProperty" /> for <see cref="Child1ReadOnlyListInterfaceOfCustomClassProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002: DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        public ModelAllPublicSetReadOnlyListChild1 DeepCloneWithChild1ReadOnlyListInterfaceOfCustomClassProperty(IReadOnlyList<CustomClass> child1ReadOnlyListInterfaceOfCustomClassProperty)
        {
            var result = new ModelAllPublicSetReadOnlyListChild1
                             {
                                 ParentReadOnlyListInterfaceOfBoolProperty            = this.ParentReadOnlyListInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfIntProperty             = this.ParentReadOnlyListInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfStringProperty          = this.ParentReadOnlyListInterfaceOfStringProperty?.Select(i => i?.Clone().ToString()).ToList(),
                                 ParentReadOnlyListInterfaceOfGuidProperty            = this.ParentReadOnlyListInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfDateTimeProperty        = this.ParentReadOnlyListInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomEnumProperty      = this.ParentReadOnlyListInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty = this.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomClassProperty     = this.ParentReadOnlyListInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomBaseClassProperty = this.ParentReadOnlyListInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyListInterfaceOfBoolProperty            = this.Child1ReadOnlyListInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfIntProperty             = this.Child1ReadOnlyListInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfStringProperty          = this.Child1ReadOnlyListInterfaceOfStringProperty?.Select(i => i?.Clone().ToString()).ToList(),
                                 Child1ReadOnlyListInterfaceOfGuidProperty            = this.Child1ReadOnlyListInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfDateTimeProperty        = this.Child1ReadOnlyListInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomEnumProperty      = this.Child1ReadOnlyListInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty = this.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomClassProperty     = child1ReadOnlyListInterfaceOfCustomClassProperty,
                                 Child1ReadOnlyListInterfaceOfCustomBaseClassProperty = this.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ReadOnlyListInterfaceOfCustomBaseClassProperty" />.
        /// </summary>
        /// <param name="child1ReadOnlyListInterfaceOfCustomBaseClassProperty">The new <see cref="Child1ReadOnlyListInterfaceOfCustomBaseClassProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPublicSetReadOnlyListChild1" /> using the specified <paramref name="child1ReadOnlyListInterfaceOfCustomBaseClassProperty" /> for <see cref="Child1ReadOnlyListInterfaceOfCustomBaseClassProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002: DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        public ModelAllPublicSetReadOnlyListChild1 DeepCloneWithChild1ReadOnlyListInterfaceOfCustomBaseClassProperty(IReadOnlyList<CustomBaseClass> child1ReadOnlyListInterfaceOfCustomBaseClassProperty)
        {
            var result = new ModelAllPublicSetReadOnlyListChild1
                             {
                                 ParentReadOnlyListInterfaceOfBoolProperty            = this.ParentReadOnlyListInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfIntProperty             = this.ParentReadOnlyListInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfStringProperty          = this.ParentReadOnlyListInterfaceOfStringProperty?.Select(i => i?.Clone().ToString()).ToList(),
                                 ParentReadOnlyListInterfaceOfGuidProperty            = this.ParentReadOnlyListInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfDateTimeProperty        = this.ParentReadOnlyListInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomEnumProperty      = this.ParentReadOnlyListInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty = this.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomClassProperty     = this.ParentReadOnlyListInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomBaseClassProperty = this.ParentReadOnlyListInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyListInterfaceOfBoolProperty            = this.Child1ReadOnlyListInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfIntProperty             = this.Child1ReadOnlyListInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfStringProperty          = this.Child1ReadOnlyListInterfaceOfStringProperty?.Select(i => i?.Clone().ToString()).ToList(),
                                 Child1ReadOnlyListInterfaceOfGuidProperty            = this.Child1ReadOnlyListInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfDateTimeProperty        = this.Child1ReadOnlyListInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomEnumProperty      = this.Child1ReadOnlyListInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty = this.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomClassProperty     = this.Child1ReadOnlyListInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomBaseClassProperty = child1ReadOnlyListInterfaceOfCustomBaseClassProperty,
                             };

            return result;
        }

        /// <inheritdoc />
        protected override ModelAllPublicSetReadOnlyListParent DeepCloneInternal()
        {
            var result = new ModelAllPublicSetReadOnlyListChild1
                             {
                                 ParentReadOnlyListInterfaceOfBoolProperty            = this.ParentReadOnlyListInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfIntProperty             = this.ParentReadOnlyListInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfStringProperty          = this.ParentReadOnlyListInterfaceOfStringProperty?.Select(i => i?.Clone().ToString()).ToList(),
                                 ParentReadOnlyListInterfaceOfGuidProperty            = this.ParentReadOnlyListInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfDateTimeProperty        = this.ParentReadOnlyListInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomEnumProperty      = this.ParentReadOnlyListInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty = this.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomClassProperty     = this.ParentReadOnlyListInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyListInterfaceOfCustomBaseClassProperty = this.ParentReadOnlyListInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyListInterfaceOfBoolProperty            = this.Child1ReadOnlyListInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfIntProperty             = this.Child1ReadOnlyListInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfStringProperty          = this.Child1ReadOnlyListInterfaceOfStringProperty?.Select(i => i?.Clone().ToString()).ToList(),
                                 Child1ReadOnlyListInterfaceOfGuidProperty            = this.Child1ReadOnlyListInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfDateTimeProperty        = this.Child1ReadOnlyListInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomEnumProperty      = this.Child1ReadOnlyListInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty = this.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomClassProperty     = this.Child1ReadOnlyListInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyListInterfaceOfCustomBaseClassProperty = this.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                             };

            return result;
        }

        /// <inheritdoc />
        public override string ToString()
        {
            var result = Invariant($"OBeautifulCode.CodeGen.ModelObject.Test.ModelAllPublicSetReadOnlyListChild1: ParentReadOnlyListInterfaceOfBoolProperty = {this.ParentReadOnlyListInterfaceOfBoolProperty?.ToString() ?? "<null>"}, ParentReadOnlyListInterfaceOfIntProperty = {this.ParentReadOnlyListInterfaceOfIntProperty?.ToString() ?? "<null>"}, ParentReadOnlyListInterfaceOfStringProperty = {this.ParentReadOnlyListInterfaceOfStringProperty?.ToString() ?? "<null>"}, ParentReadOnlyListInterfaceOfGuidProperty = {this.ParentReadOnlyListInterfaceOfGuidProperty?.ToString() ?? "<null>"}, ParentReadOnlyListInterfaceOfDateTimeProperty = {this.ParentReadOnlyListInterfaceOfDateTimeProperty?.ToString() ?? "<null>"}, ParentReadOnlyListInterfaceOfCustomEnumProperty = {this.ParentReadOnlyListInterfaceOfCustomEnumProperty?.ToString() ?? "<null>"}, ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty = {this.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty?.ToString() ?? "<null>"}, ParentReadOnlyListInterfaceOfCustomClassProperty = {this.ParentReadOnlyListInterfaceOfCustomClassProperty?.ToString() ?? "<null>"}, ParentReadOnlyListInterfaceOfCustomBaseClassProperty = {this.ParentReadOnlyListInterfaceOfCustomBaseClassProperty?.ToString() ?? "<null>"}, Child1ReadOnlyListInterfaceOfBoolProperty = {this.Child1ReadOnlyListInterfaceOfBoolProperty?.ToString() ?? "<null>"}, Child1ReadOnlyListInterfaceOfIntProperty = {this.Child1ReadOnlyListInterfaceOfIntProperty?.ToString() ?? "<null>"}, Child1ReadOnlyListInterfaceOfStringProperty = {this.Child1ReadOnlyListInterfaceOfStringProperty?.ToString() ?? "<null>"}, Child1ReadOnlyListInterfaceOfGuidProperty = {this.Child1ReadOnlyListInterfaceOfGuidProperty?.ToString() ?? "<null>"}, Child1ReadOnlyListInterfaceOfDateTimeProperty = {this.Child1ReadOnlyListInterfaceOfDateTimeProperty?.ToString() ?? "<null>"}, Child1ReadOnlyListInterfaceOfCustomEnumProperty = {this.Child1ReadOnlyListInterfaceOfCustomEnumProperty?.ToString() ?? "<null>"}, Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty = {this.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty?.ToString() ?? "<null>"}, Child1ReadOnlyListInterfaceOfCustomClassProperty = {this.Child1ReadOnlyListInterfaceOfCustomClassProperty?.ToString() ?? "<null>"}, Child1ReadOnlyListInterfaceOfCustomBaseClassProperty = {this.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty?.ToString() ?? "<null>"}.");

            return result;
        }
    }
}