// --------------------------------------------------------------------------------------------------------------------
// <auto-generated>
//   Generated using OBeautifulCode.CodeGen.ModelObject (1.0.0.0)
// </auto-generated>
// --------------------------------------------------------------------------------------------------------------------

namespace OBeautifulCode.CodeGen.ModelObject.Test
{
    using global::System;
    using global::System.CodeDom.Compiler;
    using global::System.Collections.Concurrent;
    using global::System.Collections.Generic;
    using global::System.Collections.ObjectModel;
    using global::System.Diagnostics.CodeAnalysis;
    using global::System.Globalization;
    using global::System.Linq;

    using global::OBeautifulCode.Equality.Recipes;
    using global::OBeautifulCode.Type;
    using global::OBeautifulCode.Type.Recipes;

    using static global::System.FormattableString;

    [Serializable]
    public partial class ModelAllPublicSetReadOnlyCollectionChild1 : IModel<ModelAllPublicSetReadOnlyCollectionChild1>
    {
        /// <summary>
        /// Determines whether two objects of type <see cref="ModelAllPublicSetReadOnlyCollectionChild1"/> are equal.
        /// </summary>
        /// <param name="left">The object to the left of the equality operator.</param>
        /// <param name="right">The object to the right of the equality operator.</param>
        /// <returns>true if the two items are equal; otherwise false.</returns>
        public static bool operator ==(ModelAllPublicSetReadOnlyCollectionChild1 left, ModelAllPublicSetReadOnlyCollectionChild1 right)
        {
            if (ReferenceEquals(left, right))
            {
                return true;
            }

            if (ReferenceEquals(left, null) || ReferenceEquals(right, null))
            {
                return false;
            }

            var result = left.Equals(right);

            return result;
        }

        /// <summary>
        /// Determines whether two objects of type <see cref="ModelAllPublicSetReadOnlyCollectionChild1"/> are not equal.
        /// </summary>
        /// <param name="left">The object to the left of the equality operator.</param>
        /// <param name="right">The object to the right of the equality operator.</param>
        /// <returns>true if the two items are not equal; otherwise false.</returns>
        public static bool operator !=(ModelAllPublicSetReadOnlyCollectionChild1 left, ModelAllPublicSetReadOnlyCollectionChild1 right) => !(left == right);

        /// <inheritdoc />
        public bool Equals(ModelAllPublicSetReadOnlyCollectionChild1 other)
        {
            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (ReferenceEquals(other, null))
            {
                return false;
            }

            var result = this.ParentReadOnlyCollectionInterfaceOfBoolProperty.IsEqualTo(other.ParentReadOnlyCollectionInterfaceOfBoolProperty)
                      && this.ParentReadOnlyCollectionInterfaceOfIntProperty.IsEqualTo(other.ParentReadOnlyCollectionInterfaceOfIntProperty)
                      && this.ParentReadOnlyCollectionInterfaceOfStringProperty.IsEqualTo(other.ParentReadOnlyCollectionInterfaceOfStringProperty)
                      && this.ParentReadOnlyCollectionInterfaceOfGuidProperty.IsEqualTo(other.ParentReadOnlyCollectionInterfaceOfGuidProperty)
                      && this.ParentReadOnlyCollectionInterfaceOfDateTimeProperty.IsEqualTo(other.ParentReadOnlyCollectionInterfaceOfDateTimeProperty)
                      && this.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty.IsEqualTo(other.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty)
                      && this.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty.IsEqualTo(other.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty)
                      && this.ParentReadOnlyCollectionInterfaceOfCustomClassProperty.IsEqualTo(other.ParentReadOnlyCollectionInterfaceOfCustomClassProperty)
                      && this.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty.IsEqualTo(other.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty)
                      && this.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty.IsEqualTo(other.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty)
                      && this.Child1ReadOnlyCollectionInterfaceOfBoolProperty.IsEqualTo(other.Child1ReadOnlyCollectionInterfaceOfBoolProperty)
                      && this.Child1ReadOnlyCollectionInterfaceOfIntProperty.IsEqualTo(other.Child1ReadOnlyCollectionInterfaceOfIntProperty)
                      && this.Child1ReadOnlyCollectionInterfaceOfStringProperty.IsEqualTo(other.Child1ReadOnlyCollectionInterfaceOfStringProperty)
                      && this.Child1ReadOnlyCollectionInterfaceOfGuidProperty.IsEqualTo(other.Child1ReadOnlyCollectionInterfaceOfGuidProperty)
                      && this.Child1ReadOnlyCollectionInterfaceOfDateTimeProperty.IsEqualTo(other.Child1ReadOnlyCollectionInterfaceOfDateTimeProperty)
                      && this.Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty.IsEqualTo(other.Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty)
                      && this.Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty.IsEqualTo(other.Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty)
                      && this.Child1ReadOnlyCollectionInterfaceOfCustomClassProperty.IsEqualTo(other.Child1ReadOnlyCollectionInterfaceOfCustomClassProperty)
                      && this.Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty.IsEqualTo(other.Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty)
                      && this.Child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty.IsEqualTo(other.Child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty);

            return result;
        }

        /// <inheritdoc />
        public override bool Equals(object obj) => this == (obj as ModelAllPublicSetReadOnlyCollectionChild1);

        /// <inheritdoc />
        public override int GetHashCode() => HashCodeHelper.Initialize()
            .Hash(this.ParentReadOnlyCollectionInterfaceOfBoolProperty)
            .Hash(this.ParentReadOnlyCollectionInterfaceOfIntProperty)
            .Hash(this.ParentReadOnlyCollectionInterfaceOfStringProperty)
            .Hash(this.ParentReadOnlyCollectionInterfaceOfGuidProperty)
            .Hash(this.ParentReadOnlyCollectionInterfaceOfDateTimeProperty)
            .Hash(this.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty)
            .Hash(this.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty)
            .Hash(this.ParentReadOnlyCollectionInterfaceOfCustomClassProperty)
            .Hash(this.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty)
            .Hash(this.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty)
            .Hash(this.Child1ReadOnlyCollectionInterfaceOfBoolProperty)
            .Hash(this.Child1ReadOnlyCollectionInterfaceOfIntProperty)
            .Hash(this.Child1ReadOnlyCollectionInterfaceOfStringProperty)
            .Hash(this.Child1ReadOnlyCollectionInterfaceOfGuidProperty)
            .Hash(this.Child1ReadOnlyCollectionInterfaceOfDateTimeProperty)
            .Hash(this.Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty)
            .Hash(this.Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty)
            .Hash(this.Child1ReadOnlyCollectionInterfaceOfCustomClassProperty)
            .Hash(this.Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty)
            .Hash(this.Child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty)
            .Value;

        /// <inheritdoc />
        public new ModelAllPublicSetReadOnlyCollectionChild1 DeepClone() => (ModelAllPublicSetReadOnlyCollectionChild1)this.DeepCloneInternal();

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPublicSetReadOnlyCollectionParent DeepCloneWithParentReadOnlyCollectionInterfaceOfBoolProperty(IReadOnlyCollection<bool> parentReadOnlyCollectionInterfaceOfBoolProperty)
        {
            var result = new ModelAllPublicSetReadOnlyCollectionChild1
                             {
                                 ParentReadOnlyCollectionInterfaceOfBoolProperty                            = parentReadOnlyCollectionInterfaceOfBoolProperty,
                                 ParentReadOnlyCollectionInterfaceOfIntProperty                             = this.ParentReadOnlyCollectionInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfStringProperty                          = this.ParentReadOnlyCollectionInterfaceOfStringProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfGuidProperty                            = this.ParentReadOnlyCollectionInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfDateTimeProperty                        = this.ParentReadOnlyCollectionInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomEnumProperty                      = this.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty                 = this.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomClassProperty                     = this.ParentReadOnlyCollectionInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty                 = this.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty = this.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfBoolProperty                            = this.Child1ReadOnlyCollectionInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfIntProperty                             = this.Child1ReadOnlyCollectionInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfStringProperty                          = this.Child1ReadOnlyCollectionInterfaceOfStringProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfGuidProperty                            = this.Child1ReadOnlyCollectionInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfDateTimeProperty                        = this.Child1ReadOnlyCollectionInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty                      = this.Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty                 = this.Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomClassProperty                     = this.Child1ReadOnlyCollectionInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty                 = this.Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty = this.Child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                             };

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPublicSetReadOnlyCollectionParent DeepCloneWithParentReadOnlyCollectionInterfaceOfIntProperty(IReadOnlyCollection<int> parentReadOnlyCollectionInterfaceOfIntProperty)
        {
            var result = new ModelAllPublicSetReadOnlyCollectionChild1
                             {
                                 ParentReadOnlyCollectionInterfaceOfBoolProperty                            = this.ParentReadOnlyCollectionInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfIntProperty                             = parentReadOnlyCollectionInterfaceOfIntProperty,
                                 ParentReadOnlyCollectionInterfaceOfStringProperty                          = this.ParentReadOnlyCollectionInterfaceOfStringProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfGuidProperty                            = this.ParentReadOnlyCollectionInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfDateTimeProperty                        = this.ParentReadOnlyCollectionInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomEnumProperty                      = this.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty                 = this.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomClassProperty                     = this.ParentReadOnlyCollectionInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty                 = this.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty = this.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfBoolProperty                            = this.Child1ReadOnlyCollectionInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfIntProperty                             = this.Child1ReadOnlyCollectionInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfStringProperty                          = this.Child1ReadOnlyCollectionInterfaceOfStringProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfGuidProperty                            = this.Child1ReadOnlyCollectionInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfDateTimeProperty                        = this.Child1ReadOnlyCollectionInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty                      = this.Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty                 = this.Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomClassProperty                     = this.Child1ReadOnlyCollectionInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty                 = this.Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty = this.Child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                             };

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPublicSetReadOnlyCollectionParent DeepCloneWithParentReadOnlyCollectionInterfaceOfStringProperty(IReadOnlyCollection<string> parentReadOnlyCollectionInterfaceOfStringProperty)
        {
            var result = new ModelAllPublicSetReadOnlyCollectionChild1
                             {
                                 ParentReadOnlyCollectionInterfaceOfBoolProperty                            = this.ParentReadOnlyCollectionInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfIntProperty                             = this.ParentReadOnlyCollectionInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfStringProperty                          = parentReadOnlyCollectionInterfaceOfStringProperty,
                                 ParentReadOnlyCollectionInterfaceOfGuidProperty                            = this.ParentReadOnlyCollectionInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfDateTimeProperty                        = this.ParentReadOnlyCollectionInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomEnumProperty                      = this.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty                 = this.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomClassProperty                     = this.ParentReadOnlyCollectionInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty                 = this.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty = this.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfBoolProperty                            = this.Child1ReadOnlyCollectionInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfIntProperty                             = this.Child1ReadOnlyCollectionInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfStringProperty                          = this.Child1ReadOnlyCollectionInterfaceOfStringProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfGuidProperty                            = this.Child1ReadOnlyCollectionInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfDateTimeProperty                        = this.Child1ReadOnlyCollectionInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty                      = this.Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty                 = this.Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomClassProperty                     = this.Child1ReadOnlyCollectionInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty                 = this.Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty = this.Child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                             };

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPublicSetReadOnlyCollectionParent DeepCloneWithParentReadOnlyCollectionInterfaceOfGuidProperty(IReadOnlyCollection<Guid> parentReadOnlyCollectionInterfaceOfGuidProperty)
        {
            var result = new ModelAllPublicSetReadOnlyCollectionChild1
                             {
                                 ParentReadOnlyCollectionInterfaceOfBoolProperty                            = this.ParentReadOnlyCollectionInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfIntProperty                             = this.ParentReadOnlyCollectionInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfStringProperty                          = this.ParentReadOnlyCollectionInterfaceOfStringProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfGuidProperty                            = parentReadOnlyCollectionInterfaceOfGuidProperty,
                                 ParentReadOnlyCollectionInterfaceOfDateTimeProperty                        = this.ParentReadOnlyCollectionInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomEnumProperty                      = this.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty                 = this.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomClassProperty                     = this.ParentReadOnlyCollectionInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty                 = this.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty = this.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfBoolProperty                            = this.Child1ReadOnlyCollectionInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfIntProperty                             = this.Child1ReadOnlyCollectionInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfStringProperty                          = this.Child1ReadOnlyCollectionInterfaceOfStringProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfGuidProperty                            = this.Child1ReadOnlyCollectionInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfDateTimeProperty                        = this.Child1ReadOnlyCollectionInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty                      = this.Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty                 = this.Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomClassProperty                     = this.Child1ReadOnlyCollectionInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty                 = this.Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty = this.Child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                             };

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPublicSetReadOnlyCollectionParent DeepCloneWithParentReadOnlyCollectionInterfaceOfDateTimeProperty(IReadOnlyCollection<DateTime> parentReadOnlyCollectionInterfaceOfDateTimeProperty)
        {
            var result = new ModelAllPublicSetReadOnlyCollectionChild1
                             {
                                 ParentReadOnlyCollectionInterfaceOfBoolProperty                            = this.ParentReadOnlyCollectionInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfIntProperty                             = this.ParentReadOnlyCollectionInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfStringProperty                          = this.ParentReadOnlyCollectionInterfaceOfStringProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfGuidProperty                            = this.ParentReadOnlyCollectionInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfDateTimeProperty                        = parentReadOnlyCollectionInterfaceOfDateTimeProperty,
                                 ParentReadOnlyCollectionInterfaceOfCustomEnumProperty                      = this.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty                 = this.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomClassProperty                     = this.ParentReadOnlyCollectionInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty                 = this.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty = this.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfBoolProperty                            = this.Child1ReadOnlyCollectionInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfIntProperty                             = this.Child1ReadOnlyCollectionInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfStringProperty                          = this.Child1ReadOnlyCollectionInterfaceOfStringProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfGuidProperty                            = this.Child1ReadOnlyCollectionInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfDateTimeProperty                        = this.Child1ReadOnlyCollectionInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty                      = this.Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty                 = this.Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomClassProperty                     = this.Child1ReadOnlyCollectionInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty                 = this.Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty = this.Child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                             };

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPublicSetReadOnlyCollectionParent DeepCloneWithParentReadOnlyCollectionInterfaceOfCustomEnumProperty(IReadOnlyCollection<CustomEnum> parentReadOnlyCollectionInterfaceOfCustomEnumProperty)
        {
            var result = new ModelAllPublicSetReadOnlyCollectionChild1
                             {
                                 ParentReadOnlyCollectionInterfaceOfBoolProperty                            = this.ParentReadOnlyCollectionInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfIntProperty                             = this.ParentReadOnlyCollectionInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfStringProperty                          = this.ParentReadOnlyCollectionInterfaceOfStringProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfGuidProperty                            = this.ParentReadOnlyCollectionInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfDateTimeProperty                        = this.ParentReadOnlyCollectionInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomEnumProperty                      = parentReadOnlyCollectionInterfaceOfCustomEnumProperty,
                                 ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty                 = this.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomClassProperty                     = this.ParentReadOnlyCollectionInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty                 = this.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty = this.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfBoolProperty                            = this.Child1ReadOnlyCollectionInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfIntProperty                             = this.Child1ReadOnlyCollectionInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfStringProperty                          = this.Child1ReadOnlyCollectionInterfaceOfStringProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfGuidProperty                            = this.Child1ReadOnlyCollectionInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfDateTimeProperty                        = this.Child1ReadOnlyCollectionInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty                      = this.Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty                 = this.Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomClassProperty                     = this.Child1ReadOnlyCollectionInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty                 = this.Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty = this.Child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                             };

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPublicSetReadOnlyCollectionParent DeepCloneWithParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty(IReadOnlyCollection<CustomFlagsEnum> parentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty)
        {
            var result = new ModelAllPublicSetReadOnlyCollectionChild1
                             {
                                 ParentReadOnlyCollectionInterfaceOfBoolProperty                            = this.ParentReadOnlyCollectionInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfIntProperty                             = this.ParentReadOnlyCollectionInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfStringProperty                          = this.ParentReadOnlyCollectionInterfaceOfStringProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfGuidProperty                            = this.ParentReadOnlyCollectionInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfDateTimeProperty                        = this.ParentReadOnlyCollectionInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomEnumProperty                      = this.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty                 = parentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty,
                                 ParentReadOnlyCollectionInterfaceOfCustomClassProperty                     = this.ParentReadOnlyCollectionInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty                 = this.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty = this.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfBoolProperty                            = this.Child1ReadOnlyCollectionInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfIntProperty                             = this.Child1ReadOnlyCollectionInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfStringProperty                          = this.Child1ReadOnlyCollectionInterfaceOfStringProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfGuidProperty                            = this.Child1ReadOnlyCollectionInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfDateTimeProperty                        = this.Child1ReadOnlyCollectionInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty                      = this.Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty                 = this.Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomClassProperty                     = this.Child1ReadOnlyCollectionInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty                 = this.Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty = this.Child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                             };

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPublicSetReadOnlyCollectionParent DeepCloneWithParentReadOnlyCollectionInterfaceOfCustomClassProperty(IReadOnlyCollection<CustomClass> parentReadOnlyCollectionInterfaceOfCustomClassProperty)
        {
            var result = new ModelAllPublicSetReadOnlyCollectionChild1
                             {
                                 ParentReadOnlyCollectionInterfaceOfBoolProperty                            = this.ParentReadOnlyCollectionInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfIntProperty                             = this.ParentReadOnlyCollectionInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfStringProperty                          = this.ParentReadOnlyCollectionInterfaceOfStringProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfGuidProperty                            = this.ParentReadOnlyCollectionInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfDateTimeProperty                        = this.ParentReadOnlyCollectionInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomEnumProperty                      = this.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty                 = this.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomClassProperty                     = parentReadOnlyCollectionInterfaceOfCustomClassProperty,
                                 ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty                 = this.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty = this.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfBoolProperty                            = this.Child1ReadOnlyCollectionInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfIntProperty                             = this.Child1ReadOnlyCollectionInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfStringProperty                          = this.Child1ReadOnlyCollectionInterfaceOfStringProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfGuidProperty                            = this.Child1ReadOnlyCollectionInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfDateTimeProperty                        = this.Child1ReadOnlyCollectionInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty                      = this.Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty                 = this.Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomClassProperty                     = this.Child1ReadOnlyCollectionInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty                 = this.Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty = this.Child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                             };

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPublicSetReadOnlyCollectionParent DeepCloneWithParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty(IReadOnlyCollection<CustomBaseClass> parentReadOnlyCollectionInterfaceOfCustomBaseClassProperty)
        {
            var result = new ModelAllPublicSetReadOnlyCollectionChild1
                             {
                                 ParentReadOnlyCollectionInterfaceOfBoolProperty                            = this.ParentReadOnlyCollectionInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfIntProperty                             = this.ParentReadOnlyCollectionInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfStringProperty                          = this.ParentReadOnlyCollectionInterfaceOfStringProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfGuidProperty                            = this.ParentReadOnlyCollectionInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfDateTimeProperty                        = this.ParentReadOnlyCollectionInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomEnumProperty                      = this.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty                 = this.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomClassProperty                     = this.ParentReadOnlyCollectionInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty                 = parentReadOnlyCollectionInterfaceOfCustomBaseClassProperty,
                                 ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty = this.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfBoolProperty                            = this.Child1ReadOnlyCollectionInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfIntProperty                             = this.Child1ReadOnlyCollectionInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfStringProperty                          = this.Child1ReadOnlyCollectionInterfaceOfStringProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfGuidProperty                            = this.Child1ReadOnlyCollectionInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfDateTimeProperty                        = this.Child1ReadOnlyCollectionInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty                      = this.Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty                 = this.Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomClassProperty                     = this.Child1ReadOnlyCollectionInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty                 = this.Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty = this.Child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                             };

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPublicSetReadOnlyCollectionParent DeepCloneWithParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty(IReadOnlyCollection<CustomGenericClass<CustomClass>> parentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty)
        {
            var result = new ModelAllPublicSetReadOnlyCollectionChild1
                             {
                                 ParentReadOnlyCollectionInterfaceOfBoolProperty                            = this.ParentReadOnlyCollectionInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfIntProperty                             = this.ParentReadOnlyCollectionInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfStringProperty                          = this.ParentReadOnlyCollectionInterfaceOfStringProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfGuidProperty                            = this.ParentReadOnlyCollectionInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfDateTimeProperty                        = this.ParentReadOnlyCollectionInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomEnumProperty                      = this.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty                 = this.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomClassProperty                     = this.ParentReadOnlyCollectionInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty                 = this.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty = parentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty,
                                 Child1ReadOnlyCollectionInterfaceOfBoolProperty                            = this.Child1ReadOnlyCollectionInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfIntProperty                             = this.Child1ReadOnlyCollectionInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfStringProperty                          = this.Child1ReadOnlyCollectionInterfaceOfStringProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfGuidProperty                            = this.Child1ReadOnlyCollectionInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfDateTimeProperty                        = this.Child1ReadOnlyCollectionInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty                      = this.Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty                 = this.Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomClassProperty                     = this.Child1ReadOnlyCollectionInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty                 = this.Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty = this.Child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ReadOnlyCollectionInterfaceOfBoolProperty" />.
        /// </summary>
        /// <param name="child1ReadOnlyCollectionInterfaceOfBoolProperty">The new <see cref="Child1ReadOnlyCollectionInterfaceOfBoolProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPublicSetReadOnlyCollectionChild1" /> using the specified <paramref name="child1ReadOnlyCollectionInterfaceOfBoolProperty" /> for <see cref="Child1ReadOnlyCollectionInterfaceOfBoolProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPublicSetReadOnlyCollectionChild1 DeepCloneWithChild1ReadOnlyCollectionInterfaceOfBoolProperty(IReadOnlyCollection<bool> child1ReadOnlyCollectionInterfaceOfBoolProperty)
        {
            var result = new ModelAllPublicSetReadOnlyCollectionChild1
                             {
                                 ParentReadOnlyCollectionInterfaceOfBoolProperty                            = this.ParentReadOnlyCollectionInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfIntProperty                             = this.ParentReadOnlyCollectionInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfStringProperty                          = this.ParentReadOnlyCollectionInterfaceOfStringProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfGuidProperty                            = this.ParentReadOnlyCollectionInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfDateTimeProperty                        = this.ParentReadOnlyCollectionInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomEnumProperty                      = this.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty                 = this.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomClassProperty                     = this.ParentReadOnlyCollectionInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty                 = this.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty = this.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfBoolProperty                            = child1ReadOnlyCollectionInterfaceOfBoolProperty,
                                 Child1ReadOnlyCollectionInterfaceOfIntProperty                             = this.Child1ReadOnlyCollectionInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfStringProperty                          = this.Child1ReadOnlyCollectionInterfaceOfStringProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfGuidProperty                            = this.Child1ReadOnlyCollectionInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfDateTimeProperty                        = this.Child1ReadOnlyCollectionInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty                      = this.Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty                 = this.Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomClassProperty                     = this.Child1ReadOnlyCollectionInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty                 = this.Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty = this.Child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ReadOnlyCollectionInterfaceOfIntProperty" />.
        /// </summary>
        /// <param name="child1ReadOnlyCollectionInterfaceOfIntProperty">The new <see cref="Child1ReadOnlyCollectionInterfaceOfIntProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPublicSetReadOnlyCollectionChild1" /> using the specified <paramref name="child1ReadOnlyCollectionInterfaceOfIntProperty" /> for <see cref="Child1ReadOnlyCollectionInterfaceOfIntProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPublicSetReadOnlyCollectionChild1 DeepCloneWithChild1ReadOnlyCollectionInterfaceOfIntProperty(IReadOnlyCollection<int> child1ReadOnlyCollectionInterfaceOfIntProperty)
        {
            var result = new ModelAllPublicSetReadOnlyCollectionChild1
                             {
                                 ParentReadOnlyCollectionInterfaceOfBoolProperty                            = this.ParentReadOnlyCollectionInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfIntProperty                             = this.ParentReadOnlyCollectionInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfStringProperty                          = this.ParentReadOnlyCollectionInterfaceOfStringProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfGuidProperty                            = this.ParentReadOnlyCollectionInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfDateTimeProperty                        = this.ParentReadOnlyCollectionInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomEnumProperty                      = this.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty                 = this.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomClassProperty                     = this.ParentReadOnlyCollectionInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty                 = this.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty = this.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfBoolProperty                            = this.Child1ReadOnlyCollectionInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfIntProperty                             = child1ReadOnlyCollectionInterfaceOfIntProperty,
                                 Child1ReadOnlyCollectionInterfaceOfStringProperty                          = this.Child1ReadOnlyCollectionInterfaceOfStringProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfGuidProperty                            = this.Child1ReadOnlyCollectionInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfDateTimeProperty                        = this.Child1ReadOnlyCollectionInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty                      = this.Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty                 = this.Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomClassProperty                     = this.Child1ReadOnlyCollectionInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty                 = this.Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty = this.Child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ReadOnlyCollectionInterfaceOfStringProperty" />.
        /// </summary>
        /// <param name="child1ReadOnlyCollectionInterfaceOfStringProperty">The new <see cref="Child1ReadOnlyCollectionInterfaceOfStringProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPublicSetReadOnlyCollectionChild1" /> using the specified <paramref name="child1ReadOnlyCollectionInterfaceOfStringProperty" /> for <see cref="Child1ReadOnlyCollectionInterfaceOfStringProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPublicSetReadOnlyCollectionChild1 DeepCloneWithChild1ReadOnlyCollectionInterfaceOfStringProperty(IReadOnlyCollection<string> child1ReadOnlyCollectionInterfaceOfStringProperty)
        {
            var result = new ModelAllPublicSetReadOnlyCollectionChild1
                             {
                                 ParentReadOnlyCollectionInterfaceOfBoolProperty                            = this.ParentReadOnlyCollectionInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfIntProperty                             = this.ParentReadOnlyCollectionInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfStringProperty                          = this.ParentReadOnlyCollectionInterfaceOfStringProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfGuidProperty                            = this.ParentReadOnlyCollectionInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfDateTimeProperty                        = this.ParentReadOnlyCollectionInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomEnumProperty                      = this.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty                 = this.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomClassProperty                     = this.ParentReadOnlyCollectionInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty                 = this.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty = this.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfBoolProperty                            = this.Child1ReadOnlyCollectionInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfIntProperty                             = this.Child1ReadOnlyCollectionInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfStringProperty                          = child1ReadOnlyCollectionInterfaceOfStringProperty,
                                 Child1ReadOnlyCollectionInterfaceOfGuidProperty                            = this.Child1ReadOnlyCollectionInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfDateTimeProperty                        = this.Child1ReadOnlyCollectionInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty                      = this.Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty                 = this.Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomClassProperty                     = this.Child1ReadOnlyCollectionInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty                 = this.Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty = this.Child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ReadOnlyCollectionInterfaceOfGuidProperty" />.
        /// </summary>
        /// <param name="child1ReadOnlyCollectionInterfaceOfGuidProperty">The new <see cref="Child1ReadOnlyCollectionInterfaceOfGuidProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPublicSetReadOnlyCollectionChild1" /> using the specified <paramref name="child1ReadOnlyCollectionInterfaceOfGuidProperty" /> for <see cref="Child1ReadOnlyCollectionInterfaceOfGuidProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPublicSetReadOnlyCollectionChild1 DeepCloneWithChild1ReadOnlyCollectionInterfaceOfGuidProperty(IReadOnlyCollection<Guid> child1ReadOnlyCollectionInterfaceOfGuidProperty)
        {
            var result = new ModelAllPublicSetReadOnlyCollectionChild1
                             {
                                 ParentReadOnlyCollectionInterfaceOfBoolProperty                            = this.ParentReadOnlyCollectionInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfIntProperty                             = this.ParentReadOnlyCollectionInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfStringProperty                          = this.ParentReadOnlyCollectionInterfaceOfStringProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfGuidProperty                            = this.ParentReadOnlyCollectionInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfDateTimeProperty                        = this.ParentReadOnlyCollectionInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomEnumProperty                      = this.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty                 = this.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomClassProperty                     = this.ParentReadOnlyCollectionInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty                 = this.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty = this.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfBoolProperty                            = this.Child1ReadOnlyCollectionInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfIntProperty                             = this.Child1ReadOnlyCollectionInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfStringProperty                          = this.Child1ReadOnlyCollectionInterfaceOfStringProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfGuidProperty                            = child1ReadOnlyCollectionInterfaceOfGuidProperty,
                                 Child1ReadOnlyCollectionInterfaceOfDateTimeProperty                        = this.Child1ReadOnlyCollectionInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty                      = this.Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty                 = this.Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomClassProperty                     = this.Child1ReadOnlyCollectionInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty                 = this.Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty = this.Child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ReadOnlyCollectionInterfaceOfDateTimeProperty" />.
        /// </summary>
        /// <param name="child1ReadOnlyCollectionInterfaceOfDateTimeProperty">The new <see cref="Child1ReadOnlyCollectionInterfaceOfDateTimeProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPublicSetReadOnlyCollectionChild1" /> using the specified <paramref name="child1ReadOnlyCollectionInterfaceOfDateTimeProperty" /> for <see cref="Child1ReadOnlyCollectionInterfaceOfDateTimeProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPublicSetReadOnlyCollectionChild1 DeepCloneWithChild1ReadOnlyCollectionInterfaceOfDateTimeProperty(IReadOnlyCollection<DateTime> child1ReadOnlyCollectionInterfaceOfDateTimeProperty)
        {
            var result = new ModelAllPublicSetReadOnlyCollectionChild1
                             {
                                 ParentReadOnlyCollectionInterfaceOfBoolProperty                            = this.ParentReadOnlyCollectionInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfIntProperty                             = this.ParentReadOnlyCollectionInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfStringProperty                          = this.ParentReadOnlyCollectionInterfaceOfStringProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfGuidProperty                            = this.ParentReadOnlyCollectionInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfDateTimeProperty                        = this.ParentReadOnlyCollectionInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomEnumProperty                      = this.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty                 = this.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomClassProperty                     = this.ParentReadOnlyCollectionInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty                 = this.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty = this.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfBoolProperty                            = this.Child1ReadOnlyCollectionInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfIntProperty                             = this.Child1ReadOnlyCollectionInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfStringProperty                          = this.Child1ReadOnlyCollectionInterfaceOfStringProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfGuidProperty                            = this.Child1ReadOnlyCollectionInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfDateTimeProperty                        = child1ReadOnlyCollectionInterfaceOfDateTimeProperty,
                                 Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty                      = this.Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty                 = this.Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomClassProperty                     = this.Child1ReadOnlyCollectionInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty                 = this.Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty = this.Child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty" />.
        /// </summary>
        /// <param name="child1ReadOnlyCollectionInterfaceOfCustomEnumProperty">The new <see cref="Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPublicSetReadOnlyCollectionChild1" /> using the specified <paramref name="child1ReadOnlyCollectionInterfaceOfCustomEnumProperty" /> for <see cref="Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPublicSetReadOnlyCollectionChild1 DeepCloneWithChild1ReadOnlyCollectionInterfaceOfCustomEnumProperty(IReadOnlyCollection<CustomEnum> child1ReadOnlyCollectionInterfaceOfCustomEnumProperty)
        {
            var result = new ModelAllPublicSetReadOnlyCollectionChild1
                             {
                                 ParentReadOnlyCollectionInterfaceOfBoolProperty                            = this.ParentReadOnlyCollectionInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfIntProperty                             = this.ParentReadOnlyCollectionInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfStringProperty                          = this.ParentReadOnlyCollectionInterfaceOfStringProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfGuidProperty                            = this.ParentReadOnlyCollectionInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfDateTimeProperty                        = this.ParentReadOnlyCollectionInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomEnumProperty                      = this.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty                 = this.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomClassProperty                     = this.ParentReadOnlyCollectionInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty                 = this.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty = this.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfBoolProperty                            = this.Child1ReadOnlyCollectionInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfIntProperty                             = this.Child1ReadOnlyCollectionInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfStringProperty                          = this.Child1ReadOnlyCollectionInterfaceOfStringProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfGuidProperty                            = this.Child1ReadOnlyCollectionInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfDateTimeProperty                        = this.Child1ReadOnlyCollectionInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty                      = child1ReadOnlyCollectionInterfaceOfCustomEnumProperty,
                                 Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty                 = this.Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomClassProperty                     = this.Child1ReadOnlyCollectionInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty                 = this.Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty = this.Child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty" />.
        /// </summary>
        /// <param name="child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty">The new <see cref="Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPublicSetReadOnlyCollectionChild1" /> using the specified <paramref name="child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty" /> for <see cref="Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPublicSetReadOnlyCollectionChild1 DeepCloneWithChild1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty(IReadOnlyCollection<CustomFlagsEnum> child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty)
        {
            var result = new ModelAllPublicSetReadOnlyCollectionChild1
                             {
                                 ParentReadOnlyCollectionInterfaceOfBoolProperty                            = this.ParentReadOnlyCollectionInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfIntProperty                             = this.ParentReadOnlyCollectionInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfStringProperty                          = this.ParentReadOnlyCollectionInterfaceOfStringProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfGuidProperty                            = this.ParentReadOnlyCollectionInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfDateTimeProperty                        = this.ParentReadOnlyCollectionInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomEnumProperty                      = this.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty                 = this.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomClassProperty                     = this.ParentReadOnlyCollectionInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty                 = this.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty = this.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfBoolProperty                            = this.Child1ReadOnlyCollectionInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfIntProperty                             = this.Child1ReadOnlyCollectionInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfStringProperty                          = this.Child1ReadOnlyCollectionInterfaceOfStringProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfGuidProperty                            = this.Child1ReadOnlyCollectionInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfDateTimeProperty                        = this.Child1ReadOnlyCollectionInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty                      = this.Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty                 = child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty,
                                 Child1ReadOnlyCollectionInterfaceOfCustomClassProperty                     = this.Child1ReadOnlyCollectionInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty                 = this.Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty = this.Child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ReadOnlyCollectionInterfaceOfCustomClassProperty" />.
        /// </summary>
        /// <param name="child1ReadOnlyCollectionInterfaceOfCustomClassProperty">The new <see cref="Child1ReadOnlyCollectionInterfaceOfCustomClassProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPublicSetReadOnlyCollectionChild1" /> using the specified <paramref name="child1ReadOnlyCollectionInterfaceOfCustomClassProperty" /> for <see cref="Child1ReadOnlyCollectionInterfaceOfCustomClassProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPublicSetReadOnlyCollectionChild1 DeepCloneWithChild1ReadOnlyCollectionInterfaceOfCustomClassProperty(IReadOnlyCollection<CustomClass> child1ReadOnlyCollectionInterfaceOfCustomClassProperty)
        {
            var result = new ModelAllPublicSetReadOnlyCollectionChild1
                             {
                                 ParentReadOnlyCollectionInterfaceOfBoolProperty                            = this.ParentReadOnlyCollectionInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfIntProperty                             = this.ParentReadOnlyCollectionInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfStringProperty                          = this.ParentReadOnlyCollectionInterfaceOfStringProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfGuidProperty                            = this.ParentReadOnlyCollectionInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfDateTimeProperty                        = this.ParentReadOnlyCollectionInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomEnumProperty                      = this.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty                 = this.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomClassProperty                     = this.ParentReadOnlyCollectionInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty                 = this.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty = this.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfBoolProperty                            = this.Child1ReadOnlyCollectionInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfIntProperty                             = this.Child1ReadOnlyCollectionInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfStringProperty                          = this.Child1ReadOnlyCollectionInterfaceOfStringProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfGuidProperty                            = this.Child1ReadOnlyCollectionInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfDateTimeProperty                        = this.Child1ReadOnlyCollectionInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty                      = this.Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty                 = this.Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomClassProperty                     = child1ReadOnlyCollectionInterfaceOfCustomClassProperty,
                                 Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty                 = this.Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty = this.Child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty" />.
        /// </summary>
        /// <param name="child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty">The new <see cref="Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPublicSetReadOnlyCollectionChild1" /> using the specified <paramref name="child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty" /> for <see cref="Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPublicSetReadOnlyCollectionChild1 DeepCloneWithChild1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty(IReadOnlyCollection<CustomBaseClass> child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty)
        {
            var result = new ModelAllPublicSetReadOnlyCollectionChild1
                             {
                                 ParentReadOnlyCollectionInterfaceOfBoolProperty                            = this.ParentReadOnlyCollectionInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfIntProperty                             = this.ParentReadOnlyCollectionInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfStringProperty                          = this.ParentReadOnlyCollectionInterfaceOfStringProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfGuidProperty                            = this.ParentReadOnlyCollectionInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfDateTimeProperty                        = this.ParentReadOnlyCollectionInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomEnumProperty                      = this.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty                 = this.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomClassProperty                     = this.ParentReadOnlyCollectionInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty                 = this.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty = this.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfBoolProperty                            = this.Child1ReadOnlyCollectionInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfIntProperty                             = this.Child1ReadOnlyCollectionInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfStringProperty                          = this.Child1ReadOnlyCollectionInterfaceOfStringProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfGuidProperty                            = this.Child1ReadOnlyCollectionInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfDateTimeProperty                        = this.Child1ReadOnlyCollectionInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty                      = this.Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty                 = this.Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomClassProperty                     = this.Child1ReadOnlyCollectionInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty                 = child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty,
                                 Child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty = this.Child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty" />.
        /// </summary>
        /// <param name="child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty">The new <see cref="Child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPublicSetReadOnlyCollectionChild1" /> using the specified <paramref name="child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty" /> for <see cref="Child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPublicSetReadOnlyCollectionChild1 DeepCloneWithChild1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty(IReadOnlyCollection<CustomGenericClass<CustomClass>> child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty)
        {
            var result = new ModelAllPublicSetReadOnlyCollectionChild1
                             {
                                 ParentReadOnlyCollectionInterfaceOfBoolProperty                            = this.ParentReadOnlyCollectionInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfIntProperty                             = this.ParentReadOnlyCollectionInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfStringProperty                          = this.ParentReadOnlyCollectionInterfaceOfStringProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfGuidProperty                            = this.ParentReadOnlyCollectionInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfDateTimeProperty                        = this.ParentReadOnlyCollectionInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomEnumProperty                      = this.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty                 = this.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomClassProperty                     = this.ParentReadOnlyCollectionInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty                 = this.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty = this.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfBoolProperty                            = this.Child1ReadOnlyCollectionInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfIntProperty                             = this.Child1ReadOnlyCollectionInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfStringProperty                          = this.Child1ReadOnlyCollectionInterfaceOfStringProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfGuidProperty                            = this.Child1ReadOnlyCollectionInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfDateTimeProperty                        = this.Child1ReadOnlyCollectionInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty                      = this.Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty                 = this.Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomClassProperty                     = this.Child1ReadOnlyCollectionInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty                 = this.Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty = child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty,
                             };

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        protected override ModelAllPublicSetReadOnlyCollectionParent DeepCloneInternal()
        {
            var result = new ModelAllPublicSetReadOnlyCollectionChild1
                             {
                                 ParentReadOnlyCollectionInterfaceOfBoolProperty                            = this.ParentReadOnlyCollectionInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfIntProperty                             = this.ParentReadOnlyCollectionInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfStringProperty                          = this.ParentReadOnlyCollectionInterfaceOfStringProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfGuidProperty                            = this.ParentReadOnlyCollectionInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfDateTimeProperty                        = this.ParentReadOnlyCollectionInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomEnumProperty                      = this.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty                 = this.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomClassProperty                     = this.ParentReadOnlyCollectionInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty                 = this.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty = this.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfBoolProperty                            = this.Child1ReadOnlyCollectionInterfaceOfBoolProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfIntProperty                             = this.Child1ReadOnlyCollectionInterfaceOfIntProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfStringProperty                          = this.Child1ReadOnlyCollectionInterfaceOfStringProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfGuidProperty                            = this.Child1ReadOnlyCollectionInterfaceOfGuidProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfDateTimeProperty                        = this.Child1ReadOnlyCollectionInterfaceOfDateTimeProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty                      = this.Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty                 = this.Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.Select(i => i).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomClassProperty                     = this.Child1ReadOnlyCollectionInterfaceOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty                 = this.Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToList(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty = this.Child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToList(),
                             };

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        public override string ToString()
        {
            var result = Invariant($"OBeautifulCode.CodeGen.ModelObject.Test.ModelAllPublicSetReadOnlyCollectionChild1: ParentReadOnlyCollectionInterfaceOfBoolProperty = {this.ParentReadOnlyCollectionInterfaceOfBoolProperty?.ToString() ?? "<null>"}, ParentReadOnlyCollectionInterfaceOfIntProperty = {this.ParentReadOnlyCollectionInterfaceOfIntProperty?.ToString() ?? "<null>"}, ParentReadOnlyCollectionInterfaceOfStringProperty = {this.ParentReadOnlyCollectionInterfaceOfStringProperty?.ToString() ?? "<null>"}, ParentReadOnlyCollectionInterfaceOfGuidProperty = {this.ParentReadOnlyCollectionInterfaceOfGuidProperty?.ToString() ?? "<null>"}, ParentReadOnlyCollectionInterfaceOfDateTimeProperty = {this.ParentReadOnlyCollectionInterfaceOfDateTimeProperty?.ToString() ?? "<null>"}, ParentReadOnlyCollectionInterfaceOfCustomEnumProperty = {this.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty?.ToString() ?? "<null>"}, ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty = {this.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.ToString() ?? "<null>"}, ParentReadOnlyCollectionInterfaceOfCustomClassProperty = {this.ParentReadOnlyCollectionInterfaceOfCustomClassProperty?.ToString() ?? "<null>"}, ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty = {this.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.ToString() ?? "<null>"}, ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty = {this.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.ToString() ?? "<null>"}, Child1ReadOnlyCollectionInterfaceOfBoolProperty = {this.Child1ReadOnlyCollectionInterfaceOfBoolProperty?.ToString() ?? "<null>"}, Child1ReadOnlyCollectionInterfaceOfIntProperty = {this.Child1ReadOnlyCollectionInterfaceOfIntProperty?.ToString() ?? "<null>"}, Child1ReadOnlyCollectionInterfaceOfStringProperty = {this.Child1ReadOnlyCollectionInterfaceOfStringProperty?.ToString() ?? "<null>"}, Child1ReadOnlyCollectionInterfaceOfGuidProperty = {this.Child1ReadOnlyCollectionInterfaceOfGuidProperty?.ToString() ?? "<null>"}, Child1ReadOnlyCollectionInterfaceOfDateTimeProperty = {this.Child1ReadOnlyCollectionInterfaceOfDateTimeProperty?.ToString() ?? "<null>"}, Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty = {this.Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty?.ToString() ?? "<null>"}, Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty = {this.Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.ToString() ?? "<null>"}, Child1ReadOnlyCollectionInterfaceOfCustomClassProperty = {this.Child1ReadOnlyCollectionInterfaceOfCustomClassProperty?.ToString() ?? "<null>"}, Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty = {this.Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.ToString() ?? "<null>"}, Child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty = {this.Child1ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.ToString() ?? "<null>"}.");

            return result;
        }
    }
}