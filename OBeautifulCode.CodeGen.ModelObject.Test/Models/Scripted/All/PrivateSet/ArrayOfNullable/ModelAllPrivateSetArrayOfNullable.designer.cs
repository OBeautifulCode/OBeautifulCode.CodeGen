// --------------------------------------------------------------------------------------------------------------------
// <auto-generated>
//   Generated using OBeautifulCode.CodeGen.ModelObject (1.0.0.0)
// </auto-generated>
// --------------------------------------------------------------------------------------------------------------------

namespace OBeautifulCode.CodeGen.ModelObject.Test
{
    using global::System;
    using global::System.CodeDom.Compiler;
    using global::System.Collections.Concurrent;
    using global::System.Collections.Generic;
    using global::System.Collections.ObjectModel;
    using global::System.Diagnostics.CodeAnalysis;
    using global::System.Globalization;
    using global::System.Linq;

    using global::OBeautifulCode.Equality.Recipes;
    using global::OBeautifulCode.Type;
    using global::OBeautifulCode.Type.Recipes;

    using static global::System.FormattableString;

    [Serializable]
    public partial class ModelAllPrivateSetArrayOfNullable : IModel<ModelAllPrivateSetArrayOfNullable>
    {
        /// <summary>
        /// Determines whether two objects of type <see cref="ModelAllPrivateSetArrayOfNullable"/> are equal.
        /// </summary>
        /// <param name="left">The object to the left of the equality operator.</param>
        /// <param name="right">The object to the right of the equality operator.</param>
        /// <returns>true if the two items are equal; otherwise false.</returns>
        public static bool operator ==(ModelAllPrivateSetArrayOfNullable left, ModelAllPrivateSetArrayOfNullable right)
        {
            if (ReferenceEquals(left, right))
            {
                return true;
            }

            if (ReferenceEquals(left, null) || ReferenceEquals(right, null))
            {
                return false;
            }

            var result = left.Equals(right);

            return result;
        }

        /// <summary>
        /// Determines whether two objects of type <see cref="ModelAllPrivateSetArrayOfNullable"/> are not equal.
        /// </summary>
        /// <param name="left">The object to the left of the equality operator.</param>
        /// <param name="right">The object to the right of the equality operator.</param>
        /// <returns>true if the two items are not equal; otherwise false.</returns>
        public static bool operator !=(ModelAllPrivateSetArrayOfNullable left, ModelAllPrivateSetArrayOfNullable right) => !(left == right);

        /// <inheritdoc />
        public bool Equals(ModelAllPrivateSetArrayOfNullable other)
        {
            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (ReferenceEquals(other, null))
            {
                return false;
            }

            var result = this.ArrayOfNullableBoolProperty.IsEqualTo(other.ArrayOfNullableBoolProperty)
                      && this.ArrayOfNullableIntProperty.IsEqualTo(other.ArrayOfNullableIntProperty)
                      && this.ArrayOfNullableGuidProperty.IsEqualTo(other.ArrayOfNullableGuidProperty)
                      && this.ArrayOfNullableDateTimeProperty.IsEqualTo(other.ArrayOfNullableDateTimeProperty)
                      && this.ArrayOfNullableCustomEnumProperty.IsEqualTo(other.ArrayOfNullableCustomEnumProperty)
                      && this.ArrayOfNullableCustomFlagsEnumProperty.IsEqualTo(other.ArrayOfNullableCustomFlagsEnumProperty);

            return result;
        }

        /// <inheritdoc />
        public override bool Equals(object obj) => this == (obj as ModelAllPrivateSetArrayOfNullable);

        /// <inheritdoc />
        public override int GetHashCode() => HashCodeHelper.Initialize()
            .Hash(this.ArrayOfNullableBoolProperty)
            .Hash(this.ArrayOfNullableIntProperty)
            .Hash(this.ArrayOfNullableGuidProperty)
            .Hash(this.ArrayOfNullableDateTimeProperty)
            .Hash(this.ArrayOfNullableCustomEnumProperty)
            .Hash(this.ArrayOfNullableCustomFlagsEnumProperty)
            .Value;

        /// <inheritdoc />
        public object Clone() => this.DeepClone();

        /// <inheritdoc />
        public ModelAllPrivateSetArrayOfNullable DeepClone()
        {
            var result = new ModelAllPrivateSetArrayOfNullable(
                                 this.ArrayOfNullableBoolProperty?.Select(i => i).ToArray(),
                                 this.ArrayOfNullableIntProperty?.Select(i => i).ToArray(),
                                 this.ArrayOfNullableGuidProperty?.Select(i => i).ToArray(),
                                 this.ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ArrayOfNullableCustomEnumProperty?.Select(i => i).ToArray(),
                                 this.ArrayOfNullableCustomFlagsEnumProperty?.Select(i => i).ToArray());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="ArrayOfNullableBoolProperty" />.
        /// </summary>
        /// <param name="arrayOfNullableBoolProperty">The new <see cref="ArrayOfNullableBoolProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPrivateSetArrayOfNullable" /> using the specified <paramref name="arrayOfNullableBoolProperty" /> for <see cref="ArrayOfNullableBoolProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002: DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        public ModelAllPrivateSetArrayOfNullable DeepCloneWithArrayOfNullableBoolProperty(bool?[] arrayOfNullableBoolProperty)
        {
            var result = new ModelAllPrivateSetArrayOfNullable(
                                 arrayOfNullableBoolProperty,
                                 this.ArrayOfNullableIntProperty?.Select(i => i).ToArray(),
                                 this.ArrayOfNullableGuidProperty?.Select(i => i).ToArray(),
                                 this.ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ArrayOfNullableCustomEnumProperty?.Select(i => i).ToArray(),
                                 this.ArrayOfNullableCustomFlagsEnumProperty?.Select(i => i).ToArray());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="ArrayOfNullableIntProperty" />.
        /// </summary>
        /// <param name="arrayOfNullableIntProperty">The new <see cref="ArrayOfNullableIntProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPrivateSetArrayOfNullable" /> using the specified <paramref name="arrayOfNullableIntProperty" /> for <see cref="ArrayOfNullableIntProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002: DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        public ModelAllPrivateSetArrayOfNullable DeepCloneWithArrayOfNullableIntProperty(int?[] arrayOfNullableIntProperty)
        {
            var result = new ModelAllPrivateSetArrayOfNullable(
                                 this.ArrayOfNullableBoolProperty?.Select(i => i).ToArray(),
                                 arrayOfNullableIntProperty,
                                 this.ArrayOfNullableGuidProperty?.Select(i => i).ToArray(),
                                 this.ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ArrayOfNullableCustomEnumProperty?.Select(i => i).ToArray(),
                                 this.ArrayOfNullableCustomFlagsEnumProperty?.Select(i => i).ToArray());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="ArrayOfNullableGuidProperty" />.
        /// </summary>
        /// <param name="arrayOfNullableGuidProperty">The new <see cref="ArrayOfNullableGuidProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPrivateSetArrayOfNullable" /> using the specified <paramref name="arrayOfNullableGuidProperty" /> for <see cref="ArrayOfNullableGuidProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002: DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        public ModelAllPrivateSetArrayOfNullable DeepCloneWithArrayOfNullableGuidProperty(Guid?[] arrayOfNullableGuidProperty)
        {
            var result = new ModelAllPrivateSetArrayOfNullable(
                                 this.ArrayOfNullableBoolProperty?.Select(i => i).ToArray(),
                                 this.ArrayOfNullableIntProperty?.Select(i => i).ToArray(),
                                 arrayOfNullableGuidProperty,
                                 this.ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ArrayOfNullableCustomEnumProperty?.Select(i => i).ToArray(),
                                 this.ArrayOfNullableCustomFlagsEnumProperty?.Select(i => i).ToArray());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="ArrayOfNullableDateTimeProperty" />.
        /// </summary>
        /// <param name="arrayOfNullableDateTimeProperty">The new <see cref="ArrayOfNullableDateTimeProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPrivateSetArrayOfNullable" /> using the specified <paramref name="arrayOfNullableDateTimeProperty" /> for <see cref="ArrayOfNullableDateTimeProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002: DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        public ModelAllPrivateSetArrayOfNullable DeepCloneWithArrayOfNullableDateTimeProperty(DateTime?[] arrayOfNullableDateTimeProperty)
        {
            var result = new ModelAllPrivateSetArrayOfNullable(
                                 this.ArrayOfNullableBoolProperty?.Select(i => i).ToArray(),
                                 this.ArrayOfNullableIntProperty?.Select(i => i).ToArray(),
                                 this.ArrayOfNullableGuidProperty?.Select(i => i).ToArray(),
                                 arrayOfNullableDateTimeProperty,
                                 this.ArrayOfNullableCustomEnumProperty?.Select(i => i).ToArray(),
                                 this.ArrayOfNullableCustomFlagsEnumProperty?.Select(i => i).ToArray());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="ArrayOfNullableCustomEnumProperty" />.
        /// </summary>
        /// <param name="arrayOfNullableCustomEnumProperty">The new <see cref="ArrayOfNullableCustomEnumProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPrivateSetArrayOfNullable" /> using the specified <paramref name="arrayOfNullableCustomEnumProperty" /> for <see cref="ArrayOfNullableCustomEnumProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002: DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        public ModelAllPrivateSetArrayOfNullable DeepCloneWithArrayOfNullableCustomEnumProperty(CustomEnum?[] arrayOfNullableCustomEnumProperty)
        {
            var result = new ModelAllPrivateSetArrayOfNullable(
                                 this.ArrayOfNullableBoolProperty?.Select(i => i).ToArray(),
                                 this.ArrayOfNullableIntProperty?.Select(i => i).ToArray(),
                                 this.ArrayOfNullableGuidProperty?.Select(i => i).ToArray(),
                                 this.ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 arrayOfNullableCustomEnumProperty,
                                 this.ArrayOfNullableCustomFlagsEnumProperty?.Select(i => i).ToArray());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="ArrayOfNullableCustomFlagsEnumProperty" />.
        /// </summary>
        /// <param name="arrayOfNullableCustomFlagsEnumProperty">The new <see cref="ArrayOfNullableCustomFlagsEnumProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPrivateSetArrayOfNullable" /> using the specified <paramref name="arrayOfNullableCustomFlagsEnumProperty" /> for <see cref="ArrayOfNullableCustomFlagsEnumProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002: DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        public ModelAllPrivateSetArrayOfNullable DeepCloneWithArrayOfNullableCustomFlagsEnumProperty(CustomFlagsEnum?[] arrayOfNullableCustomFlagsEnumProperty)
        {
            var result = new ModelAllPrivateSetArrayOfNullable(
                                 this.ArrayOfNullableBoolProperty?.Select(i => i).ToArray(),
                                 this.ArrayOfNullableIntProperty?.Select(i => i).ToArray(),
                                 this.ArrayOfNullableGuidProperty?.Select(i => i).ToArray(),
                                 this.ArrayOfNullableDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ArrayOfNullableCustomEnumProperty?.Select(i => i).ToArray(),
                                 arrayOfNullableCustomFlagsEnumProperty);

            return result;
        }

        /// <inheritdoc />
        public override string ToString()
        {
            var result = Invariant($"OBeautifulCode.CodeGen.ModelObject.Test.ModelAllPrivateSetArrayOfNullable: ArrayOfNullableBoolProperty = {this.ArrayOfNullableBoolProperty?.ToString() ?? "<null>"}, ArrayOfNullableIntProperty = {this.ArrayOfNullableIntProperty?.ToString() ?? "<null>"}, ArrayOfNullableGuidProperty = {this.ArrayOfNullableGuidProperty?.ToString() ?? "<null>"}, ArrayOfNullableDateTimeProperty = {this.ArrayOfNullableDateTimeProperty?.ToString() ?? "<null>"}, ArrayOfNullableCustomEnumProperty = {this.ArrayOfNullableCustomEnumProperty?.ToString() ?? "<null>"}, ArrayOfNullableCustomFlagsEnumProperty = {this.ArrayOfNullableCustomFlagsEnumProperty?.ToString() ?? "<null>"}.");

            return result;
        }
    }
}