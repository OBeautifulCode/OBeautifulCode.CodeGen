// --------------------------------------------------------------------------------------------------------------------
// <auto-generated>
//   Generated using OBeautifulCode.CodeGen.ModelObject (1.0.0.0)
// </auto-generated>
// --------------------------------------------------------------------------------------------------------------------

namespace OBeautifulCode.CodeGen.ModelObject.Test
{
    using global::System;
    using global::System.CodeDom.Compiler;
    using global::System.Collections.Concurrent;
    using global::System.Collections.Generic;
    using global::System.Collections.ObjectModel;
    using global::System.Diagnostics.CodeAnalysis;
    using global::System.Globalization;
    using global::System.Linq;

    using global::OBeautifulCode.Equality.Recipes;
    using global::OBeautifulCode.Type;
    using global::OBeautifulCode.Type.Recipes;

    using static global::System.FormattableString;

    [Serializable]
    public partial class ModelAllPrivateSetArrayChild1 : IModel<ModelAllPrivateSetArrayChild1>
    {
        /// <summary>
        /// Determines whether two objects of type <see cref="ModelAllPrivateSetArrayChild1"/> are equal.
        /// </summary>
        /// <param name="left">The object to the left of the equality operator.</param>
        /// <param name="right">The object to the right of the equality operator.</param>
        /// <returns>true if the two items are equal; otherwise false.</returns>
        public static bool operator ==(ModelAllPrivateSetArrayChild1 left, ModelAllPrivateSetArrayChild1 right)
        {
            if (ReferenceEquals(left, right))
            {
                return true;
            }

            if (ReferenceEquals(left, null) || ReferenceEquals(right, null))
            {
                return false;
            }

            var result = left.Equals(right);

            return result;
        }

        /// <summary>
        /// Determines whether two objects of type <see cref="ModelAllPrivateSetArrayChild1"/> are not equal.
        /// </summary>
        /// <param name="left">The object to the left of the equality operator.</param>
        /// <param name="right">The object to the right of the equality operator.</param>
        /// <returns>true if the two items are not equal; otherwise false.</returns>
        public static bool operator !=(ModelAllPrivateSetArrayChild1 left, ModelAllPrivateSetArrayChild1 right) => !(left == right);

        /// <inheritdoc />
        public bool Equals(ModelAllPrivateSetArrayChild1 other)
        {
            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (ReferenceEquals(other, null))
            {
                return false;
            }

            var result = this.ParentArrayOfBoolProperty.IsEqualTo(other.ParentArrayOfBoolProperty)
                      && this.ParentArrayOfIntProperty.IsEqualTo(other.ParentArrayOfIntProperty)
                      && this.ParentArrayOfStringProperty.IsEqualTo(other.ParentArrayOfStringProperty)
                      && this.ParentArrayOfGuidProperty.IsEqualTo(other.ParentArrayOfGuidProperty)
                      && this.ParentArrayOfDateTimeProperty.IsEqualTo(other.ParentArrayOfDateTimeProperty)
                      && this.ParentArrayOfCustomEnumProperty.IsEqualTo(other.ParentArrayOfCustomEnumProperty)
                      && this.ParentArrayOfCustomFlagsEnumProperty.IsEqualTo(other.ParentArrayOfCustomFlagsEnumProperty)
                      && this.ParentArrayOfCustomClassProperty.IsEqualTo(other.ParentArrayOfCustomClassProperty)
                      && this.ParentArrayOfCustomBaseClassProperty.IsEqualTo(other.ParentArrayOfCustomBaseClassProperty)
                      && this.ParentArrayOfCustomGenericClassOfCustomClassProperty.IsEqualTo(other.ParentArrayOfCustomGenericClassOfCustomClassProperty)
                      && this.Child1ArrayOfBoolProperty.IsEqualTo(other.Child1ArrayOfBoolProperty)
                      && this.Child1ArrayOfIntProperty.IsEqualTo(other.Child1ArrayOfIntProperty)
                      && this.Child1ArrayOfStringProperty.IsEqualTo(other.Child1ArrayOfStringProperty)
                      && this.Child1ArrayOfGuidProperty.IsEqualTo(other.Child1ArrayOfGuidProperty)
                      && this.Child1ArrayOfDateTimeProperty.IsEqualTo(other.Child1ArrayOfDateTimeProperty)
                      && this.Child1ArrayOfCustomEnumProperty.IsEqualTo(other.Child1ArrayOfCustomEnumProperty)
                      && this.Child1ArrayOfCustomFlagsEnumProperty.IsEqualTo(other.Child1ArrayOfCustomFlagsEnumProperty)
                      && this.Child1ArrayOfCustomClassProperty.IsEqualTo(other.Child1ArrayOfCustomClassProperty)
                      && this.Child1ArrayOfCustomBaseClassProperty.IsEqualTo(other.Child1ArrayOfCustomBaseClassProperty)
                      && this.Child1ArrayOfCustomGenericClassOfCustomClassProperty.IsEqualTo(other.Child1ArrayOfCustomGenericClassOfCustomClassProperty);

            return result;
        }

        /// <inheritdoc />
        public override bool Equals(object obj) => this == (obj as ModelAllPrivateSetArrayChild1);

        /// <inheritdoc />
        public override int GetHashCode() => HashCodeHelper.Initialize()
            .Hash(this.ParentArrayOfBoolProperty)
            .Hash(this.ParentArrayOfIntProperty)
            .Hash(this.ParentArrayOfStringProperty)
            .Hash(this.ParentArrayOfGuidProperty)
            .Hash(this.ParentArrayOfDateTimeProperty)
            .Hash(this.ParentArrayOfCustomEnumProperty)
            .Hash(this.ParentArrayOfCustomFlagsEnumProperty)
            .Hash(this.ParentArrayOfCustomClassProperty)
            .Hash(this.ParentArrayOfCustomBaseClassProperty)
            .Hash(this.ParentArrayOfCustomGenericClassOfCustomClassProperty)
            .Hash(this.Child1ArrayOfBoolProperty)
            .Hash(this.Child1ArrayOfIntProperty)
            .Hash(this.Child1ArrayOfStringProperty)
            .Hash(this.Child1ArrayOfGuidProperty)
            .Hash(this.Child1ArrayOfDateTimeProperty)
            .Hash(this.Child1ArrayOfCustomEnumProperty)
            .Hash(this.Child1ArrayOfCustomFlagsEnumProperty)
            .Hash(this.Child1ArrayOfCustomClassProperty)
            .Hash(this.Child1ArrayOfCustomBaseClassProperty)
            .Hash(this.Child1ArrayOfCustomGenericClassOfCustomClassProperty)
            .Value;

        /// <inheritdoc />
        public new ModelAllPrivateSetArrayChild1 DeepClone() => (ModelAllPrivateSetArrayChild1)this.DeepCloneInternal();

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPrivateSetArrayParent DeepCloneWithParentArrayOfBoolProperty(bool[] parentArrayOfBoolProperty)
        {
            var result = new ModelAllPrivateSetArrayChild1(
                                 parentArrayOfBoolProperty,
                                 this.ParentArrayOfIntProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfStringProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfIntProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfStringProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray());

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPrivateSetArrayParent DeepCloneWithParentArrayOfIntProperty(int[] parentArrayOfIntProperty)
        {
            var result = new ModelAllPrivateSetArrayChild1(
                                 this.ParentArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 parentArrayOfIntProperty,
                                 this.ParentArrayOfStringProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfIntProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfStringProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray());

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPrivateSetArrayParent DeepCloneWithParentArrayOfStringProperty(string[] parentArrayOfStringProperty)
        {
            var result = new ModelAllPrivateSetArrayChild1(
                                 this.ParentArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfIntProperty?.Select(i => i).ToArray(),
                                 parentArrayOfStringProperty,
                                 this.ParentArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfIntProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfStringProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray());

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPrivateSetArrayParent DeepCloneWithParentArrayOfGuidProperty(Guid[] parentArrayOfGuidProperty)
        {
            var result = new ModelAllPrivateSetArrayChild1(
                                 this.ParentArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfIntProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfStringProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 parentArrayOfGuidProperty,
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfIntProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfStringProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray());

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPrivateSetArrayParent DeepCloneWithParentArrayOfDateTimeProperty(DateTime[] parentArrayOfDateTimeProperty)
        {
            var result = new ModelAllPrivateSetArrayChild1(
                                 this.ParentArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfIntProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfStringProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 parentArrayOfDateTimeProperty,
                                 this.ParentArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfIntProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfStringProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray());

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPrivateSetArrayParent DeepCloneWithParentArrayOfCustomEnumProperty(CustomEnum[] parentArrayOfCustomEnumProperty)
        {
            var result = new ModelAllPrivateSetArrayChild1(
                                 this.ParentArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfIntProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfStringProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 parentArrayOfCustomEnumProperty,
                                 this.ParentArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfIntProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfStringProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray());

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPrivateSetArrayParent DeepCloneWithParentArrayOfCustomFlagsEnumProperty(CustomFlagsEnum[] parentArrayOfCustomFlagsEnumProperty)
        {
            var result = new ModelAllPrivateSetArrayChild1(
                                 this.ParentArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfIntProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfStringProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 parentArrayOfCustomFlagsEnumProperty,
                                 this.ParentArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfIntProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfStringProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray());

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPrivateSetArrayParent DeepCloneWithParentArrayOfCustomClassProperty(CustomClass[] parentArrayOfCustomClassProperty)
        {
            var result = new ModelAllPrivateSetArrayChild1(
                                 this.ParentArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfIntProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfStringProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 parentArrayOfCustomClassProperty,
                                 this.ParentArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfIntProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfStringProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray());

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPrivateSetArrayParent DeepCloneWithParentArrayOfCustomBaseClassProperty(CustomBaseClass[] parentArrayOfCustomBaseClassProperty)
        {
            var result = new ModelAllPrivateSetArrayChild1(
                                 this.ParentArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfIntProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfStringProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 parentArrayOfCustomBaseClassProperty,
                                 this.ParentArrayOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfIntProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfStringProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray());

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPrivateSetArrayParent DeepCloneWithParentArrayOfCustomGenericClassOfCustomClassProperty(CustomGenericClass<CustomClass>[] parentArrayOfCustomGenericClassOfCustomClassProperty)
        {
            var result = new ModelAllPrivateSetArrayChild1(
                                 this.ParentArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfIntProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfStringProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 parentArrayOfCustomGenericClassOfCustomClassProperty,
                                 this.Child1ArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfIntProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfStringProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ArrayOfBoolProperty" />.
        /// </summary>
        /// <param name="child1ArrayOfBoolProperty">The new <see cref="Child1ArrayOfBoolProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPrivateSetArrayChild1" /> using the specified <paramref name="child1ArrayOfBoolProperty" /> for <see cref="Child1ArrayOfBoolProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPrivateSetArrayChild1 DeepCloneWithChild1ArrayOfBoolProperty(bool[] child1ArrayOfBoolProperty)
        {
            var result = new ModelAllPrivateSetArrayChild1(
                                 this.ParentArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfIntProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfStringProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 child1ArrayOfBoolProperty,
                                 this.Child1ArrayOfIntProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfStringProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ArrayOfIntProperty" />.
        /// </summary>
        /// <param name="child1ArrayOfIntProperty">The new <see cref="Child1ArrayOfIntProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPrivateSetArrayChild1" /> using the specified <paramref name="child1ArrayOfIntProperty" /> for <see cref="Child1ArrayOfIntProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPrivateSetArrayChild1 DeepCloneWithChild1ArrayOfIntProperty(int[] child1ArrayOfIntProperty)
        {
            var result = new ModelAllPrivateSetArrayChild1(
                                 this.ParentArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfIntProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfStringProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 child1ArrayOfIntProperty,
                                 this.Child1ArrayOfStringProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ArrayOfStringProperty" />.
        /// </summary>
        /// <param name="child1ArrayOfStringProperty">The new <see cref="Child1ArrayOfStringProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPrivateSetArrayChild1" /> using the specified <paramref name="child1ArrayOfStringProperty" /> for <see cref="Child1ArrayOfStringProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPrivateSetArrayChild1 DeepCloneWithChild1ArrayOfStringProperty(string[] child1ArrayOfStringProperty)
        {
            var result = new ModelAllPrivateSetArrayChild1(
                                 this.ParentArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfIntProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfStringProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfIntProperty?.Select(i => i).ToArray(),
                                 child1ArrayOfStringProperty,
                                 this.Child1ArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ArrayOfGuidProperty" />.
        /// </summary>
        /// <param name="child1ArrayOfGuidProperty">The new <see cref="Child1ArrayOfGuidProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPrivateSetArrayChild1" /> using the specified <paramref name="child1ArrayOfGuidProperty" /> for <see cref="Child1ArrayOfGuidProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPrivateSetArrayChild1 DeepCloneWithChild1ArrayOfGuidProperty(Guid[] child1ArrayOfGuidProperty)
        {
            var result = new ModelAllPrivateSetArrayChild1(
                                 this.ParentArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfIntProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfStringProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfIntProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfStringProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 child1ArrayOfGuidProperty,
                                 this.Child1ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ArrayOfDateTimeProperty" />.
        /// </summary>
        /// <param name="child1ArrayOfDateTimeProperty">The new <see cref="Child1ArrayOfDateTimeProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPrivateSetArrayChild1" /> using the specified <paramref name="child1ArrayOfDateTimeProperty" /> for <see cref="Child1ArrayOfDateTimeProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPrivateSetArrayChild1 DeepCloneWithChild1ArrayOfDateTimeProperty(DateTime[] child1ArrayOfDateTimeProperty)
        {
            var result = new ModelAllPrivateSetArrayChild1(
                                 this.ParentArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfIntProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfStringProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfIntProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfStringProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 child1ArrayOfDateTimeProperty,
                                 this.Child1ArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ArrayOfCustomEnumProperty" />.
        /// </summary>
        /// <param name="child1ArrayOfCustomEnumProperty">The new <see cref="Child1ArrayOfCustomEnumProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPrivateSetArrayChild1" /> using the specified <paramref name="child1ArrayOfCustomEnumProperty" /> for <see cref="Child1ArrayOfCustomEnumProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPrivateSetArrayChild1 DeepCloneWithChild1ArrayOfCustomEnumProperty(CustomEnum[] child1ArrayOfCustomEnumProperty)
        {
            var result = new ModelAllPrivateSetArrayChild1(
                                 this.ParentArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfIntProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfStringProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfIntProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfStringProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 child1ArrayOfCustomEnumProperty,
                                 this.Child1ArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ArrayOfCustomFlagsEnumProperty" />.
        /// </summary>
        /// <param name="child1ArrayOfCustomFlagsEnumProperty">The new <see cref="Child1ArrayOfCustomFlagsEnumProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPrivateSetArrayChild1" /> using the specified <paramref name="child1ArrayOfCustomFlagsEnumProperty" /> for <see cref="Child1ArrayOfCustomFlagsEnumProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPrivateSetArrayChild1 DeepCloneWithChild1ArrayOfCustomFlagsEnumProperty(CustomFlagsEnum[] child1ArrayOfCustomFlagsEnumProperty)
        {
            var result = new ModelAllPrivateSetArrayChild1(
                                 this.ParentArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfIntProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfStringProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfIntProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfStringProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 child1ArrayOfCustomFlagsEnumProperty,
                                 this.Child1ArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ArrayOfCustomClassProperty" />.
        /// </summary>
        /// <param name="child1ArrayOfCustomClassProperty">The new <see cref="Child1ArrayOfCustomClassProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPrivateSetArrayChild1" /> using the specified <paramref name="child1ArrayOfCustomClassProperty" /> for <see cref="Child1ArrayOfCustomClassProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPrivateSetArrayChild1 DeepCloneWithChild1ArrayOfCustomClassProperty(CustomClass[] child1ArrayOfCustomClassProperty)
        {
            var result = new ModelAllPrivateSetArrayChild1(
                                 this.ParentArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfIntProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfStringProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfIntProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfStringProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 child1ArrayOfCustomClassProperty,
                                 this.Child1ArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ArrayOfCustomBaseClassProperty" />.
        /// </summary>
        /// <param name="child1ArrayOfCustomBaseClassProperty">The new <see cref="Child1ArrayOfCustomBaseClassProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPrivateSetArrayChild1" /> using the specified <paramref name="child1ArrayOfCustomBaseClassProperty" /> for <see cref="Child1ArrayOfCustomBaseClassProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPrivateSetArrayChild1 DeepCloneWithChild1ArrayOfCustomBaseClassProperty(CustomBaseClass[] child1ArrayOfCustomBaseClassProperty)
        {
            var result = new ModelAllPrivateSetArrayChild1(
                                 this.ParentArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfIntProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfStringProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfIntProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfStringProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 child1ArrayOfCustomBaseClassProperty,
                                 this.Child1ArrayOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ArrayOfCustomGenericClassOfCustomClassProperty" />.
        /// </summary>
        /// <param name="child1ArrayOfCustomGenericClassOfCustomClassProperty">The new <see cref="Child1ArrayOfCustomGenericClassOfCustomClassProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPrivateSetArrayChild1" /> using the specified <paramref name="child1ArrayOfCustomGenericClassOfCustomClassProperty" /> for <see cref="Child1ArrayOfCustomGenericClassOfCustomClassProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPrivateSetArrayChild1 DeepCloneWithChild1ArrayOfCustomGenericClassOfCustomClassProperty(CustomGenericClass<CustomClass>[] child1ArrayOfCustomGenericClassOfCustomClassProperty)
        {
            var result = new ModelAllPrivateSetArrayChild1(
                                 this.ParentArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfIntProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfStringProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfIntProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfStringProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 child1ArrayOfCustomGenericClassOfCustomClassProperty);

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        protected override ModelAllPrivateSetArrayParent DeepCloneInternal()
        {
            var result = new ModelAllPrivateSetArrayChild1(
                                 this.ParentArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfIntProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfStringProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 this.ParentArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.ParentArrayOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfBoolProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfIntProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfStringProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfGuidProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfDateTimeProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomEnumProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomFlagsEnumProperty?.Select(i => i).ToArray(),
                                 this.Child1ArrayOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfCustomBaseClassProperty?.Select(i => i?.DeepClone()).ToArray(),
                                 this.Child1ArrayOfCustomGenericClassOfCustomClassProperty?.Select(i => i?.DeepClone()).ToArray());

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        public override string ToString()
        {
            var result = Invariant($"OBeautifulCode.CodeGen.ModelObject.Test.ModelAllPrivateSetArrayChild1: ParentArrayOfBoolProperty = {this.ParentArrayOfBoolProperty?.ToString() ?? "<null>"}, ParentArrayOfIntProperty = {this.ParentArrayOfIntProperty?.ToString() ?? "<null>"}, ParentArrayOfStringProperty = {this.ParentArrayOfStringProperty?.ToString() ?? "<null>"}, ParentArrayOfGuidProperty = {this.ParentArrayOfGuidProperty?.ToString() ?? "<null>"}, ParentArrayOfDateTimeProperty = {this.ParentArrayOfDateTimeProperty?.ToString() ?? "<null>"}, ParentArrayOfCustomEnumProperty = {this.ParentArrayOfCustomEnumProperty?.ToString() ?? "<null>"}, ParentArrayOfCustomFlagsEnumProperty = {this.ParentArrayOfCustomFlagsEnumProperty?.ToString() ?? "<null>"}, ParentArrayOfCustomClassProperty = {this.ParentArrayOfCustomClassProperty?.ToString() ?? "<null>"}, ParentArrayOfCustomBaseClassProperty = {this.ParentArrayOfCustomBaseClassProperty?.ToString() ?? "<null>"}, ParentArrayOfCustomGenericClassOfCustomClassProperty = {this.ParentArrayOfCustomGenericClassOfCustomClassProperty?.ToString() ?? "<null>"}, Child1ArrayOfBoolProperty = {this.Child1ArrayOfBoolProperty?.ToString() ?? "<null>"}, Child1ArrayOfIntProperty = {this.Child1ArrayOfIntProperty?.ToString() ?? "<null>"}, Child1ArrayOfStringProperty = {this.Child1ArrayOfStringProperty?.ToString() ?? "<null>"}, Child1ArrayOfGuidProperty = {this.Child1ArrayOfGuidProperty?.ToString() ?? "<null>"}, Child1ArrayOfDateTimeProperty = {this.Child1ArrayOfDateTimeProperty?.ToString() ?? "<null>"}, Child1ArrayOfCustomEnumProperty = {this.Child1ArrayOfCustomEnumProperty?.ToString() ?? "<null>"}, Child1ArrayOfCustomFlagsEnumProperty = {this.Child1ArrayOfCustomFlagsEnumProperty?.ToString() ?? "<null>"}, Child1ArrayOfCustomClassProperty = {this.Child1ArrayOfCustomClassProperty?.ToString() ?? "<null>"}, Child1ArrayOfCustomBaseClassProperty = {this.Child1ArrayOfCustomBaseClassProperty?.ToString() ?? "<null>"}, Child1ArrayOfCustomGenericClassOfCustomClassProperty = {this.Child1ArrayOfCustomGenericClassOfCustomClassProperty?.ToString() ?? "<null>"}.");

            return result;
        }
    }
}