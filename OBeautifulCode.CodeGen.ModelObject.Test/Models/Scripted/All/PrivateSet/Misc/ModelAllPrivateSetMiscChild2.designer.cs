// --------------------------------------------------------------------------------------------------------------------
// <auto-generated>
//   Generated using OBeautifulCode.CodeGen.ModelObject (1.0.0.0)
// </auto-generated>
// --------------------------------------------------------------------------------------------------------------------

namespace OBeautifulCode.CodeGen.ModelObject.Test
{
    using global::System;
    using global::System.CodeDom.Compiler;
    using global::System.Collections.Concurrent;
    using global::System.Collections.Generic;
    using global::System.Collections.ObjectModel;
    using global::System.Diagnostics.CodeAnalysis;
    using global::System.Globalization;
    using global::System.Linq;

    using global::OBeautifulCode.Cloning.Recipes;
    using global::OBeautifulCode.Equality.Recipes;
    using global::OBeautifulCode.Type;
    using global::OBeautifulCode.Type.Recipes;

    using static global::System.FormattableString;

    [Serializable]
    public partial class ModelAllPrivateSetMiscChild2 : IModel<ModelAllPrivateSetMiscChild2>
    {
        /// <summary>
        /// Determines whether two objects of type <see cref="ModelAllPrivateSetMiscChild2"/> are equal.
        /// </summary>
        /// <param name="left">The object to the left of the equality operator.</param>
        /// <param name="right">The object to the right of the equality operator.</param>
        /// <returns>true if the two items are equal; otherwise false.</returns>
        public static bool operator ==(ModelAllPrivateSetMiscChild2 left, ModelAllPrivateSetMiscChild2 right)
        {
            if (ReferenceEquals(left, right))
            {
                return true;
            }

            if (ReferenceEquals(left, null) || ReferenceEquals(right, null))
            {
                return false;
            }

            var result = left.Equals(right);

            return result;
        }

        /// <summary>
        /// Determines whether two objects of type <see cref="ModelAllPrivateSetMiscChild2"/> are not equal.
        /// </summary>
        /// <param name="left">The object to the left of the equality operator.</param>
        /// <param name="right">The object to the right of the equality operator.</param>
        /// <returns>true if the two items are not equal; otherwise false.</returns>
        public static bool operator !=(ModelAllPrivateSetMiscChild2 left, ModelAllPrivateSetMiscChild2 right) => !(left == right);

        /// <inheritdoc />
        public bool Equals(ModelAllPrivateSetMiscChild2 other)
        {
            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (ReferenceEquals(other, null))
            {
                return false;
            }

            var result = this.ParentCollectionInterfaceOfStringProperty.IsEqualTo(other.ParentCollectionInterfaceOfStringProperty)
                      && this.ParentListInterfaceOfStringProperty.IsEqualTo(other.ParentListInterfaceOfStringProperty)
                      && this.ParentReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty.IsEqualTo(other.ParentReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty)
                      && this.ParentCollectionInterfaceOfReadOnlyListInterfaceOfStringProperty.IsEqualTo(other.ParentCollectionInterfaceOfReadOnlyListInterfaceOfStringProperty)
                      && this.ParentListInterfaceOfCollectionInterfaceOfStringProperty.IsEqualTo(other.ParentListInterfaceOfCollectionInterfaceOfStringProperty)
                      && this.ParentReadOnlyListInterfaceOfListInterfaceOfStringProperty.IsEqualTo(other.ParentReadOnlyListInterfaceOfListInterfaceOfStringProperty)
                      && this.ParentDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty.IsEqualTo(other.ParentDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty)
                      && this.ParentReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty.IsEqualTo(other.ParentReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty)
                      && this.ParentReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty.IsEqualTo(other.ParentReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty)
                      && this.ParentReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty.IsEqualTo(other.ParentReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty)
                      && this.Child2CollectionInterfaceOfStringProperty.IsEqualTo(other.Child2CollectionInterfaceOfStringProperty)
                      && this.Child2ListInterfaceOfStringProperty.IsEqualTo(other.Child2ListInterfaceOfStringProperty)
                      && this.Child2ReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty.IsEqualTo(other.Child2ReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty)
                      && this.Child2CollectionInterfaceOfReadOnlyListInterfaceOfStringProperty.IsEqualTo(other.Child2CollectionInterfaceOfReadOnlyListInterfaceOfStringProperty)
                      && this.Child2ListInterfaceOfCollectionInterfaceOfStringProperty.IsEqualTo(other.Child2ListInterfaceOfCollectionInterfaceOfStringProperty)
                      && this.Child2ReadOnlyListInterfaceOfListInterfaceOfStringProperty.IsEqualTo(other.Child2ReadOnlyListInterfaceOfListInterfaceOfStringProperty)
                      && this.Child2DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty.IsEqualTo(other.Child2DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty)
                      && this.Child2ReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty.IsEqualTo(other.Child2ReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty)
                      && this.Child2ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty.IsEqualTo(other.Child2ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty)
                      && this.Child2ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty.IsEqualTo(other.Child2ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty);

            return result;
        }

        /// <inheritdoc />
        public override bool Equals(object obj) => this == (obj as ModelAllPrivateSetMiscChild2);

        /// <inheritdoc />
        public override int GetHashCode() => HashCodeHelper.Initialize()
            .Hash(this.ParentCollectionInterfaceOfStringProperty)
            .Hash(this.ParentListInterfaceOfStringProperty)
            .Hash(this.ParentReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty)
            .Hash(this.ParentCollectionInterfaceOfReadOnlyListInterfaceOfStringProperty)
            .Hash(this.ParentListInterfaceOfCollectionInterfaceOfStringProperty)
            .Hash(this.ParentReadOnlyListInterfaceOfListInterfaceOfStringProperty)
            .Hash(this.ParentDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty)
            .Hash(this.ParentReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty)
            .Hash(this.ParentReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty)
            .Hash(this.ParentReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty)
            .Hash(this.Child2CollectionInterfaceOfStringProperty)
            .Hash(this.Child2ListInterfaceOfStringProperty)
            .Hash(this.Child2ReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty)
            .Hash(this.Child2CollectionInterfaceOfReadOnlyListInterfaceOfStringProperty)
            .Hash(this.Child2ListInterfaceOfCollectionInterfaceOfStringProperty)
            .Hash(this.Child2ReadOnlyListInterfaceOfListInterfaceOfStringProperty)
            .Hash(this.Child2DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty)
            .Hash(this.Child2ReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty)
            .Hash(this.Child2ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty)
            .Hash(this.Child2ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty)
            .Value;

        /// <inheritdoc />
        public new ModelAllPrivateSetMiscChild2 DeepClone() => (ModelAllPrivateSetMiscChild2)this.DeepCloneInternal();

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPrivateSetMiscParent DeepCloneWithParentCollectionInterfaceOfStringProperty(ICollection<string> parentCollectionInterfaceOfStringProperty)
        {
            var result = new ModelAllPrivateSetMiscChild2(
                                 parentCollectionInterfaceOfStringProperty,
                                 this.ParentListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentCollectionInterfaceOfReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentListInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2CollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2CollectionInterfaceOfReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ListInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyListInterfaceOfListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone());

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPrivateSetMiscParent DeepCloneWithParentListInterfaceOfStringProperty(IList<string> parentListInterfaceOfStringProperty)
        {
            var result = new ModelAllPrivateSetMiscChild2(
                                 this.ParentCollectionInterfaceOfStringProperty?.DeepClone(),
                                 parentListInterfaceOfStringProperty,
                                 this.ParentReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentCollectionInterfaceOfReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentListInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2CollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2CollectionInterfaceOfReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ListInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyListInterfaceOfListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone());

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPrivateSetMiscParent DeepCloneWithParentReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty(IReadOnlyCollection<ICollection<string>> parentReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty)
        {
            var result = new ModelAllPrivateSetMiscChild2(
                                 this.ParentCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentListInterfaceOfStringProperty?.DeepClone(),
                                 parentReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty,
                                 this.ParentCollectionInterfaceOfReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentListInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2CollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2CollectionInterfaceOfReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ListInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyListInterfaceOfListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone());

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPrivateSetMiscParent DeepCloneWithParentCollectionInterfaceOfReadOnlyListInterfaceOfStringProperty(ICollection<IReadOnlyList<string>> parentCollectionInterfaceOfReadOnlyListInterfaceOfStringProperty)
        {
            var result = new ModelAllPrivateSetMiscChild2(
                                 this.ParentCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 parentCollectionInterfaceOfReadOnlyListInterfaceOfStringProperty,
                                 this.ParentListInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2CollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2CollectionInterfaceOfReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ListInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyListInterfaceOfListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone());

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPrivateSetMiscParent DeepCloneWithParentListInterfaceOfCollectionInterfaceOfStringProperty(IList<ICollection<string>> parentListInterfaceOfCollectionInterfaceOfStringProperty)
        {
            var result = new ModelAllPrivateSetMiscChild2(
                                 this.ParentCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentCollectionInterfaceOfReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 parentListInterfaceOfCollectionInterfaceOfStringProperty,
                                 this.ParentReadOnlyListInterfaceOfListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2CollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2CollectionInterfaceOfReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ListInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyListInterfaceOfListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone());

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPrivateSetMiscParent DeepCloneWithParentReadOnlyListInterfaceOfListInterfaceOfStringProperty(IReadOnlyList<IList<string>> parentReadOnlyListInterfaceOfListInterfaceOfStringProperty)
        {
            var result = new ModelAllPrivateSetMiscChild2(
                                 this.ParentCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentCollectionInterfaceOfReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentListInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 parentReadOnlyListInterfaceOfListInterfaceOfStringProperty,
                                 this.ParentDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2CollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2CollectionInterfaceOfReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ListInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyListInterfaceOfListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone());

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPrivateSetMiscParent DeepCloneWithParentDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty(IDictionary<string, IReadOnlyList<DateTime>> parentDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty)
        {
            var result = new ModelAllPrivateSetMiscChild2(
                                 this.ParentCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentCollectionInterfaceOfReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentListInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfListInterfaceOfStringProperty?.DeepClone(),
                                 parentDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty,
                                 this.ParentReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2CollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2CollectionInterfaceOfReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ListInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyListInterfaceOfListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone());

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPrivateSetMiscParent DeepCloneWithParentReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty(IReadOnlyDictionary<string, ICollection<DateTime>> parentReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty)
        {
            var result = new ModelAllPrivateSetMiscChild2(
                                 this.ParentCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentCollectionInterfaceOfReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentListInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 parentReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty,
                                 this.ParentReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2CollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2CollectionInterfaceOfReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ListInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyListInterfaceOfListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone());

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPrivateSetMiscParent DeepCloneWithParentReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty(IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>> parentReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty)
        {
            var result = new ModelAllPrivateSetMiscChild2(
                                 this.ParentCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentCollectionInterfaceOfReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentListInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 parentReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty,
                                 this.ParentReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2CollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2CollectionInterfaceOfReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ListInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyListInterfaceOfListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone());

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPrivateSetMiscParent DeepCloneWithParentReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty(IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>> parentReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty)
        {
            var result = new ModelAllPrivateSetMiscChild2(
                                 this.ParentCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentCollectionInterfaceOfReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentListInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 parentReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty,
                                 this.Child2CollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2CollectionInterfaceOfReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ListInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyListInterfaceOfListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2CollectionInterfaceOfStringProperty" />.
        /// </summary>
        /// <param name="child2CollectionInterfaceOfStringProperty">The new <see cref="Child2CollectionInterfaceOfStringProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPrivateSetMiscChild2" /> using the specified <paramref name="child2CollectionInterfaceOfStringProperty" /> for <see cref="Child2CollectionInterfaceOfStringProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPrivateSetMiscChild2 DeepCloneWithChild2CollectionInterfaceOfStringProperty(ICollection<string> child2CollectionInterfaceOfStringProperty)
        {
            var result = new ModelAllPrivateSetMiscChild2(
                                 this.ParentCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentCollectionInterfaceOfReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentListInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 child2CollectionInterfaceOfStringProperty,
                                 this.Child2ListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2CollectionInterfaceOfReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ListInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyListInterfaceOfListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2ListInterfaceOfStringProperty" />.
        /// </summary>
        /// <param name="child2ListInterfaceOfStringProperty">The new <see cref="Child2ListInterfaceOfStringProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPrivateSetMiscChild2" /> using the specified <paramref name="child2ListInterfaceOfStringProperty" /> for <see cref="Child2ListInterfaceOfStringProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPrivateSetMiscChild2 DeepCloneWithChild2ListInterfaceOfStringProperty(IList<string> child2ListInterfaceOfStringProperty)
        {
            var result = new ModelAllPrivateSetMiscChild2(
                                 this.ParentCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentCollectionInterfaceOfReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentListInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2CollectionInterfaceOfStringProperty?.DeepClone(),
                                 child2ListInterfaceOfStringProperty,
                                 this.Child2ReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2CollectionInterfaceOfReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ListInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyListInterfaceOfListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2ReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty" />.
        /// </summary>
        /// <param name="child2ReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty">The new <see cref="Child2ReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPrivateSetMiscChild2" /> using the specified <paramref name="child2ReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty" /> for <see cref="Child2ReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPrivateSetMiscChild2 DeepCloneWithChild2ReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty(IReadOnlyCollection<ICollection<string>> child2ReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty)
        {
            var result = new ModelAllPrivateSetMiscChild2(
                                 this.ParentCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentCollectionInterfaceOfReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentListInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2CollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ListInterfaceOfStringProperty?.DeepClone(),
                                 child2ReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty,
                                 this.Child2CollectionInterfaceOfReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ListInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyListInterfaceOfListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2CollectionInterfaceOfReadOnlyListInterfaceOfStringProperty" />.
        /// </summary>
        /// <param name="child2CollectionInterfaceOfReadOnlyListInterfaceOfStringProperty">The new <see cref="Child2CollectionInterfaceOfReadOnlyListInterfaceOfStringProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPrivateSetMiscChild2" /> using the specified <paramref name="child2CollectionInterfaceOfReadOnlyListInterfaceOfStringProperty" /> for <see cref="Child2CollectionInterfaceOfReadOnlyListInterfaceOfStringProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPrivateSetMiscChild2 DeepCloneWithChild2CollectionInterfaceOfReadOnlyListInterfaceOfStringProperty(ICollection<IReadOnlyList<string>> child2CollectionInterfaceOfReadOnlyListInterfaceOfStringProperty)
        {
            var result = new ModelAllPrivateSetMiscChild2(
                                 this.ParentCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentCollectionInterfaceOfReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentListInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2CollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 child2CollectionInterfaceOfReadOnlyListInterfaceOfStringProperty,
                                 this.Child2ListInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyListInterfaceOfListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2ListInterfaceOfCollectionInterfaceOfStringProperty" />.
        /// </summary>
        /// <param name="child2ListInterfaceOfCollectionInterfaceOfStringProperty">The new <see cref="Child2ListInterfaceOfCollectionInterfaceOfStringProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPrivateSetMiscChild2" /> using the specified <paramref name="child2ListInterfaceOfCollectionInterfaceOfStringProperty" /> for <see cref="Child2ListInterfaceOfCollectionInterfaceOfStringProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPrivateSetMiscChild2 DeepCloneWithChild2ListInterfaceOfCollectionInterfaceOfStringProperty(IList<ICollection<string>> child2ListInterfaceOfCollectionInterfaceOfStringProperty)
        {
            var result = new ModelAllPrivateSetMiscChild2(
                                 this.ParentCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentCollectionInterfaceOfReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentListInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2CollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2CollectionInterfaceOfReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 child2ListInterfaceOfCollectionInterfaceOfStringProperty,
                                 this.Child2ReadOnlyListInterfaceOfListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2ReadOnlyListInterfaceOfListInterfaceOfStringProperty" />.
        /// </summary>
        /// <param name="child2ReadOnlyListInterfaceOfListInterfaceOfStringProperty">The new <see cref="Child2ReadOnlyListInterfaceOfListInterfaceOfStringProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPrivateSetMiscChild2" /> using the specified <paramref name="child2ReadOnlyListInterfaceOfListInterfaceOfStringProperty" /> for <see cref="Child2ReadOnlyListInterfaceOfListInterfaceOfStringProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPrivateSetMiscChild2 DeepCloneWithChild2ReadOnlyListInterfaceOfListInterfaceOfStringProperty(IReadOnlyList<IList<string>> child2ReadOnlyListInterfaceOfListInterfaceOfStringProperty)
        {
            var result = new ModelAllPrivateSetMiscChild2(
                                 this.ParentCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentCollectionInterfaceOfReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentListInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2CollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2CollectionInterfaceOfReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ListInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 child2ReadOnlyListInterfaceOfListInterfaceOfStringProperty,
                                 this.Child2DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty" />.
        /// </summary>
        /// <param name="child2DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty">The new <see cref="Child2DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPrivateSetMiscChild2" /> using the specified <paramref name="child2DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty" /> for <see cref="Child2DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPrivateSetMiscChild2 DeepCloneWithChild2DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty(IDictionary<string, IReadOnlyList<DateTime>> child2DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty)
        {
            var result = new ModelAllPrivateSetMiscChild2(
                                 this.ParentCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentCollectionInterfaceOfReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentListInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2CollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2CollectionInterfaceOfReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ListInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyListInterfaceOfListInterfaceOfStringProperty?.DeepClone(),
                                 child2DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty,
                                 this.Child2ReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2ReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty" />.
        /// </summary>
        /// <param name="child2ReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty">The new <see cref="Child2ReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPrivateSetMiscChild2" /> using the specified <paramref name="child2ReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty" /> for <see cref="Child2ReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPrivateSetMiscChild2 DeepCloneWithChild2ReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty(IReadOnlyDictionary<string, ICollection<DateTime>> child2ReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty)
        {
            var result = new ModelAllPrivateSetMiscChild2(
                                 this.ParentCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentCollectionInterfaceOfReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentListInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2CollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2CollectionInterfaceOfReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ListInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyListInterfaceOfListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 child2ReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty,
                                 this.Child2ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty" />.
        /// </summary>
        /// <param name="child2ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty">The new <see cref="Child2ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPrivateSetMiscChild2" /> using the specified <paramref name="child2ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty" /> for <see cref="Child2ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPrivateSetMiscChild2 DeepCloneWithChild2ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty(IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>> child2ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty)
        {
            var result = new ModelAllPrivateSetMiscChild2(
                                 this.ParentCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentCollectionInterfaceOfReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentListInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2CollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2CollectionInterfaceOfReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ListInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyListInterfaceOfListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 child2ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty,
                                 this.Child2ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty" />.
        /// </summary>
        /// <param name="child2ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty">The new <see cref="Child2ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPrivateSetMiscChild2" /> using the specified <paramref name="child2ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty" /> for <see cref="Child2ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPrivateSetMiscChild2 DeepCloneWithChild2ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty(IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>> child2ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty)
        {
            var result = new ModelAllPrivateSetMiscChild2(
                                 this.ParentCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentCollectionInterfaceOfReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentListInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2CollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2CollectionInterfaceOfReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ListInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyListInterfaceOfListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 child2ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty);

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        protected override ModelAllPrivateSetMiscParent DeepCloneInternal()
        {
            var result = new ModelAllPrivateSetMiscChild2(
                                 this.ParentCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentCollectionInterfaceOfReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentListInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2CollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2CollectionInterfaceOfReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ListInterfaceOfCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyListInterfaceOfListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.DeepClone());

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        public override string ToString()
        {
            var result = Invariant($"OBeautifulCode.CodeGen.ModelObject.Test.ModelAllPrivateSetMiscChild2: ParentCollectionInterfaceOfStringProperty = {this.ParentCollectionInterfaceOfStringProperty?.ToString() ?? "<null>"}, ParentListInterfaceOfStringProperty = {this.ParentListInterfaceOfStringProperty?.ToString() ?? "<null>"}, ParentReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty = {this.ParentReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty?.ToString() ?? "<null>"}, ParentCollectionInterfaceOfReadOnlyListInterfaceOfStringProperty = {this.ParentCollectionInterfaceOfReadOnlyListInterfaceOfStringProperty?.ToString() ?? "<null>"}, ParentListInterfaceOfCollectionInterfaceOfStringProperty = {this.ParentListInterfaceOfCollectionInterfaceOfStringProperty?.ToString() ?? "<null>"}, ParentReadOnlyListInterfaceOfListInterfaceOfStringProperty = {this.ParentReadOnlyListInterfaceOfListInterfaceOfStringProperty?.ToString() ?? "<null>"}, ParentDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty = {this.ParentDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.ToString() ?? "<null>"}, ParentReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty = {this.ParentReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty?.ToString() ?? "<null>"}, ParentReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty = {this.ParentReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.ToString() ?? "<null>"}, ParentReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty = {this.ParentReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.ToString() ?? "<null>"}, Child2CollectionInterfaceOfStringProperty = {this.Child2CollectionInterfaceOfStringProperty?.ToString() ?? "<null>"}, Child2ListInterfaceOfStringProperty = {this.Child2ListInterfaceOfStringProperty?.ToString() ?? "<null>"}, Child2ReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty = {this.Child2ReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty?.ToString() ?? "<null>"}, Child2CollectionInterfaceOfReadOnlyListInterfaceOfStringProperty = {this.Child2CollectionInterfaceOfReadOnlyListInterfaceOfStringProperty?.ToString() ?? "<null>"}, Child2ListInterfaceOfCollectionInterfaceOfStringProperty = {this.Child2ListInterfaceOfCollectionInterfaceOfStringProperty?.ToString() ?? "<null>"}, Child2ReadOnlyListInterfaceOfListInterfaceOfStringProperty = {this.Child2ReadOnlyListInterfaceOfListInterfaceOfStringProperty?.ToString() ?? "<null>"}, Child2DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty = {this.Child2DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.ToString() ?? "<null>"}, Child2ReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty = {this.Child2ReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty?.ToString() ?? "<null>"}, Child2ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty = {this.Child2ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.ToString() ?? "<null>"}, Child2ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty = {this.Child2ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty?.ToString() ?? "<null>"}.");

            return result;
        }
    }
}