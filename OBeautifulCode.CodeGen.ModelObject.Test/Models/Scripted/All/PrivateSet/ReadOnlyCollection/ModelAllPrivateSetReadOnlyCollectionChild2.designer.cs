// --------------------------------------------------------------------------------------------------------------------
// <auto-generated>
//   Generated using OBeautifulCode.CodeGen.ModelObject (1.0.0.0)
// </auto-generated>
// --------------------------------------------------------------------------------------------------------------------

namespace OBeautifulCode.CodeGen.ModelObject.Test
{
    using global::System;
    using global::System.CodeDom.Compiler;
    using global::System.Collections.Concurrent;
    using global::System.Collections.Generic;
    using global::System.Collections.ObjectModel;
    using global::System.Diagnostics.CodeAnalysis;
    using global::System.Globalization;
    using global::System.Linq;

    using global::OBeautifulCode.Cloning.Recipes;
    using global::OBeautifulCode.Equality.Recipes;
    using global::OBeautifulCode.Type;
    using global::OBeautifulCode.Type.Recipes;

    using static global::System.FormattableString;

    [Serializable]
    public partial class ModelAllPrivateSetReadOnlyCollectionChild2 : IModel<ModelAllPrivateSetReadOnlyCollectionChild2>
    {
        /// <summary>
        /// Determines whether two objects of type <see cref="ModelAllPrivateSetReadOnlyCollectionChild2"/> are equal.
        /// </summary>
        /// <param name="left">The object to the left of the equality operator.</param>
        /// <param name="right">The object to the right of the equality operator.</param>
        /// <returns>true if the two items are equal; otherwise false.</returns>
        public static bool operator ==(ModelAllPrivateSetReadOnlyCollectionChild2 left, ModelAllPrivateSetReadOnlyCollectionChild2 right)
        {
            if (ReferenceEquals(left, right))
            {
                return true;
            }

            if (ReferenceEquals(left, null) || ReferenceEquals(right, null))
            {
                return false;
            }

            var result = left.Equals(right);

            return result;
        }

        /// <summary>
        /// Determines whether two objects of type <see cref="ModelAllPrivateSetReadOnlyCollectionChild2"/> are not equal.
        /// </summary>
        /// <param name="left">The object to the left of the equality operator.</param>
        /// <param name="right">The object to the right of the equality operator.</param>
        /// <returns>true if the two items are not equal; otherwise false.</returns>
        public static bool operator !=(ModelAllPrivateSetReadOnlyCollectionChild2 left, ModelAllPrivateSetReadOnlyCollectionChild2 right) => !(left == right);

        /// <inheritdoc />
        public bool Equals(ModelAllPrivateSetReadOnlyCollectionChild2 other)
        {
            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (ReferenceEquals(other, null))
            {
                return false;
            }

            var result = this.ParentReadOnlyCollectionInterfaceOfBoolProperty.IsEqualTo(other.ParentReadOnlyCollectionInterfaceOfBoolProperty)
                      && this.ParentReadOnlyCollectionInterfaceOfIntProperty.IsEqualTo(other.ParentReadOnlyCollectionInterfaceOfIntProperty)
                      && this.ParentReadOnlyCollectionInterfaceOfStringProperty.IsEqualTo(other.ParentReadOnlyCollectionInterfaceOfStringProperty)
                      && this.ParentReadOnlyCollectionInterfaceOfGuidProperty.IsEqualTo(other.ParentReadOnlyCollectionInterfaceOfGuidProperty)
                      && this.ParentReadOnlyCollectionInterfaceOfDateTimeProperty.IsEqualTo(other.ParentReadOnlyCollectionInterfaceOfDateTimeProperty)
                      && this.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty.IsEqualTo(other.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty)
                      && this.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty.IsEqualTo(other.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty)
                      && this.ParentReadOnlyCollectionInterfaceOfCustomClassProperty.IsEqualTo(other.ParentReadOnlyCollectionInterfaceOfCustomClassProperty)
                      && this.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty.IsEqualTo(other.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty)
                      && this.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty.IsEqualTo(other.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty)
                      && this.Child2ReadOnlyCollectionInterfaceOfBoolProperty.IsEqualTo(other.Child2ReadOnlyCollectionInterfaceOfBoolProperty)
                      && this.Child2ReadOnlyCollectionInterfaceOfIntProperty.IsEqualTo(other.Child2ReadOnlyCollectionInterfaceOfIntProperty)
                      && this.Child2ReadOnlyCollectionInterfaceOfStringProperty.IsEqualTo(other.Child2ReadOnlyCollectionInterfaceOfStringProperty)
                      && this.Child2ReadOnlyCollectionInterfaceOfGuidProperty.IsEqualTo(other.Child2ReadOnlyCollectionInterfaceOfGuidProperty)
                      && this.Child2ReadOnlyCollectionInterfaceOfDateTimeProperty.IsEqualTo(other.Child2ReadOnlyCollectionInterfaceOfDateTimeProperty)
                      && this.Child2ReadOnlyCollectionInterfaceOfCustomEnumProperty.IsEqualTo(other.Child2ReadOnlyCollectionInterfaceOfCustomEnumProperty)
                      && this.Child2ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty.IsEqualTo(other.Child2ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty)
                      && this.Child2ReadOnlyCollectionInterfaceOfCustomClassProperty.IsEqualTo(other.Child2ReadOnlyCollectionInterfaceOfCustomClassProperty)
                      && this.Child2ReadOnlyCollectionInterfaceOfCustomBaseClassProperty.IsEqualTo(other.Child2ReadOnlyCollectionInterfaceOfCustomBaseClassProperty)
                      && this.Child2ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty.IsEqualTo(other.Child2ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty);

            return result;
        }

        /// <inheritdoc />
        public override bool Equals(object obj) => this == (obj as ModelAllPrivateSetReadOnlyCollectionChild2);

        /// <inheritdoc />
        public override int GetHashCode() => HashCodeHelper.Initialize()
            .Hash(this.ParentReadOnlyCollectionInterfaceOfBoolProperty)
            .Hash(this.ParentReadOnlyCollectionInterfaceOfIntProperty)
            .Hash(this.ParentReadOnlyCollectionInterfaceOfStringProperty)
            .Hash(this.ParentReadOnlyCollectionInterfaceOfGuidProperty)
            .Hash(this.ParentReadOnlyCollectionInterfaceOfDateTimeProperty)
            .Hash(this.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty)
            .Hash(this.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty)
            .Hash(this.ParentReadOnlyCollectionInterfaceOfCustomClassProperty)
            .Hash(this.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty)
            .Hash(this.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty)
            .Hash(this.Child2ReadOnlyCollectionInterfaceOfBoolProperty)
            .Hash(this.Child2ReadOnlyCollectionInterfaceOfIntProperty)
            .Hash(this.Child2ReadOnlyCollectionInterfaceOfStringProperty)
            .Hash(this.Child2ReadOnlyCollectionInterfaceOfGuidProperty)
            .Hash(this.Child2ReadOnlyCollectionInterfaceOfDateTimeProperty)
            .Hash(this.Child2ReadOnlyCollectionInterfaceOfCustomEnumProperty)
            .Hash(this.Child2ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty)
            .Hash(this.Child2ReadOnlyCollectionInterfaceOfCustomClassProperty)
            .Hash(this.Child2ReadOnlyCollectionInterfaceOfCustomBaseClassProperty)
            .Hash(this.Child2ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty)
            .Value;

        /// <inheritdoc />
        public new ModelAllPrivateSetReadOnlyCollectionChild2 DeepClone() => (ModelAllPrivateSetReadOnlyCollectionChild2)this.DeepCloneInternal();

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPrivateSetReadOnlyCollectionParent DeepCloneWithParentReadOnlyCollectionInterfaceOfBoolProperty(IReadOnlyCollection<bool> parentReadOnlyCollectionInterfaceOfBoolProperty)
        {
            var result = new ModelAllPrivateSetReadOnlyCollectionChild2(
                                 parentReadOnlyCollectionInterfaceOfBoolProperty,
                                 this.ParentReadOnlyCollectionInterfaceOfIntProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfGuidProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfBoolProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfIntProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfGuidProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone());

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPrivateSetReadOnlyCollectionParent DeepCloneWithParentReadOnlyCollectionInterfaceOfIntProperty(IReadOnlyCollection<int> parentReadOnlyCollectionInterfaceOfIntProperty)
        {
            var result = new ModelAllPrivateSetReadOnlyCollectionChild2(
                                 this.ParentReadOnlyCollectionInterfaceOfBoolProperty?.DeepClone(),
                                 parentReadOnlyCollectionInterfaceOfIntProperty,
                                 this.ParentReadOnlyCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfGuidProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfBoolProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfIntProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfGuidProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone());

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPrivateSetReadOnlyCollectionParent DeepCloneWithParentReadOnlyCollectionInterfaceOfStringProperty(IReadOnlyCollection<string> parentReadOnlyCollectionInterfaceOfStringProperty)
        {
            var result = new ModelAllPrivateSetReadOnlyCollectionChild2(
                                 this.ParentReadOnlyCollectionInterfaceOfBoolProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfIntProperty?.DeepClone(),
                                 parentReadOnlyCollectionInterfaceOfStringProperty,
                                 this.ParentReadOnlyCollectionInterfaceOfGuidProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfBoolProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfIntProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfGuidProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone());

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPrivateSetReadOnlyCollectionParent DeepCloneWithParentReadOnlyCollectionInterfaceOfGuidProperty(IReadOnlyCollection<Guid> parentReadOnlyCollectionInterfaceOfGuidProperty)
        {
            var result = new ModelAllPrivateSetReadOnlyCollectionChild2(
                                 this.ParentReadOnlyCollectionInterfaceOfBoolProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfIntProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfStringProperty?.DeepClone(),
                                 parentReadOnlyCollectionInterfaceOfGuidProperty,
                                 this.ParentReadOnlyCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfBoolProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfIntProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfGuidProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone());

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPrivateSetReadOnlyCollectionParent DeepCloneWithParentReadOnlyCollectionInterfaceOfDateTimeProperty(IReadOnlyCollection<DateTime> parentReadOnlyCollectionInterfaceOfDateTimeProperty)
        {
            var result = new ModelAllPrivateSetReadOnlyCollectionChild2(
                                 this.ParentReadOnlyCollectionInterfaceOfBoolProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfIntProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfGuidProperty?.DeepClone(),
                                 parentReadOnlyCollectionInterfaceOfDateTimeProperty,
                                 this.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfBoolProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfIntProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfGuidProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone());

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPrivateSetReadOnlyCollectionParent DeepCloneWithParentReadOnlyCollectionInterfaceOfCustomEnumProperty(IReadOnlyCollection<CustomEnum> parentReadOnlyCollectionInterfaceOfCustomEnumProperty)
        {
            var result = new ModelAllPrivateSetReadOnlyCollectionChild2(
                                 this.ParentReadOnlyCollectionInterfaceOfBoolProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfIntProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfGuidProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 parentReadOnlyCollectionInterfaceOfCustomEnumProperty,
                                 this.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfBoolProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfIntProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfGuidProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone());

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPrivateSetReadOnlyCollectionParent DeepCloneWithParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty(IReadOnlyCollection<CustomFlagsEnum> parentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty)
        {
            var result = new ModelAllPrivateSetReadOnlyCollectionChild2(
                                 this.ParentReadOnlyCollectionInterfaceOfBoolProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfIntProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfGuidProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty?.DeepClone(),
                                 parentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty,
                                 this.ParentReadOnlyCollectionInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfBoolProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfIntProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfGuidProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone());

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPrivateSetReadOnlyCollectionParent DeepCloneWithParentReadOnlyCollectionInterfaceOfCustomClassProperty(IReadOnlyCollection<CustomClass> parentReadOnlyCollectionInterfaceOfCustomClassProperty)
        {
            var result = new ModelAllPrivateSetReadOnlyCollectionChild2(
                                 this.ParentReadOnlyCollectionInterfaceOfBoolProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfIntProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfGuidProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 parentReadOnlyCollectionInterfaceOfCustomClassProperty,
                                 this.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfBoolProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfIntProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfGuidProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone());

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPrivateSetReadOnlyCollectionParent DeepCloneWithParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty(IReadOnlyCollection<CustomBaseClass> parentReadOnlyCollectionInterfaceOfCustomBaseClassProperty)
        {
            var result = new ModelAllPrivateSetReadOnlyCollectionChild2(
                                 this.ParentReadOnlyCollectionInterfaceOfBoolProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfIntProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfGuidProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomClassProperty?.DeepClone(),
                                 parentReadOnlyCollectionInterfaceOfCustomBaseClassProperty,
                                 this.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfBoolProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfIntProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfGuidProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone());

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPrivateSetReadOnlyCollectionParent DeepCloneWithParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty(IReadOnlyCollection<CustomGenericClass<CustomClass>> parentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty)
        {
            var result = new ModelAllPrivateSetReadOnlyCollectionChild2(
                                 this.ParentReadOnlyCollectionInterfaceOfBoolProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfIntProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfGuidProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 parentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty,
                                 this.Child2ReadOnlyCollectionInterfaceOfBoolProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfIntProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfGuidProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2ReadOnlyCollectionInterfaceOfBoolProperty" />.
        /// </summary>
        /// <param name="child2ReadOnlyCollectionInterfaceOfBoolProperty">The new <see cref="Child2ReadOnlyCollectionInterfaceOfBoolProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPrivateSetReadOnlyCollectionChild2" /> using the specified <paramref name="child2ReadOnlyCollectionInterfaceOfBoolProperty" /> for <see cref="Child2ReadOnlyCollectionInterfaceOfBoolProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPrivateSetReadOnlyCollectionChild2 DeepCloneWithChild2ReadOnlyCollectionInterfaceOfBoolProperty(IReadOnlyCollection<bool> child2ReadOnlyCollectionInterfaceOfBoolProperty)
        {
            var result = new ModelAllPrivateSetReadOnlyCollectionChild2(
                                 this.ParentReadOnlyCollectionInterfaceOfBoolProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfIntProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfGuidProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 child2ReadOnlyCollectionInterfaceOfBoolProperty,
                                 this.Child2ReadOnlyCollectionInterfaceOfIntProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfGuidProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2ReadOnlyCollectionInterfaceOfIntProperty" />.
        /// </summary>
        /// <param name="child2ReadOnlyCollectionInterfaceOfIntProperty">The new <see cref="Child2ReadOnlyCollectionInterfaceOfIntProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPrivateSetReadOnlyCollectionChild2" /> using the specified <paramref name="child2ReadOnlyCollectionInterfaceOfIntProperty" /> for <see cref="Child2ReadOnlyCollectionInterfaceOfIntProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPrivateSetReadOnlyCollectionChild2 DeepCloneWithChild2ReadOnlyCollectionInterfaceOfIntProperty(IReadOnlyCollection<int> child2ReadOnlyCollectionInterfaceOfIntProperty)
        {
            var result = new ModelAllPrivateSetReadOnlyCollectionChild2(
                                 this.ParentReadOnlyCollectionInterfaceOfBoolProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfIntProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfGuidProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfBoolProperty?.DeepClone(),
                                 child2ReadOnlyCollectionInterfaceOfIntProperty,
                                 this.Child2ReadOnlyCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfGuidProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2ReadOnlyCollectionInterfaceOfStringProperty" />.
        /// </summary>
        /// <param name="child2ReadOnlyCollectionInterfaceOfStringProperty">The new <see cref="Child2ReadOnlyCollectionInterfaceOfStringProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPrivateSetReadOnlyCollectionChild2" /> using the specified <paramref name="child2ReadOnlyCollectionInterfaceOfStringProperty" /> for <see cref="Child2ReadOnlyCollectionInterfaceOfStringProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPrivateSetReadOnlyCollectionChild2 DeepCloneWithChild2ReadOnlyCollectionInterfaceOfStringProperty(IReadOnlyCollection<string> child2ReadOnlyCollectionInterfaceOfStringProperty)
        {
            var result = new ModelAllPrivateSetReadOnlyCollectionChild2(
                                 this.ParentReadOnlyCollectionInterfaceOfBoolProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfIntProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfGuidProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfBoolProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfIntProperty?.DeepClone(),
                                 child2ReadOnlyCollectionInterfaceOfStringProperty,
                                 this.Child2ReadOnlyCollectionInterfaceOfGuidProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2ReadOnlyCollectionInterfaceOfGuidProperty" />.
        /// </summary>
        /// <param name="child2ReadOnlyCollectionInterfaceOfGuidProperty">The new <see cref="Child2ReadOnlyCollectionInterfaceOfGuidProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPrivateSetReadOnlyCollectionChild2" /> using the specified <paramref name="child2ReadOnlyCollectionInterfaceOfGuidProperty" /> for <see cref="Child2ReadOnlyCollectionInterfaceOfGuidProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPrivateSetReadOnlyCollectionChild2 DeepCloneWithChild2ReadOnlyCollectionInterfaceOfGuidProperty(IReadOnlyCollection<Guid> child2ReadOnlyCollectionInterfaceOfGuidProperty)
        {
            var result = new ModelAllPrivateSetReadOnlyCollectionChild2(
                                 this.ParentReadOnlyCollectionInterfaceOfBoolProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfIntProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfGuidProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfBoolProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfIntProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfStringProperty?.DeepClone(),
                                 child2ReadOnlyCollectionInterfaceOfGuidProperty,
                                 this.Child2ReadOnlyCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2ReadOnlyCollectionInterfaceOfDateTimeProperty" />.
        /// </summary>
        /// <param name="child2ReadOnlyCollectionInterfaceOfDateTimeProperty">The new <see cref="Child2ReadOnlyCollectionInterfaceOfDateTimeProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPrivateSetReadOnlyCollectionChild2" /> using the specified <paramref name="child2ReadOnlyCollectionInterfaceOfDateTimeProperty" /> for <see cref="Child2ReadOnlyCollectionInterfaceOfDateTimeProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPrivateSetReadOnlyCollectionChild2 DeepCloneWithChild2ReadOnlyCollectionInterfaceOfDateTimeProperty(IReadOnlyCollection<DateTime> child2ReadOnlyCollectionInterfaceOfDateTimeProperty)
        {
            var result = new ModelAllPrivateSetReadOnlyCollectionChild2(
                                 this.ParentReadOnlyCollectionInterfaceOfBoolProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfIntProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfGuidProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfBoolProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfIntProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfGuidProperty?.DeepClone(),
                                 child2ReadOnlyCollectionInterfaceOfDateTimeProperty,
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2ReadOnlyCollectionInterfaceOfCustomEnumProperty" />.
        /// </summary>
        /// <param name="child2ReadOnlyCollectionInterfaceOfCustomEnumProperty">The new <see cref="Child2ReadOnlyCollectionInterfaceOfCustomEnumProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPrivateSetReadOnlyCollectionChild2" /> using the specified <paramref name="child2ReadOnlyCollectionInterfaceOfCustomEnumProperty" /> for <see cref="Child2ReadOnlyCollectionInterfaceOfCustomEnumProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPrivateSetReadOnlyCollectionChild2 DeepCloneWithChild2ReadOnlyCollectionInterfaceOfCustomEnumProperty(IReadOnlyCollection<CustomEnum> child2ReadOnlyCollectionInterfaceOfCustomEnumProperty)
        {
            var result = new ModelAllPrivateSetReadOnlyCollectionChild2(
                                 this.ParentReadOnlyCollectionInterfaceOfBoolProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfIntProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfGuidProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfBoolProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfIntProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfGuidProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 child2ReadOnlyCollectionInterfaceOfCustomEnumProperty,
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty" />.
        /// </summary>
        /// <param name="child2ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty">The new <see cref="Child2ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPrivateSetReadOnlyCollectionChild2" /> using the specified <paramref name="child2ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty" /> for <see cref="Child2ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPrivateSetReadOnlyCollectionChild2 DeepCloneWithChild2ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty(IReadOnlyCollection<CustomFlagsEnum> child2ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty)
        {
            var result = new ModelAllPrivateSetReadOnlyCollectionChild2(
                                 this.ParentReadOnlyCollectionInterfaceOfBoolProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfIntProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfGuidProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfBoolProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfIntProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfGuidProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomEnumProperty?.DeepClone(),
                                 child2ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty,
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2ReadOnlyCollectionInterfaceOfCustomClassProperty" />.
        /// </summary>
        /// <param name="child2ReadOnlyCollectionInterfaceOfCustomClassProperty">The new <see cref="Child2ReadOnlyCollectionInterfaceOfCustomClassProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPrivateSetReadOnlyCollectionChild2" /> using the specified <paramref name="child2ReadOnlyCollectionInterfaceOfCustomClassProperty" /> for <see cref="Child2ReadOnlyCollectionInterfaceOfCustomClassProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPrivateSetReadOnlyCollectionChild2 DeepCloneWithChild2ReadOnlyCollectionInterfaceOfCustomClassProperty(IReadOnlyCollection<CustomClass> child2ReadOnlyCollectionInterfaceOfCustomClassProperty)
        {
            var result = new ModelAllPrivateSetReadOnlyCollectionChild2(
                                 this.ParentReadOnlyCollectionInterfaceOfBoolProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfIntProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfGuidProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfBoolProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfIntProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfGuidProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 child2ReadOnlyCollectionInterfaceOfCustomClassProperty,
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2ReadOnlyCollectionInterfaceOfCustomBaseClassProperty" />.
        /// </summary>
        /// <param name="child2ReadOnlyCollectionInterfaceOfCustomBaseClassProperty">The new <see cref="Child2ReadOnlyCollectionInterfaceOfCustomBaseClassProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPrivateSetReadOnlyCollectionChild2" /> using the specified <paramref name="child2ReadOnlyCollectionInterfaceOfCustomBaseClassProperty" /> for <see cref="Child2ReadOnlyCollectionInterfaceOfCustomBaseClassProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPrivateSetReadOnlyCollectionChild2 DeepCloneWithChild2ReadOnlyCollectionInterfaceOfCustomBaseClassProperty(IReadOnlyCollection<CustomBaseClass> child2ReadOnlyCollectionInterfaceOfCustomBaseClassProperty)
        {
            var result = new ModelAllPrivateSetReadOnlyCollectionChild2(
                                 this.ParentReadOnlyCollectionInterfaceOfBoolProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfIntProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfGuidProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfBoolProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfIntProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfGuidProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomClassProperty?.DeepClone(),
                                 child2ReadOnlyCollectionInterfaceOfCustomBaseClassProperty,
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child2ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty" />.
        /// </summary>
        /// <param name="child2ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty">The new <see cref="Child2ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPrivateSetReadOnlyCollectionChild2" /> using the specified <paramref name="child2ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty" /> for <see cref="Child2ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPrivateSetReadOnlyCollectionChild2 DeepCloneWithChild2ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty(IReadOnlyCollection<CustomGenericClass<CustomClass>> child2ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty)
        {
            var result = new ModelAllPrivateSetReadOnlyCollectionChild2(
                                 this.ParentReadOnlyCollectionInterfaceOfBoolProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfIntProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfGuidProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfBoolProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfIntProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfGuidProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 child2ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty);

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        protected override ModelAllPrivateSetReadOnlyCollectionParent DeepCloneInternal()
        {
            var result = new ModelAllPrivateSetReadOnlyCollectionChild2(
                                 this.ParentReadOnlyCollectionInterfaceOfBoolProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfIntProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfGuidProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfBoolProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfIntProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfStringProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfGuidProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.Child2ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone());

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        public override string ToString()
        {
            var result = Invariant($"OBeautifulCode.CodeGen.ModelObject.Test.ModelAllPrivateSetReadOnlyCollectionChild2: ParentReadOnlyCollectionInterfaceOfBoolProperty = {this.ParentReadOnlyCollectionInterfaceOfBoolProperty?.ToString() ?? "<null>"}, ParentReadOnlyCollectionInterfaceOfIntProperty = {this.ParentReadOnlyCollectionInterfaceOfIntProperty?.ToString() ?? "<null>"}, ParentReadOnlyCollectionInterfaceOfStringProperty = {this.ParentReadOnlyCollectionInterfaceOfStringProperty?.ToString() ?? "<null>"}, ParentReadOnlyCollectionInterfaceOfGuidProperty = {this.ParentReadOnlyCollectionInterfaceOfGuidProperty?.ToString() ?? "<null>"}, ParentReadOnlyCollectionInterfaceOfDateTimeProperty = {this.ParentReadOnlyCollectionInterfaceOfDateTimeProperty?.ToString() ?? "<null>"}, ParentReadOnlyCollectionInterfaceOfCustomEnumProperty = {this.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty?.ToString() ?? "<null>"}, ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty = {this.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.ToString() ?? "<null>"}, ParentReadOnlyCollectionInterfaceOfCustomClassProperty = {this.ParentReadOnlyCollectionInterfaceOfCustomClassProperty?.ToString() ?? "<null>"}, ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty = {this.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.ToString() ?? "<null>"}, ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty = {this.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.ToString() ?? "<null>"}, Child2ReadOnlyCollectionInterfaceOfBoolProperty = {this.Child2ReadOnlyCollectionInterfaceOfBoolProperty?.ToString() ?? "<null>"}, Child2ReadOnlyCollectionInterfaceOfIntProperty = {this.Child2ReadOnlyCollectionInterfaceOfIntProperty?.ToString() ?? "<null>"}, Child2ReadOnlyCollectionInterfaceOfStringProperty = {this.Child2ReadOnlyCollectionInterfaceOfStringProperty?.ToString() ?? "<null>"}, Child2ReadOnlyCollectionInterfaceOfGuidProperty = {this.Child2ReadOnlyCollectionInterfaceOfGuidProperty?.ToString() ?? "<null>"}, Child2ReadOnlyCollectionInterfaceOfDateTimeProperty = {this.Child2ReadOnlyCollectionInterfaceOfDateTimeProperty?.ToString() ?? "<null>"}, Child2ReadOnlyCollectionInterfaceOfCustomEnumProperty = {this.Child2ReadOnlyCollectionInterfaceOfCustomEnumProperty?.ToString() ?? "<null>"}, Child2ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty = {this.Child2ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty?.ToString() ?? "<null>"}, Child2ReadOnlyCollectionInterfaceOfCustomClassProperty = {this.Child2ReadOnlyCollectionInterfaceOfCustomClassProperty?.ToString() ?? "<null>"}, Child2ReadOnlyCollectionInterfaceOfCustomBaseClassProperty = {this.Child2ReadOnlyCollectionInterfaceOfCustomBaseClassProperty?.ToString() ?? "<null>"}, Child2ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty = {this.Child2ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty?.ToString() ?? "<null>"}.");

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        public override IReadOnlyList<ValidationFailure> GetValidationFailures(
            ValidationOptions options = null,
            PropertyPathTracker propertyPathTracker = null)
        {
            options = options ?? new ValidationOptions();
            propertyPathTracker = propertyPathTracker ?? new PropertyPathTracker();

            bool stopOnFirstObjectWithFailures;
            switch (options.ValidateUntil)
            {
                case ValidateUntil.FullyTraversed:
                    stopOnFirstObjectWithFailures = false;
                    break;
                case ValidateUntil.FirstInvalidObject:
                    stopOnFirstObjectWithFailures = true;
                    break;
                default:
                    throw new NotSupportedException(Invariant($"This {nameof(ValidateUntil)} is not supported: {options.ValidateUntil}."));
            }

            bool validateProperties;
            switch (options.ValidationScope)
            {
                case ValidationScope.SelfAndProperties:
                    validateProperties = true;
                    break;
                case ValidationScope.SelfOnly:
                    validateProperties = false;
                    break;
                default:
                    throw new NotSupportedException(Invariant($"This {nameof(ValidationScope)} is not supported: {options.ValidationScope}."));
            }

            var result = new List<ValidationFailure>();

            void ValidateProperties()
            {
                IReadOnlyList<ValidationFailure> localValidationFailures;

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.ParentReadOnlyCollectionInterfaceOfBoolProperty, options, propertyPathTracker, nameof(this.ParentReadOnlyCollectionInterfaceOfBoolProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.ParentReadOnlyCollectionInterfaceOfIntProperty, options, propertyPathTracker, nameof(this.ParentReadOnlyCollectionInterfaceOfIntProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.ParentReadOnlyCollectionInterfaceOfStringProperty, options, propertyPathTracker, nameof(this.ParentReadOnlyCollectionInterfaceOfStringProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.ParentReadOnlyCollectionInterfaceOfGuidProperty, options, propertyPathTracker, nameof(this.ParentReadOnlyCollectionInterfaceOfGuidProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.ParentReadOnlyCollectionInterfaceOfDateTimeProperty, options, propertyPathTracker, nameof(this.ParentReadOnlyCollectionInterfaceOfDateTimeProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty, options, propertyPathTracker, nameof(this.ParentReadOnlyCollectionInterfaceOfCustomEnumProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty, options, propertyPathTracker, nameof(this.ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.ParentReadOnlyCollectionInterfaceOfCustomClassProperty, options, propertyPathTracker, nameof(this.ParentReadOnlyCollectionInterfaceOfCustomClassProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty, options, propertyPathTracker, nameof(this.ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty, options, propertyPathTracker, nameof(this.ParentReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.Child2ReadOnlyCollectionInterfaceOfBoolProperty, options, propertyPathTracker, nameof(this.Child2ReadOnlyCollectionInterfaceOfBoolProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.Child2ReadOnlyCollectionInterfaceOfIntProperty, options, propertyPathTracker, nameof(this.Child2ReadOnlyCollectionInterfaceOfIntProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.Child2ReadOnlyCollectionInterfaceOfStringProperty, options, propertyPathTracker, nameof(this.Child2ReadOnlyCollectionInterfaceOfStringProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.Child2ReadOnlyCollectionInterfaceOfGuidProperty, options, propertyPathTracker, nameof(this.Child2ReadOnlyCollectionInterfaceOfGuidProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.Child2ReadOnlyCollectionInterfaceOfDateTimeProperty, options, propertyPathTracker, nameof(this.Child2ReadOnlyCollectionInterfaceOfDateTimeProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.Child2ReadOnlyCollectionInterfaceOfCustomEnumProperty, options, propertyPathTracker, nameof(this.Child2ReadOnlyCollectionInterfaceOfCustomEnumProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.Child2ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty, options, propertyPathTracker, nameof(this.Child2ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.Child2ReadOnlyCollectionInterfaceOfCustomClassProperty, options, propertyPathTracker, nameof(this.Child2ReadOnlyCollectionInterfaceOfCustomClassProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.Child2ReadOnlyCollectionInterfaceOfCustomBaseClassProperty, options, propertyPathTracker, nameof(this.Child2ReadOnlyCollectionInterfaceOfCustomBaseClassProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.Child2ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty, options, propertyPathTracker, nameof(this.Child2ReadOnlyCollectionInterfaceOfCustomGenericClassOfCustomClassProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }
            }

            void ValidateSelf()
            {
                var segmentSeparator = propertyPathTracker.HasSegments ? propertyPathTracker.SegmentSeparator : string.Empty;

                var selfValidationFailures = (this.GetSelfValidationFailures() ?? new SelfValidationFailure[0])
                    .Where(_ => _ != null)
                    .Select(_ =>
                    {
                        var propertyNames = _.PropertyNames.Count > 1
                            ? Invariant($"({string.Join("|", _.PropertyNames)})")
                            : _.PropertyNames.Single();

                        return new ValidationFailure(
                            this.GetType().ToStringReadable(),
                            Invariant($"{propertyPathTracker.FullPath}{segmentSeparator}{propertyNames}"),
                            _.Message);
                    })
                    .ToList();

                result.AddRange(selfValidationFailures);
            }

            if (options.ValidationOrder == ValidationOrder.PropertiesThenSelf)
            {
                if (validateProperties)
                {
                    ValidateProperties();
                }

                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return result;
                }

                ValidateSelf();
            }
            else if (options.ValidationOrder == ValidationOrder.SelfThenProperties)
            {
                ValidateSelf();

                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return result;
                }

                if (validateProperties)
                {
                    ValidateProperties();
                }
            }
            else
            {
                throw new NotSupportedException(Invariant($"This {nameof(ValidationOrder)} is not supported: {options.ValidationOrder}."));
            }

            return result;
        }

        /// <inheritdoc />
        public override IReadOnlyList<SelfValidationFailure> GetSelfValidationFailures()
        {
            var result = base.GetSelfValidationFailures();

            return result;
        }
    }
}