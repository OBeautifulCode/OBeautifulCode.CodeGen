// --------------------------------------------------------------------------------------------------------------------
// <auto-generated>
//   Generated using OBeautifulCode.CodeGen.ModelObject (1.0.0.0)
// </auto-generated>
// --------------------------------------------------------------------------------------------------------------------

namespace OBeautifulCode.CodeGen.ModelObject.Test
{
    using global::System;
    using global::System.CodeDom.Compiler;
    using global::System.Collections.Concurrent;
    using global::System.Collections.Generic;
    using global::System.Collections.ObjectModel;
    using global::System.Diagnostics.CodeAnalysis;
    using global::System.Globalization;
    using global::System.Linq;

    using global::OBeautifulCode.Cloning.Recipes;
    using global::OBeautifulCode.Equality.Recipes;
    using global::OBeautifulCode.Type;
    using global::OBeautifulCode.Type.Recipes;

    using static global::System.FormattableString;

    [Serializable]
    public partial class ModelAllPrivateSetReadOnlyListChild1 : IModel<ModelAllPrivateSetReadOnlyListChild1>
    {
        /// <summary>
        /// Determines whether two objects of type <see cref="ModelAllPrivateSetReadOnlyListChild1"/> are equal.
        /// </summary>
        /// <param name="left">The object to the left of the equality operator.</param>
        /// <param name="right">The object to the right of the equality operator.</param>
        /// <returns>true if the two items are equal; otherwise false.</returns>
        public static bool operator ==(ModelAllPrivateSetReadOnlyListChild1 left, ModelAllPrivateSetReadOnlyListChild1 right)
        {
            if (ReferenceEquals(left, right))
            {
                return true;
            }

            if (ReferenceEquals(left, null) || ReferenceEquals(right, null))
            {
                return false;
            }

            var result = left.Equals(right);

            return result;
        }

        /// <summary>
        /// Determines whether two objects of type <see cref="ModelAllPrivateSetReadOnlyListChild1"/> are not equal.
        /// </summary>
        /// <param name="left">The object to the left of the equality operator.</param>
        /// <param name="right">The object to the right of the equality operator.</param>
        /// <returns>true if the two items are not equal; otherwise false.</returns>
        public static bool operator !=(ModelAllPrivateSetReadOnlyListChild1 left, ModelAllPrivateSetReadOnlyListChild1 right) => !(left == right);

        /// <inheritdoc />
        public bool Equals(ModelAllPrivateSetReadOnlyListChild1 other)
        {
            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (ReferenceEquals(other, null))
            {
                return false;
            }

            var result = this.ParentReadOnlyListInterfaceOfBoolProperty.IsEqualTo(other.ParentReadOnlyListInterfaceOfBoolProperty)
                      && this.ParentReadOnlyListInterfaceOfIntProperty.IsEqualTo(other.ParentReadOnlyListInterfaceOfIntProperty)
                      && this.ParentReadOnlyListInterfaceOfStringProperty.IsEqualTo(other.ParentReadOnlyListInterfaceOfStringProperty)
                      && this.ParentReadOnlyListInterfaceOfGuidProperty.IsEqualTo(other.ParentReadOnlyListInterfaceOfGuidProperty)
                      && this.ParentReadOnlyListInterfaceOfDateTimeProperty.IsEqualTo(other.ParentReadOnlyListInterfaceOfDateTimeProperty)
                      && this.ParentReadOnlyListInterfaceOfCustomEnumProperty.IsEqualTo(other.ParentReadOnlyListInterfaceOfCustomEnumProperty)
                      && this.ParentReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty.IsEqualTo(other.ParentReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty)
                      && this.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty.IsEqualTo(other.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty)
                      && this.ParentReadOnlyListInterfaceOfCustomClassProperty.IsEqualTo(other.ParentReadOnlyListInterfaceOfCustomClassProperty)
                      && this.ParentReadOnlyListInterfaceOfCustomBaseClassProperty.IsEqualTo(other.ParentReadOnlyListInterfaceOfCustomBaseClassProperty)
                      && this.ParentReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty.IsEqualTo(other.ParentReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty)
                      && this.Child1ReadOnlyListInterfaceOfBoolProperty.IsEqualTo(other.Child1ReadOnlyListInterfaceOfBoolProperty)
                      && this.Child1ReadOnlyListInterfaceOfIntProperty.IsEqualTo(other.Child1ReadOnlyListInterfaceOfIntProperty)
                      && this.Child1ReadOnlyListInterfaceOfStringProperty.IsEqualTo(other.Child1ReadOnlyListInterfaceOfStringProperty)
                      && this.Child1ReadOnlyListInterfaceOfGuidProperty.IsEqualTo(other.Child1ReadOnlyListInterfaceOfGuidProperty)
                      && this.Child1ReadOnlyListInterfaceOfDateTimeProperty.IsEqualTo(other.Child1ReadOnlyListInterfaceOfDateTimeProperty)
                      && this.Child1ReadOnlyListInterfaceOfCustomEnumProperty.IsEqualTo(other.Child1ReadOnlyListInterfaceOfCustomEnumProperty)
                      && this.Child1ReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty.IsEqualTo(other.Child1ReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty)
                      && this.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty.IsEqualTo(other.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty)
                      && this.Child1ReadOnlyListInterfaceOfCustomClassProperty.IsEqualTo(other.Child1ReadOnlyListInterfaceOfCustomClassProperty)
                      && this.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty.IsEqualTo(other.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty)
                      && this.Child1ReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty.IsEqualTo(other.Child1ReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty);

            return result;
        }

        /// <inheritdoc />
        public override bool Equals(object obj) => this == (obj as ModelAllPrivateSetReadOnlyListChild1);

        /// <inheritdoc />
        public override int GetHashCode() => HashCodeHelper.Initialize()
            .Hash(this.ParentReadOnlyListInterfaceOfBoolProperty)
            .Hash(this.ParentReadOnlyListInterfaceOfIntProperty)
            .Hash(this.ParentReadOnlyListInterfaceOfStringProperty)
            .Hash(this.ParentReadOnlyListInterfaceOfGuidProperty)
            .Hash(this.ParentReadOnlyListInterfaceOfDateTimeProperty)
            .Hash(this.ParentReadOnlyListInterfaceOfCustomEnumProperty)
            .Hash(this.ParentReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty)
            .Hash(this.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty)
            .Hash(this.ParentReadOnlyListInterfaceOfCustomClassProperty)
            .Hash(this.ParentReadOnlyListInterfaceOfCustomBaseClassProperty)
            .Hash(this.ParentReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty)
            .Hash(this.Child1ReadOnlyListInterfaceOfBoolProperty)
            .Hash(this.Child1ReadOnlyListInterfaceOfIntProperty)
            .Hash(this.Child1ReadOnlyListInterfaceOfStringProperty)
            .Hash(this.Child1ReadOnlyListInterfaceOfGuidProperty)
            .Hash(this.Child1ReadOnlyListInterfaceOfDateTimeProperty)
            .Hash(this.Child1ReadOnlyListInterfaceOfCustomEnumProperty)
            .Hash(this.Child1ReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty)
            .Hash(this.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty)
            .Hash(this.Child1ReadOnlyListInterfaceOfCustomClassProperty)
            .Hash(this.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty)
            .Hash(this.Child1ReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty)
            .Value;

        /// <inheritdoc />
        public new ModelAllPrivateSetReadOnlyListChild1 DeepClone() => (ModelAllPrivateSetReadOnlyListChild1)this.DeepCloneInternal();

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPrivateSetReadOnlyListParent DeepCloneWithParentReadOnlyListInterfaceOfBoolProperty(IReadOnlyList<bool> parentReadOnlyListInterfaceOfBoolProperty)
        {
            var result = new ModelAllPrivateSetReadOnlyListChild1(
                                 parentReadOnlyListInterfaceOfBoolProperty,
                                 this.ParentReadOnlyListInterfaceOfIntProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfGuidProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfBoolProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfIntProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfGuidProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone());

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPrivateSetReadOnlyListParent DeepCloneWithParentReadOnlyListInterfaceOfIntProperty(IReadOnlyList<int> parentReadOnlyListInterfaceOfIntProperty)
        {
            var result = new ModelAllPrivateSetReadOnlyListChild1(
                                 this.ParentReadOnlyListInterfaceOfBoolProperty?.DeepClone(),
                                 parentReadOnlyListInterfaceOfIntProperty,
                                 this.ParentReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfGuidProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfBoolProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfIntProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfGuidProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone());

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPrivateSetReadOnlyListParent DeepCloneWithParentReadOnlyListInterfaceOfStringProperty(IReadOnlyList<string> parentReadOnlyListInterfaceOfStringProperty)
        {
            var result = new ModelAllPrivateSetReadOnlyListChild1(
                                 this.ParentReadOnlyListInterfaceOfBoolProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfIntProperty?.DeepClone(),
                                 parentReadOnlyListInterfaceOfStringProperty,
                                 this.ParentReadOnlyListInterfaceOfGuidProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfBoolProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfIntProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfGuidProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone());

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPrivateSetReadOnlyListParent DeepCloneWithParentReadOnlyListInterfaceOfGuidProperty(IReadOnlyList<Guid> parentReadOnlyListInterfaceOfGuidProperty)
        {
            var result = new ModelAllPrivateSetReadOnlyListChild1(
                                 this.ParentReadOnlyListInterfaceOfBoolProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfIntProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 parentReadOnlyListInterfaceOfGuidProperty,
                                 this.ParentReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfBoolProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfIntProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfGuidProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone());

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPrivateSetReadOnlyListParent DeepCloneWithParentReadOnlyListInterfaceOfDateTimeProperty(IReadOnlyList<DateTime> parentReadOnlyListInterfaceOfDateTimeProperty)
        {
            var result = new ModelAllPrivateSetReadOnlyListChild1(
                                 this.ParentReadOnlyListInterfaceOfBoolProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfIntProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfGuidProperty?.DeepClone(),
                                 parentReadOnlyListInterfaceOfDateTimeProperty,
                                 this.ParentReadOnlyListInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfBoolProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfIntProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfGuidProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone());

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPrivateSetReadOnlyListParent DeepCloneWithParentReadOnlyListInterfaceOfCustomEnumProperty(IReadOnlyList<CustomEnum> parentReadOnlyListInterfaceOfCustomEnumProperty)
        {
            var result = new ModelAllPrivateSetReadOnlyListChild1(
                                 this.ParentReadOnlyListInterfaceOfBoolProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfIntProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfGuidProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 parentReadOnlyListInterfaceOfCustomEnumProperty,
                                 this.ParentReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfBoolProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfIntProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfGuidProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone());

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPrivateSetReadOnlyListParent DeepCloneWithParentReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty(IReadOnlyList<CustomEnumValidatedNotDefault> parentReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty)
        {
            var result = new ModelAllPrivateSetReadOnlyListChild1(
                                 this.ParentReadOnlyListInterfaceOfBoolProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfIntProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfGuidProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomEnumProperty?.DeepClone(),
                                 parentReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty,
                                 this.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfBoolProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfIntProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfGuidProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone());

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPrivateSetReadOnlyListParent DeepCloneWithParentReadOnlyListInterfaceOfCustomFlagsEnumProperty(IReadOnlyList<CustomFlagsEnum> parentReadOnlyListInterfaceOfCustomFlagsEnumProperty)
        {
            var result = new ModelAllPrivateSetReadOnlyListChild1(
                                 this.ParentReadOnlyListInterfaceOfBoolProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfIntProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfGuidProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 parentReadOnlyListInterfaceOfCustomFlagsEnumProperty,
                                 this.ParentReadOnlyListInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfBoolProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfIntProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfGuidProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone());

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPrivateSetReadOnlyListParent DeepCloneWithParentReadOnlyListInterfaceOfCustomClassProperty(IReadOnlyList<CustomClass> parentReadOnlyListInterfaceOfCustomClassProperty)
        {
            var result = new ModelAllPrivateSetReadOnlyListChild1(
                                 this.ParentReadOnlyListInterfaceOfBoolProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfIntProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfGuidProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 parentReadOnlyListInterfaceOfCustomClassProperty,
                                 this.ParentReadOnlyListInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfBoolProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfIntProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfGuidProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone());

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPrivateSetReadOnlyListParent DeepCloneWithParentReadOnlyListInterfaceOfCustomBaseClassProperty(IReadOnlyList<CustomBaseClass> parentReadOnlyListInterfaceOfCustomBaseClassProperty)
        {
            var result = new ModelAllPrivateSetReadOnlyListChild1(
                                 this.ParentReadOnlyListInterfaceOfBoolProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfIntProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfGuidProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomClassProperty?.DeepClone(),
                                 parentReadOnlyListInterfaceOfCustomBaseClassProperty,
                                 this.ParentReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfBoolProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfIntProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfGuidProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone());

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override ModelAllPrivateSetReadOnlyListParent DeepCloneWithParentReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty(IReadOnlyList<CustomGenericClass<CustomClass>> parentReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty)
        {
            var result = new ModelAllPrivateSetReadOnlyListChild1(
                                 this.ParentReadOnlyListInterfaceOfBoolProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfIntProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfGuidProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 parentReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty,
                                 this.Child1ReadOnlyListInterfaceOfBoolProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfIntProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfGuidProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ReadOnlyListInterfaceOfBoolProperty" />.
        /// </summary>
        /// <param name="child1ReadOnlyListInterfaceOfBoolProperty">The new <see cref="Child1ReadOnlyListInterfaceOfBoolProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPrivateSetReadOnlyListChild1" /> using the specified <paramref name="child1ReadOnlyListInterfaceOfBoolProperty" /> for <see cref="Child1ReadOnlyListInterfaceOfBoolProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPrivateSetReadOnlyListChild1 DeepCloneWithChild1ReadOnlyListInterfaceOfBoolProperty(IReadOnlyList<bool> child1ReadOnlyListInterfaceOfBoolProperty)
        {
            var result = new ModelAllPrivateSetReadOnlyListChild1(
                                 this.ParentReadOnlyListInterfaceOfBoolProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfIntProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfGuidProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 child1ReadOnlyListInterfaceOfBoolProperty,
                                 this.Child1ReadOnlyListInterfaceOfIntProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfGuidProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ReadOnlyListInterfaceOfIntProperty" />.
        /// </summary>
        /// <param name="child1ReadOnlyListInterfaceOfIntProperty">The new <see cref="Child1ReadOnlyListInterfaceOfIntProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPrivateSetReadOnlyListChild1" /> using the specified <paramref name="child1ReadOnlyListInterfaceOfIntProperty" /> for <see cref="Child1ReadOnlyListInterfaceOfIntProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPrivateSetReadOnlyListChild1 DeepCloneWithChild1ReadOnlyListInterfaceOfIntProperty(IReadOnlyList<int> child1ReadOnlyListInterfaceOfIntProperty)
        {
            var result = new ModelAllPrivateSetReadOnlyListChild1(
                                 this.ParentReadOnlyListInterfaceOfBoolProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfIntProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfGuidProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfBoolProperty?.DeepClone(),
                                 child1ReadOnlyListInterfaceOfIntProperty,
                                 this.Child1ReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfGuidProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ReadOnlyListInterfaceOfStringProperty" />.
        /// </summary>
        /// <param name="child1ReadOnlyListInterfaceOfStringProperty">The new <see cref="Child1ReadOnlyListInterfaceOfStringProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPrivateSetReadOnlyListChild1" /> using the specified <paramref name="child1ReadOnlyListInterfaceOfStringProperty" /> for <see cref="Child1ReadOnlyListInterfaceOfStringProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPrivateSetReadOnlyListChild1 DeepCloneWithChild1ReadOnlyListInterfaceOfStringProperty(IReadOnlyList<string> child1ReadOnlyListInterfaceOfStringProperty)
        {
            var result = new ModelAllPrivateSetReadOnlyListChild1(
                                 this.ParentReadOnlyListInterfaceOfBoolProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfIntProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfGuidProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfBoolProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfIntProperty?.DeepClone(),
                                 child1ReadOnlyListInterfaceOfStringProperty,
                                 this.Child1ReadOnlyListInterfaceOfGuidProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ReadOnlyListInterfaceOfGuidProperty" />.
        /// </summary>
        /// <param name="child1ReadOnlyListInterfaceOfGuidProperty">The new <see cref="Child1ReadOnlyListInterfaceOfGuidProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPrivateSetReadOnlyListChild1" /> using the specified <paramref name="child1ReadOnlyListInterfaceOfGuidProperty" /> for <see cref="Child1ReadOnlyListInterfaceOfGuidProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPrivateSetReadOnlyListChild1 DeepCloneWithChild1ReadOnlyListInterfaceOfGuidProperty(IReadOnlyList<Guid> child1ReadOnlyListInterfaceOfGuidProperty)
        {
            var result = new ModelAllPrivateSetReadOnlyListChild1(
                                 this.ParentReadOnlyListInterfaceOfBoolProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfIntProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfGuidProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfBoolProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfIntProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 child1ReadOnlyListInterfaceOfGuidProperty,
                                 this.Child1ReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ReadOnlyListInterfaceOfDateTimeProperty" />.
        /// </summary>
        /// <param name="child1ReadOnlyListInterfaceOfDateTimeProperty">The new <see cref="Child1ReadOnlyListInterfaceOfDateTimeProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPrivateSetReadOnlyListChild1" /> using the specified <paramref name="child1ReadOnlyListInterfaceOfDateTimeProperty" /> for <see cref="Child1ReadOnlyListInterfaceOfDateTimeProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPrivateSetReadOnlyListChild1 DeepCloneWithChild1ReadOnlyListInterfaceOfDateTimeProperty(IReadOnlyList<DateTime> child1ReadOnlyListInterfaceOfDateTimeProperty)
        {
            var result = new ModelAllPrivateSetReadOnlyListChild1(
                                 this.ParentReadOnlyListInterfaceOfBoolProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfIntProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfGuidProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfBoolProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfIntProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfGuidProperty?.DeepClone(),
                                 child1ReadOnlyListInterfaceOfDateTimeProperty,
                                 this.Child1ReadOnlyListInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ReadOnlyListInterfaceOfCustomEnumProperty" />.
        /// </summary>
        /// <param name="child1ReadOnlyListInterfaceOfCustomEnumProperty">The new <see cref="Child1ReadOnlyListInterfaceOfCustomEnumProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPrivateSetReadOnlyListChild1" /> using the specified <paramref name="child1ReadOnlyListInterfaceOfCustomEnumProperty" /> for <see cref="Child1ReadOnlyListInterfaceOfCustomEnumProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPrivateSetReadOnlyListChild1 DeepCloneWithChild1ReadOnlyListInterfaceOfCustomEnumProperty(IReadOnlyList<CustomEnum> child1ReadOnlyListInterfaceOfCustomEnumProperty)
        {
            var result = new ModelAllPrivateSetReadOnlyListChild1(
                                 this.ParentReadOnlyListInterfaceOfBoolProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfIntProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfGuidProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfBoolProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfIntProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfGuidProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 child1ReadOnlyListInterfaceOfCustomEnumProperty,
                                 this.Child1ReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty" />.
        /// </summary>
        /// <param name="child1ReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty">The new <see cref="Child1ReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPrivateSetReadOnlyListChild1" /> using the specified <paramref name="child1ReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty" /> for <see cref="Child1ReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPrivateSetReadOnlyListChild1 DeepCloneWithChild1ReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty(IReadOnlyList<CustomEnumValidatedNotDefault> child1ReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty)
        {
            var result = new ModelAllPrivateSetReadOnlyListChild1(
                                 this.ParentReadOnlyListInterfaceOfBoolProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfIntProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfGuidProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfBoolProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfIntProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfGuidProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomEnumProperty?.DeepClone(),
                                 child1ReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty,
                                 this.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty" />.
        /// </summary>
        /// <param name="child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty">The new <see cref="Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPrivateSetReadOnlyListChild1" /> using the specified <paramref name="child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty" /> for <see cref="Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPrivateSetReadOnlyListChild1 DeepCloneWithChild1ReadOnlyListInterfaceOfCustomFlagsEnumProperty(IReadOnlyList<CustomFlagsEnum> child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty)
        {
            var result = new ModelAllPrivateSetReadOnlyListChild1(
                                 this.ParentReadOnlyListInterfaceOfBoolProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfIntProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfGuidProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfBoolProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfIntProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfGuidProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty,
                                 this.Child1ReadOnlyListInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ReadOnlyListInterfaceOfCustomClassProperty" />.
        /// </summary>
        /// <param name="child1ReadOnlyListInterfaceOfCustomClassProperty">The new <see cref="Child1ReadOnlyListInterfaceOfCustomClassProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPrivateSetReadOnlyListChild1" /> using the specified <paramref name="child1ReadOnlyListInterfaceOfCustomClassProperty" /> for <see cref="Child1ReadOnlyListInterfaceOfCustomClassProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPrivateSetReadOnlyListChild1 DeepCloneWithChild1ReadOnlyListInterfaceOfCustomClassProperty(IReadOnlyList<CustomClass> child1ReadOnlyListInterfaceOfCustomClassProperty)
        {
            var result = new ModelAllPrivateSetReadOnlyListChild1(
                                 this.ParentReadOnlyListInterfaceOfBoolProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfIntProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfGuidProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfBoolProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfIntProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfGuidProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 child1ReadOnlyListInterfaceOfCustomClassProperty,
                                 this.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ReadOnlyListInterfaceOfCustomBaseClassProperty" />.
        /// </summary>
        /// <param name="child1ReadOnlyListInterfaceOfCustomBaseClassProperty">The new <see cref="Child1ReadOnlyListInterfaceOfCustomBaseClassProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPrivateSetReadOnlyListChild1" /> using the specified <paramref name="child1ReadOnlyListInterfaceOfCustomBaseClassProperty" /> for <see cref="Child1ReadOnlyListInterfaceOfCustomBaseClassProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPrivateSetReadOnlyListChild1 DeepCloneWithChild1ReadOnlyListInterfaceOfCustomBaseClassProperty(IReadOnlyList<CustomBaseClass> child1ReadOnlyListInterfaceOfCustomBaseClassProperty)
        {
            var result = new ModelAllPrivateSetReadOnlyListChild1(
                                 this.ParentReadOnlyListInterfaceOfBoolProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfIntProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfGuidProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfBoolProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfIntProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfGuidProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomClassProperty?.DeepClone(),
                                 child1ReadOnlyListInterfaceOfCustomBaseClassProperty,
                                 this.Child1ReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Child1ReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty" />.
        /// </summary>
        /// <param name="child1ReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty">The new <see cref="Child1ReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelAllPrivateSetReadOnlyListChild1" /> using the specified <paramref name="child1ReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty" /> for <see cref="Child1ReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelAllPrivateSetReadOnlyListChild1 DeepCloneWithChild1ReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty(IReadOnlyList<CustomGenericClass<CustomClass>> child1ReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty)
        {
            var result = new ModelAllPrivateSetReadOnlyListChild1(
                                 this.ParentReadOnlyListInterfaceOfBoolProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfIntProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfGuidProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfBoolProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfIntProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfGuidProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 child1ReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty);

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        protected override ModelAllPrivateSetReadOnlyListParent DeepCloneInternal()
        {
            var result = new ModelAllPrivateSetReadOnlyListChild1(
                                 this.ParentReadOnlyListInterfaceOfBoolProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfIntProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfGuidProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.ParentReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfBoolProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfIntProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfStringProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfGuidProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfDateTimeProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomEnumProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty?.DeepClone(),
                                 this.Child1ReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty?.DeepClone());

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        public override string ToString()
        {
            var result = Invariant($"OBeautifulCode.CodeGen.ModelObject.Test.ModelAllPrivateSetReadOnlyListChild1: ParentReadOnlyListInterfaceOfBoolProperty = {this.ParentReadOnlyListInterfaceOfBoolProperty?.ToString() ?? "<null>"}, ParentReadOnlyListInterfaceOfIntProperty = {this.ParentReadOnlyListInterfaceOfIntProperty?.ToString() ?? "<null>"}, ParentReadOnlyListInterfaceOfStringProperty = {this.ParentReadOnlyListInterfaceOfStringProperty?.ToString() ?? "<null>"}, ParentReadOnlyListInterfaceOfGuidProperty = {this.ParentReadOnlyListInterfaceOfGuidProperty?.ToString() ?? "<null>"}, ParentReadOnlyListInterfaceOfDateTimeProperty = {this.ParentReadOnlyListInterfaceOfDateTimeProperty?.ToString() ?? "<null>"}, ParentReadOnlyListInterfaceOfCustomEnumProperty = {this.ParentReadOnlyListInterfaceOfCustomEnumProperty?.ToString() ?? "<null>"}, ParentReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty = {this.ParentReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty?.ToString() ?? "<null>"}, ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty = {this.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty?.ToString() ?? "<null>"}, ParentReadOnlyListInterfaceOfCustomClassProperty = {this.ParentReadOnlyListInterfaceOfCustomClassProperty?.ToString() ?? "<null>"}, ParentReadOnlyListInterfaceOfCustomBaseClassProperty = {this.ParentReadOnlyListInterfaceOfCustomBaseClassProperty?.ToString() ?? "<null>"}, ParentReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty = {this.ParentReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty?.ToString() ?? "<null>"}, Child1ReadOnlyListInterfaceOfBoolProperty = {this.Child1ReadOnlyListInterfaceOfBoolProperty?.ToString() ?? "<null>"}, Child1ReadOnlyListInterfaceOfIntProperty = {this.Child1ReadOnlyListInterfaceOfIntProperty?.ToString() ?? "<null>"}, Child1ReadOnlyListInterfaceOfStringProperty = {this.Child1ReadOnlyListInterfaceOfStringProperty?.ToString() ?? "<null>"}, Child1ReadOnlyListInterfaceOfGuidProperty = {this.Child1ReadOnlyListInterfaceOfGuidProperty?.ToString() ?? "<null>"}, Child1ReadOnlyListInterfaceOfDateTimeProperty = {this.Child1ReadOnlyListInterfaceOfDateTimeProperty?.ToString() ?? "<null>"}, Child1ReadOnlyListInterfaceOfCustomEnumProperty = {this.Child1ReadOnlyListInterfaceOfCustomEnumProperty?.ToString() ?? "<null>"}, Child1ReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty = {this.Child1ReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty?.ToString() ?? "<null>"}, Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty = {this.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty?.ToString() ?? "<null>"}, Child1ReadOnlyListInterfaceOfCustomClassProperty = {this.Child1ReadOnlyListInterfaceOfCustomClassProperty?.ToString() ?? "<null>"}, Child1ReadOnlyListInterfaceOfCustomBaseClassProperty = {this.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty?.ToString() ?? "<null>"}, Child1ReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty = {this.Child1ReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty?.ToString() ?? "<null>"}.");

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        public override IReadOnlyList<ValidationFailure> GetValidationFailures(
            ValidationOptions options = null,
            PropertyPathTracker propertyPathTracker = null)
        {
            options = options ?? new ValidationOptions();
            propertyPathTracker = propertyPathTracker ?? new PropertyPathTracker();

            bool stopOnFirstObjectWithFailures;
            switch (options.ValidateUntil)
            {
                case ValidateUntil.FullyTraversed:
                    stopOnFirstObjectWithFailures = false;
                    break;
                case ValidateUntil.FirstInvalidObject:
                    stopOnFirstObjectWithFailures = true;
                    break;
                default:
                    throw new NotSupportedException(Invariant($"This {nameof(ValidateUntil)} is not supported: {options.ValidateUntil}."));
            }

            bool validateProperties;
            switch (options.ValidationScope)
            {
                case ValidationScope.SelfAndProperties:
                    validateProperties = true;
                    break;
                case ValidationScope.SelfOnly:
                    validateProperties = false;
                    break;
                default:
                    throw new NotSupportedException(Invariant($"This {nameof(ValidationScope)} is not supported: {options.ValidationScope}."));
            }

            var result = new List<ValidationFailure>();

            void ValidateProperties()
            {
                IReadOnlyList<ValidationFailure> localValidationFailures;

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.ParentReadOnlyListInterfaceOfBoolProperty, options, propertyPathTracker, nameof(this.ParentReadOnlyListInterfaceOfBoolProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.ParentReadOnlyListInterfaceOfIntProperty, options, propertyPathTracker, nameof(this.ParentReadOnlyListInterfaceOfIntProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.ParentReadOnlyListInterfaceOfStringProperty, options, propertyPathTracker, nameof(this.ParentReadOnlyListInterfaceOfStringProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.ParentReadOnlyListInterfaceOfGuidProperty, options, propertyPathTracker, nameof(this.ParentReadOnlyListInterfaceOfGuidProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.ParentReadOnlyListInterfaceOfDateTimeProperty, options, propertyPathTracker, nameof(this.ParentReadOnlyListInterfaceOfDateTimeProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.ParentReadOnlyListInterfaceOfCustomEnumProperty, options, propertyPathTracker, nameof(this.ParentReadOnlyListInterfaceOfCustomEnumProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.ParentReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty, options, propertyPathTracker, nameof(this.ParentReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty, options, propertyPathTracker, nameof(this.ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.ParentReadOnlyListInterfaceOfCustomClassProperty, options, propertyPathTracker, nameof(this.ParentReadOnlyListInterfaceOfCustomClassProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.ParentReadOnlyListInterfaceOfCustomBaseClassProperty, options, propertyPathTracker, nameof(this.ParentReadOnlyListInterfaceOfCustomBaseClassProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.ParentReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty, options, propertyPathTracker, nameof(this.ParentReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.Child1ReadOnlyListInterfaceOfBoolProperty, options, propertyPathTracker, nameof(this.Child1ReadOnlyListInterfaceOfBoolProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.Child1ReadOnlyListInterfaceOfIntProperty, options, propertyPathTracker, nameof(this.Child1ReadOnlyListInterfaceOfIntProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.Child1ReadOnlyListInterfaceOfStringProperty, options, propertyPathTracker, nameof(this.Child1ReadOnlyListInterfaceOfStringProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.Child1ReadOnlyListInterfaceOfGuidProperty, options, propertyPathTracker, nameof(this.Child1ReadOnlyListInterfaceOfGuidProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.Child1ReadOnlyListInterfaceOfDateTimeProperty, options, propertyPathTracker, nameof(this.Child1ReadOnlyListInterfaceOfDateTimeProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.Child1ReadOnlyListInterfaceOfCustomEnumProperty, options, propertyPathTracker, nameof(this.Child1ReadOnlyListInterfaceOfCustomEnumProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.Child1ReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty, options, propertyPathTracker, nameof(this.Child1ReadOnlyListInterfaceOfCustomEnumValidatedNotDefaultProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty, options, propertyPathTracker, nameof(this.Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.Child1ReadOnlyListInterfaceOfCustomClassProperty, options, propertyPathTracker, nameof(this.Child1ReadOnlyListInterfaceOfCustomClassProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty, options, propertyPathTracker, nameof(this.Child1ReadOnlyListInterfaceOfCustomBaseClassProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }

                localValidationFailures = ValidatableExtensions.GetValidationFailures(this.Child1ReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty, options, propertyPathTracker, nameof(this.Child1ReadOnlyListInterfaceOfCustomGenericClassOfCustomClassProperty));
                result.AddRange(localValidationFailures);
                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return;
                }
            }

            void ValidateSelf()
            {
                var segmentSeparator = propertyPathTracker.HasSegments ? propertyPathTracker.SegmentSeparator : string.Empty;

                var selfValidationFailures = (this.GetSelfValidationFailures() ?? new SelfValidationFailure[0])
                    .Where(_ => _ != null)
                    .Select(_ =>
                    {
                        var propertyNames = _.PropertyNames.Count > 1
                            ? Invariant($"({string.Join("|", _.PropertyNames)})")
                            : _.PropertyNames.Single();

                        return new ValidationFailure(
                            this.GetType().ToStringReadable(),
                            Invariant($"{propertyPathTracker.FullPath}{segmentSeparator}{propertyNames}"),
                            _.Message);
                    })
                    .ToList();

                result.AddRange(selfValidationFailures);
            }

            if (options.ValidationOrder == ValidationOrder.PropertiesThenSelf)
            {
                if (validateProperties)
                {
                    ValidateProperties();
                }

                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return result;
                }

                ValidateSelf();
            }
            else if (options.ValidationOrder == ValidationOrder.SelfThenProperties)
            {
                ValidateSelf();

                if (stopOnFirstObjectWithFailures && result.Any())
                {
                    return result;
                }

                if (validateProperties)
                {
                    ValidateProperties();
                }
            }
            else
            {
                throw new NotSupportedException(Invariant($"This {nameof(ValidationOrder)} is not supported: {options.ValidationOrder}."));
            }

            return result;
        }

        /// <inheritdoc />
        public override IReadOnlyList<SelfValidationFailure> GetSelfValidationFailures()
        {
            var result = base.GetSelfValidationFailures();

            return result;
        }
    }
}