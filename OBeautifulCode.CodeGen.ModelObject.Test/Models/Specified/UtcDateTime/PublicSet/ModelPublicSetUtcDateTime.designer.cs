// --------------------------------------------------------------------------------------------------------------------
// <auto-generated>
//   Generated using OBeautifulCode.CodeGen.ModelObject (1.0.0.0)
// </auto-generated>
// --------------------------------------------------------------------------------------------------------------------

namespace OBeautifulCode.CodeGen.ModelObject.Test
{
    using global::System;
    using global::System.CodeDom.Compiler;
    using global::System.Collections.Concurrent;
    using global::System.Collections.Generic;
    using global::System.Collections.ObjectModel;
    using global::System.Diagnostics.CodeAnalysis;
    using global::System.Globalization;
    using global::System.Linq;

    using global::OBeautifulCode.Cloning.Recipes;
    using global::OBeautifulCode.Equality.Recipes;
    using global::OBeautifulCode.Type;
    using global::OBeautifulCode.Type.Recipes;

    using static global::System.FormattableString;

    [Serializable]
    public partial class ModelPublicSetUtcDateTime : IModel<ModelPublicSetUtcDateTime>
    {
        /// <summary>
        /// Determines whether two objects of type <see cref="ModelPublicSetUtcDateTime"/> are equal.
        /// </summary>
        /// <param name="left">The object to the left of the equality operator.</param>
        /// <param name="right">The object to the right of the equality operator.</param>
        /// <returns>true if the two items are equal; otherwise false.</returns>
        public static bool operator ==(ModelPublicSetUtcDateTime left, ModelPublicSetUtcDateTime right)
        {
            if (ReferenceEquals(left, right))
            {
                return true;
            }

            if (ReferenceEquals(left, null) || ReferenceEquals(right, null))
            {
                return false;
            }

            var result = left.Equals(right);

            return result;
        }

        /// <summary>
        /// Determines whether two objects of type <see cref="ModelPublicSetUtcDateTime"/> are not equal.
        /// </summary>
        /// <param name="left">The object to the left of the equality operator.</param>
        /// <param name="right">The object to the right of the equality operator.</param>
        /// <returns>true if the two items are not equal; otherwise false.</returns>
        public static bool operator !=(ModelPublicSetUtcDateTime left, ModelPublicSetUtcDateTime right) => !(left == right);

        /// <inheritdoc />
        public bool Equals(ModelPublicSetUtcDateTime other)
        {
            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (ReferenceEquals(other, null))
            {
                return false;
            }

            var result = this.Item1.IsEqualTo(other.Item1)
                      && this.Item2.IsEqualTo(other.Item2)
                      && this.Item3Utc.IsEqualTo(other.Item3Utc)
                      && this.Item4Utc.IsEqualTo(other.Item4Utc)
                      && this.Item5Utc.IsEqualTo(other.Item5Utc)
                      && this.Item6Utc.IsEqualTo(other.Item6Utc)
                      && this.Item7.IsEqualTo(other.Item7)
                      && this.Item8.IsEqualTo(other.Item8);

            return result;
        }

        /// <inheritdoc />
        public override bool Equals(object obj) => this == (obj as ModelPublicSetUtcDateTime);

        /// <inheritdoc />
        public override int GetHashCode() => HashCodeHelper.Initialize()
            .Hash(this.Item1)
            .Hash(this.Item2)
            .Hash(this.Item3Utc)
            .Hash(this.Item4Utc)
            .Hash(this.Item5Utc)
            .Hash(this.Item6Utc)
            .Hash(this.Item7)
            .Hash(this.Item8)
            .Value;

        /// <inheritdoc />
        public object Clone() => this.DeepClone();

        /// <inheritdoc />
        public ModelPublicSetUtcDateTime DeepClone()
        {
            var result = new ModelPublicSetUtcDateTime
                             {
                                 Item1    = this.Item1.DeepClone(),
                                 Item2    = this.Item2?.DeepClone(),
                                 Item3Utc = this.Item3Utc.DeepClone(),
                                 Item4Utc = this.Item4Utc?.DeepClone(),
                                 Item5Utc = this.Item5Utc?.DeepClone(),
                                 Item6Utc = this.Item6Utc?.DeepClone(),
                                 Item7    = this.Item7?.DeepClone(),
                                 Item8    = this.Item8?.DeepClone(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Item1" />.
        /// </summary>
        /// <param name="item1">The new <see cref="Item1" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelPublicSetUtcDateTime" /> using the specified <paramref name="item1" /> for <see cref="Item1" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelPublicSetUtcDateTime DeepCloneWithItem1(DateTime item1)
        {
            var result = new ModelPublicSetUtcDateTime
                             {
                                 Item1    = item1,
                                 Item2    = this.Item2?.DeepClone(),
                                 Item3Utc = this.Item3Utc.DeepClone(),
                                 Item4Utc = this.Item4Utc?.DeepClone(),
                                 Item5Utc = this.Item5Utc?.DeepClone(),
                                 Item6Utc = this.Item6Utc?.DeepClone(),
                                 Item7    = this.Item7?.DeepClone(),
                                 Item8    = this.Item8?.DeepClone(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Item2" />.
        /// </summary>
        /// <param name="item2">The new <see cref="Item2" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelPublicSetUtcDateTime" /> using the specified <paramref name="item2" /> for <see cref="Item2" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelPublicSetUtcDateTime DeepCloneWithItem2(DateTime? item2)
        {
            var result = new ModelPublicSetUtcDateTime
                             {
                                 Item1    = this.Item1.DeepClone(),
                                 Item2    = item2,
                                 Item3Utc = this.Item3Utc.DeepClone(),
                                 Item4Utc = this.Item4Utc?.DeepClone(),
                                 Item5Utc = this.Item5Utc?.DeepClone(),
                                 Item6Utc = this.Item6Utc?.DeepClone(),
                                 Item7    = this.Item7?.DeepClone(),
                                 Item8    = this.Item8?.DeepClone(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Item3Utc" />.
        /// </summary>
        /// <param name="item3Utc">The new <see cref="Item3Utc" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelPublicSetUtcDateTime" /> using the specified <paramref name="item3Utc" /> for <see cref="Item3Utc" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelPublicSetUtcDateTime DeepCloneWithItem3Utc(DateTime item3Utc)
        {
            var result = new ModelPublicSetUtcDateTime
                             {
                                 Item1    = this.Item1.DeepClone(),
                                 Item2    = this.Item2?.DeepClone(),
                                 Item3Utc = item3Utc,
                                 Item4Utc = this.Item4Utc?.DeepClone(),
                                 Item5Utc = this.Item5Utc?.DeepClone(),
                                 Item6Utc = this.Item6Utc?.DeepClone(),
                                 Item7    = this.Item7?.DeepClone(),
                                 Item8    = this.Item8?.DeepClone(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Item4Utc" />.
        /// </summary>
        /// <param name="item4Utc">The new <see cref="Item4Utc" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelPublicSetUtcDateTime" /> using the specified <paramref name="item4Utc" /> for <see cref="Item4Utc" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelPublicSetUtcDateTime DeepCloneWithItem4Utc(DateTime? item4Utc)
        {
            var result = new ModelPublicSetUtcDateTime
                             {
                                 Item1    = this.Item1.DeepClone(),
                                 Item2    = this.Item2?.DeepClone(),
                                 Item3Utc = this.Item3Utc.DeepClone(),
                                 Item4Utc = item4Utc,
                                 Item5Utc = this.Item5Utc?.DeepClone(),
                                 Item6Utc = this.Item6Utc?.DeepClone(),
                                 Item7    = this.Item7?.DeepClone(),
                                 Item8    = this.Item8?.DeepClone(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Item5Utc" />.
        /// </summary>
        /// <param name="item5Utc">The new <see cref="Item5Utc" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelPublicSetUtcDateTime" /> using the specified <paramref name="item5Utc" /> for <see cref="Item5Utc" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelPublicSetUtcDateTime DeepCloneWithItem5Utc(IReadOnlyCollection<DateTime> item5Utc)
        {
            var result = new ModelPublicSetUtcDateTime
                             {
                                 Item1    = this.Item1.DeepClone(),
                                 Item2    = this.Item2?.DeepClone(),
                                 Item3Utc = this.Item3Utc.DeepClone(),
                                 Item4Utc = this.Item4Utc?.DeepClone(),
                                 Item5Utc = item5Utc,
                                 Item6Utc = this.Item6Utc?.DeepClone(),
                                 Item7    = this.Item7?.DeepClone(),
                                 Item8    = this.Item8?.DeepClone(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Item6Utc" />.
        /// </summary>
        /// <param name="item6Utc">The new <see cref="Item6Utc" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelPublicSetUtcDateTime" /> using the specified <paramref name="item6Utc" /> for <see cref="Item6Utc" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelPublicSetUtcDateTime DeepCloneWithItem6Utc(IReadOnlyCollection<DateTime?> item6Utc)
        {
            var result = new ModelPublicSetUtcDateTime
                             {
                                 Item1    = this.Item1.DeepClone(),
                                 Item2    = this.Item2?.DeepClone(),
                                 Item3Utc = this.Item3Utc.DeepClone(),
                                 Item4Utc = this.Item4Utc?.DeepClone(),
                                 Item5Utc = this.Item5Utc?.DeepClone(),
                                 Item6Utc = item6Utc,
                                 Item7    = this.Item7?.DeepClone(),
                                 Item8    = this.Item8?.DeepClone(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Item7" />.
        /// </summary>
        /// <param name="item7">The new <see cref="Item7" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelPublicSetUtcDateTime" /> using the specified <paramref name="item7" /> for <see cref="Item7" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelPublicSetUtcDateTime DeepCloneWithItem7(IReadOnlyCollection<DateTime> item7)
        {
            var result = new ModelPublicSetUtcDateTime
                             {
                                 Item1    = this.Item1.DeepClone(),
                                 Item2    = this.Item2?.DeepClone(),
                                 Item3Utc = this.Item3Utc.DeepClone(),
                                 Item4Utc = this.Item4Utc?.DeepClone(),
                                 Item5Utc = this.Item5Utc?.DeepClone(),
                                 Item6Utc = this.Item6Utc?.DeepClone(),
                                 Item7    = item7,
                                 Item8    = this.Item8?.DeepClone(),
                             };

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Item8" />.
        /// </summary>
        /// <param name="item8">The new <see cref="Item8" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ModelPublicSetUtcDateTime" /> using the specified <paramref name="item8" /> for <see cref="Item8" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ModelPublicSetUtcDateTime DeepCloneWithItem8(IReadOnlyCollection<DateTime?> item8)
        {
            var result = new ModelPublicSetUtcDateTime
                             {
                                 Item1    = this.Item1.DeepClone(),
                                 Item2    = this.Item2?.DeepClone(),
                                 Item3Utc = this.Item3Utc.DeepClone(),
                                 Item4Utc = this.Item4Utc?.DeepClone(),
                                 Item5Utc = this.Item5Utc?.DeepClone(),
                                 Item6Utc = this.Item6Utc?.DeepClone(),
                                 Item7    = this.Item7?.DeepClone(),
                                 Item8    = item8,
                             };

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        public override string ToString()
        {
            var result = Invariant($"OBeautifulCode.CodeGen.ModelObject.Test.ModelPublicSetUtcDateTime: Item1 = {this.Item1.ToString(CultureInfo.InvariantCulture) ?? "<null>"}, Item2 = {this.Item2?.ToString(CultureInfo.InvariantCulture) ?? "<null>"}, Item3Utc = {this.Item3Utc.ToString(CultureInfo.InvariantCulture) ?? "<null>"}, Item4Utc = {this.Item4Utc?.ToString(CultureInfo.InvariantCulture) ?? "<null>"}, Item5Utc = {this.Item5Utc?.ToString() ?? "<null>"}, Item6Utc = {this.Item6Utc?.ToString() ?? "<null>"}, Item7 = {this.Item7?.ToString() ?? "<null>"}, Item8 = {this.Item8?.ToString() ?? "<null>"}.");

            return result;
        }
    }
}