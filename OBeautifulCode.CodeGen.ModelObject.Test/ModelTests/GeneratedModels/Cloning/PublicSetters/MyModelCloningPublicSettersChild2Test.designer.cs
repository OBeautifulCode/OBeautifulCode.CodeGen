// --------------------------------------------------------------------------------------------------------------------
// <auto-generated>
//   Generated using OBeautifulCode.CodeGen.ModelObject (1.0.0.0)
// </auto-generated>
// --------------------------------------------------------------------------------------------------------------------

namespace OBeautifulCode.CodeGen.ModelObject.Test.Test
{
    using global::System;
    using global::System.CodeDom.Compiler;
    using global::System.Collections.Concurrent;
    using global::System.Collections.Generic;
    using global::System.Collections.ObjectModel;
    using global::System.Diagnostics.CodeAnalysis;
    using global::System.Globalization;
    using global::System.Linq;
    using global::System.Reflection;

    using global::FakeItEasy;

    using global::OBeautifulCode.Assertion.Recipes;
    using global::OBeautifulCode.AutoFakeItEasy;
    using global::OBeautifulCode.CodeGen.ModelObject.Recipes;
    using global::OBeautifulCode.Equality.Recipes;
    using global::OBeautifulCode.Math.Recipes;
    using global::OBeautifulCode.Representation.System;
    using global::OBeautifulCode.Serialization;
    using global::OBeautifulCode.Serialization.Bson;
    using global::OBeautifulCode.Serialization.Json;
    using global::OBeautifulCode.Type;

    using global::Xunit;

    using static global::System.FormattableString;

    public static partial class MyModelCloningPublicSettersChild2Test
    {
        [SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [SuppressMessage("Microsoft.Naming", "CA1724:TypeNamesShouldNotMatchNamespaces")]
        public static class Structural
        {
            [Fact]
            [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
            [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
            [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
            [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
            [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
            [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
            [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
            [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
            [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
            [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
            [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
            [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
            [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
            public static void MyModelCloningPublicSettersChild2___Should_implement_IDeepCloneable_of_MyModelCloningPublicSettersChild2___When_reflecting()
            {
                // Arrange
                var type = typeof(MyModelCloningPublicSettersChild2);

                var expectedModelMethods = typeof(IDeepCloneable<MyModelCloningPublicSettersChild2>)
                                          .GetMethods(BindingFlags.Public | BindingFlags.Instance | BindingFlags.FlattenHierarchy)
                                          .ToList();

                var expectedModelMethodHashes = expectedModelMethods.Select(_ => _.GetSignatureHash());

                // Act
                var actualInterfaces = type.GetInterfaces();
                var actualModelMethods = type.GetMethods(BindingFlags.Public | BindingFlags.Instance).Where(_ => _.DeclaringType == type).ToList();
                var actualModelMethodHashes = actualModelMethods.Select(_ => _.GetSignatureHash());

                // Assert
                actualInterfaces.AsTest().Must().ContainElement(typeof(IDeepCloneable<MyModelCloningPublicSettersChild2>));
                expectedModelMethodHashes.Except(actualModelMethodHashes).AsTest().Must().BeEmptyEnumerable();
            }

            [Fact]
            [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
            [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
            [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
            [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
            [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
            [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
            [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
            [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
            [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
            [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
            [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
            [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
            [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
            public static void MyModelCloningPublicSettersChild2___Should_be_attributed_with_Serializable____When_reflecting()
            {
                // Arrange
                var type = typeof(MyModelCloningPublicSettersChild2);

                // Act
                var actualAttributes = type.GetCustomAttributes(typeof(SerializableAttribute), false);

                // Assert
                actualAttributes.AsTest().Must().NotBeEmptyEnumerable();
            }
        }

        [SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [SuppressMessage("Microsoft.Naming", "CA1724:TypeNamesShouldNotMatchNamespaces")]
        public static class Cloning
        {
            [Fact]
            [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
            [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
            [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
            [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
            [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
            [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
            [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
            [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
            [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
            [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
            [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
            [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
            [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
            public static void Clone___Should_clone_object___When_called()
            {
                // Arrange
                var systemUnderTest = A.Dummy<MyModelCloningPublicSettersChild2>();

                // Act
                var actual = (MyModelCloningPublicSettersChild2)systemUnderTest.Clone();

                // Assert
                actual.AsTest().Must().BeEqualTo(systemUnderTest);
                actual.AsTest().Must().NotBeSameReferenceAs(systemUnderTest);
            }

            [Fact]
            [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
            [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
            [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
            [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
            [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
            [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
            [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
            [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
            [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
            [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
            [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
            [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
            [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
            public static void DeepClone___Should_deep_clone_object___When_called()
            {
                // Arrange
                var systemUnderTest = A.Dummy<MyModelCloningPublicSettersChild2>();

                // Act
                var actual = systemUnderTest.DeepClone();

                // Assert
                actual.AsTest().Must().BeEqualTo(systemUnderTest);
                actual.AsTest().Must().NotBeSameReferenceAs(systemUnderTest);

                if (systemUnderTest.ParentModelClassProperty == null)
                {
                    actual.ParentModelClassProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentModelClassProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentModelClassProperty);
                }

                if (systemUnderTest.ParentArrayOfBoolProperty == null)
                {
                    actual.ParentArrayOfBoolProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentArrayOfBoolProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentArrayOfBoolProperty);
                }

                if (systemUnderTest.ParentArrayOfIntProperty == null)
                {
                    actual.ParentArrayOfIntProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentArrayOfIntProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentArrayOfIntProperty);
                }

                if (systemUnderTest.ParentArrayOfStringProperty == null)
                {
                    actual.ParentArrayOfStringProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentArrayOfStringProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentArrayOfStringProperty);
                }

                if (systemUnderTest.ParentArrayOfGuidProperty == null)
                {
                    actual.ParentArrayOfGuidProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentArrayOfGuidProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentArrayOfGuidProperty);
                }

                if (systemUnderTest.ParentArrayOfDateTimeProperty == null)
                {
                    actual.ParentArrayOfDateTimeProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentArrayOfDateTimeProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentArrayOfDateTimeProperty);
                }

                if (systemUnderTest.ParentArrayOfModelEnumProperty == null)
                {
                    actual.ParentArrayOfModelEnumProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentArrayOfModelEnumProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentArrayOfModelEnumProperty);
                }

                if (systemUnderTest.ParentArrayOfModelFlagsEnumProperty == null)
                {
                    actual.ParentArrayOfModelFlagsEnumProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentArrayOfModelFlagsEnumProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentArrayOfModelFlagsEnumProperty);
                }

                if (systemUnderTest.ParentArrayOfModelClassProperty == null)
                {
                    actual.ParentArrayOfModelClassProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentArrayOfModelClassProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentArrayOfModelClassProperty);
                }

                if (systemUnderTest.ParentArrayOfNullableBoolProperty == null)
                {
                    actual.ParentArrayOfNullableBoolProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentArrayOfNullableBoolProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentArrayOfNullableBoolProperty);
                }

                if (systemUnderTest.ParentArrayOfNullableIntProperty == null)
                {
                    actual.ParentArrayOfNullableIntProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentArrayOfNullableIntProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentArrayOfNullableIntProperty);
                }

                if (systemUnderTest.ParentArrayOfNullableGuidProperty == null)
                {
                    actual.ParentArrayOfNullableGuidProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentArrayOfNullableGuidProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentArrayOfNullableGuidProperty);
                }

                if (systemUnderTest.ParentArrayOfNullableDateTimeProperty == null)
                {
                    actual.ParentArrayOfNullableDateTimeProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentArrayOfNullableDateTimeProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentArrayOfNullableDateTimeProperty);
                }

                if (systemUnderTest.ParentArrayOfNullableModelEnumProperty == null)
                {
                    actual.ParentArrayOfNullableModelEnumProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentArrayOfNullableModelEnumProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentArrayOfNullableModelEnumProperty);
                }

                if (systemUnderTest.ParentArrayOfNullableModelFlagsEnumProperty == null)
                {
                    actual.ParentArrayOfNullableModelFlagsEnumProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentArrayOfNullableModelFlagsEnumProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentArrayOfNullableModelFlagsEnumProperty);
                }

                if (systemUnderTest.ParentReadOnlyCollectionInterfaceOfBoolProperty == null)
                {
                    actual.ParentReadOnlyCollectionInterfaceOfBoolProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentReadOnlyCollectionInterfaceOfBoolProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentReadOnlyCollectionInterfaceOfBoolProperty);
                }

                if (systemUnderTest.ParentReadOnlyCollectionInterfaceOfIntProperty == null)
                {
                    actual.ParentReadOnlyCollectionInterfaceOfIntProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentReadOnlyCollectionInterfaceOfIntProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentReadOnlyCollectionInterfaceOfIntProperty);
                }

                if (systemUnderTest.ParentReadOnlyCollectionInterfaceOfStringProperty == null)
                {
                    actual.ParentReadOnlyCollectionInterfaceOfStringProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentReadOnlyCollectionInterfaceOfStringProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentReadOnlyCollectionInterfaceOfStringProperty);
                }

                if (systemUnderTest.ParentReadOnlyCollectionInterfaceOfGuidProperty == null)
                {
                    actual.ParentReadOnlyCollectionInterfaceOfGuidProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentReadOnlyCollectionInterfaceOfGuidProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentReadOnlyCollectionInterfaceOfGuidProperty);
                }

                if (systemUnderTest.ParentReadOnlyCollectionInterfaceOfDateTimeProperty == null)
                {
                    actual.ParentReadOnlyCollectionInterfaceOfDateTimeProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentReadOnlyCollectionInterfaceOfDateTimeProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentReadOnlyCollectionInterfaceOfDateTimeProperty);
                }

                if (systemUnderTest.ParentReadOnlyCollectionInterfaceOfModelEnumProperty == null)
                {
                    actual.ParentReadOnlyCollectionInterfaceOfModelEnumProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentReadOnlyCollectionInterfaceOfModelEnumProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentReadOnlyCollectionInterfaceOfModelEnumProperty);
                }

                if (systemUnderTest.ParentReadOnlyCollectionInterfaceOfModelFlagsEnumProperty == null)
                {
                    actual.ParentReadOnlyCollectionInterfaceOfModelFlagsEnumProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentReadOnlyCollectionInterfaceOfModelFlagsEnumProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentReadOnlyCollectionInterfaceOfModelFlagsEnumProperty);
                }

                if (systemUnderTest.ParentReadOnlyCollectionInterfaceOfModelClassProperty == null)
                {
                    actual.ParentReadOnlyCollectionInterfaceOfModelClassProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentReadOnlyCollectionInterfaceOfModelClassProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentReadOnlyCollectionInterfaceOfModelClassProperty);
                }

                if (systemUnderTest.ParentReadOnlyCollectionInterfaceOfNullableBoolProperty == null)
                {
                    actual.ParentReadOnlyCollectionInterfaceOfNullableBoolProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentReadOnlyCollectionInterfaceOfNullableBoolProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentReadOnlyCollectionInterfaceOfNullableBoolProperty);
                }

                if (systemUnderTest.ParentReadOnlyCollectionInterfaceOfNullableIntProperty == null)
                {
                    actual.ParentReadOnlyCollectionInterfaceOfNullableIntProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentReadOnlyCollectionInterfaceOfNullableIntProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentReadOnlyCollectionInterfaceOfNullableIntProperty);
                }

                if (systemUnderTest.ParentReadOnlyCollectionInterfaceOfNullableGuidProperty == null)
                {
                    actual.ParentReadOnlyCollectionInterfaceOfNullableGuidProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentReadOnlyCollectionInterfaceOfNullableGuidProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentReadOnlyCollectionInterfaceOfNullableGuidProperty);
                }

                if (systemUnderTest.ParentReadOnlyCollectionInterfaceOfNullableDateTimeProperty == null)
                {
                    actual.ParentReadOnlyCollectionInterfaceOfNullableDateTimeProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentReadOnlyCollectionInterfaceOfNullableDateTimeProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentReadOnlyCollectionInterfaceOfNullableDateTimeProperty);
                }

                if (systemUnderTest.ParentReadOnlyCollectionInterfaceOfNullableModelEnumProperty == null)
                {
                    actual.ParentReadOnlyCollectionInterfaceOfNullableModelEnumProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentReadOnlyCollectionInterfaceOfNullableModelEnumProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentReadOnlyCollectionInterfaceOfNullableModelEnumProperty);
                }

                if (systemUnderTest.ParentReadOnlyCollectionInterfaceOfNullableModelFlagsEnumProperty == null)
                {
                    actual.ParentReadOnlyCollectionInterfaceOfNullableModelFlagsEnumProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentReadOnlyCollectionInterfaceOfNullableModelFlagsEnumProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentReadOnlyCollectionInterfaceOfNullableModelFlagsEnumProperty);
                }

                if (systemUnderTest.ParentReadOnlyListInterfaceOfBoolProperty == null)
                {
                    actual.ParentReadOnlyListInterfaceOfBoolProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentReadOnlyListInterfaceOfBoolProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentReadOnlyListInterfaceOfBoolProperty);
                }

                if (systemUnderTest.ParentReadOnlyListInterfaceOfIntProperty == null)
                {
                    actual.ParentReadOnlyListInterfaceOfIntProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentReadOnlyListInterfaceOfIntProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentReadOnlyListInterfaceOfIntProperty);
                }

                if (systemUnderTest.ParentReadOnlyListInterfaceOfStringProperty == null)
                {
                    actual.ParentReadOnlyListInterfaceOfStringProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentReadOnlyListInterfaceOfStringProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentReadOnlyListInterfaceOfStringProperty);
                }

                if (systemUnderTest.ParentReadOnlyListInterfaceOfGuidProperty == null)
                {
                    actual.ParentReadOnlyListInterfaceOfGuidProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentReadOnlyListInterfaceOfGuidProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentReadOnlyListInterfaceOfGuidProperty);
                }

                if (systemUnderTest.ParentReadOnlyListInterfaceOfDateTimeProperty == null)
                {
                    actual.ParentReadOnlyListInterfaceOfDateTimeProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentReadOnlyListInterfaceOfDateTimeProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentReadOnlyListInterfaceOfDateTimeProperty);
                }

                if (systemUnderTest.ParentReadOnlyListInterfaceOfModelEnumProperty == null)
                {
                    actual.ParentReadOnlyListInterfaceOfModelEnumProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentReadOnlyListInterfaceOfModelEnumProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentReadOnlyListInterfaceOfModelEnumProperty);
                }

                if (systemUnderTest.ParentReadOnlyListInterfaceOfModelFlagsEnumProperty == null)
                {
                    actual.ParentReadOnlyListInterfaceOfModelFlagsEnumProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentReadOnlyListInterfaceOfModelFlagsEnumProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentReadOnlyListInterfaceOfModelFlagsEnumProperty);
                }

                if (systemUnderTest.ParentReadOnlyListInterfaceOfModelClassProperty == null)
                {
                    actual.ParentReadOnlyListInterfaceOfModelClassProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentReadOnlyListInterfaceOfModelClassProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentReadOnlyListInterfaceOfModelClassProperty);
                }

                if (systemUnderTest.ParentReadOnlyListInterfaceOfNullableBoolProperty == null)
                {
                    actual.ParentReadOnlyListInterfaceOfNullableBoolProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentReadOnlyListInterfaceOfNullableBoolProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentReadOnlyListInterfaceOfNullableBoolProperty);
                }

                if (systemUnderTest.ParentReadOnlyListInterfaceOfNullableIntProperty == null)
                {
                    actual.ParentReadOnlyListInterfaceOfNullableIntProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentReadOnlyListInterfaceOfNullableIntProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentReadOnlyListInterfaceOfNullableIntProperty);
                }

                if (systemUnderTest.ParentReadOnlyListInterfaceOfNullableGuidProperty == null)
                {
                    actual.ParentReadOnlyListInterfaceOfNullableGuidProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentReadOnlyListInterfaceOfNullableGuidProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentReadOnlyListInterfaceOfNullableGuidProperty);
                }

                if (systemUnderTest.ParentReadOnlyListInterfaceOfNullableDateTimeProperty == null)
                {
                    actual.ParentReadOnlyListInterfaceOfNullableDateTimeProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentReadOnlyListInterfaceOfNullableDateTimeProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentReadOnlyListInterfaceOfNullableDateTimeProperty);
                }

                if (systemUnderTest.ParentReadOnlyListInterfaceOfNullableModelEnumProperty == null)
                {
                    actual.ParentReadOnlyListInterfaceOfNullableModelEnumProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentReadOnlyListInterfaceOfNullableModelEnumProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentReadOnlyListInterfaceOfNullableModelEnumProperty);
                }

                if (systemUnderTest.ParentReadOnlyListInterfaceOfNullableModelFlagsEnumProperty == null)
                {
                    actual.ParentReadOnlyListInterfaceOfNullableModelFlagsEnumProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentReadOnlyListInterfaceOfNullableModelFlagsEnumProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentReadOnlyListInterfaceOfNullableModelFlagsEnumProperty);
                }

                if (systemUnderTest.ParentReadOnlyDictionaryInterfaceOfBoolProperty == null)
                {
                    actual.ParentReadOnlyDictionaryInterfaceOfBoolProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentReadOnlyDictionaryInterfaceOfBoolProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentReadOnlyDictionaryInterfaceOfBoolProperty);
                }

                if (systemUnderTest.ParentReadOnlyDictionaryInterfaceOfIntProperty == null)
                {
                    actual.ParentReadOnlyDictionaryInterfaceOfIntProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentReadOnlyDictionaryInterfaceOfIntProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentReadOnlyDictionaryInterfaceOfIntProperty);
                }

                if (systemUnderTest.ParentReadOnlyDictionaryInterfaceOfStringProperty == null)
                {
                    actual.ParentReadOnlyDictionaryInterfaceOfStringProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentReadOnlyDictionaryInterfaceOfStringProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentReadOnlyDictionaryInterfaceOfStringProperty);
                }

                if (systemUnderTest.ParentReadOnlyDictionaryInterfaceOfGuidProperty == null)
                {
                    actual.ParentReadOnlyDictionaryInterfaceOfGuidProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentReadOnlyDictionaryInterfaceOfGuidProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentReadOnlyDictionaryInterfaceOfGuidProperty);
                }

                if (systemUnderTest.ParentReadOnlyDictionaryInterfaceOfModelEnumProperty == null)
                {
                    actual.ParentReadOnlyDictionaryInterfaceOfModelEnumProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentReadOnlyDictionaryInterfaceOfModelEnumProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentReadOnlyDictionaryInterfaceOfModelEnumProperty);
                }

                if (systemUnderTest.ParentReadOnlyDictionaryInterfaceOfModelFlagsEnumProperty == null)
                {
                    actual.ParentReadOnlyDictionaryInterfaceOfModelFlagsEnumProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentReadOnlyDictionaryInterfaceOfModelFlagsEnumProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentReadOnlyDictionaryInterfaceOfModelFlagsEnumProperty);
                }

                if (systemUnderTest.ParentReadOnlyDictionaryInterfaceOfModelClassProperty == null)
                {
                    actual.ParentReadOnlyDictionaryInterfaceOfModelClassProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentReadOnlyDictionaryInterfaceOfModelClassProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentReadOnlyDictionaryInterfaceOfModelClassProperty);
                }

                if (systemUnderTest.ParentReadOnlyDictionaryInterfaceOfNullableBoolProperty == null)
                {
                    actual.ParentReadOnlyDictionaryInterfaceOfNullableBoolProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentReadOnlyDictionaryInterfaceOfNullableBoolProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentReadOnlyDictionaryInterfaceOfNullableBoolProperty);
                }

                if (systemUnderTest.ParentReadOnlyDictionaryInterfaceOfNullableIntProperty == null)
                {
                    actual.ParentReadOnlyDictionaryInterfaceOfNullableIntProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentReadOnlyDictionaryInterfaceOfNullableIntProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentReadOnlyDictionaryInterfaceOfNullableIntProperty);
                }

                if (systemUnderTest.ParentReadOnlyDictionaryInterfaceOfNullableGuidProperty == null)
                {
                    actual.ParentReadOnlyDictionaryInterfaceOfNullableGuidProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentReadOnlyDictionaryInterfaceOfNullableGuidProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentReadOnlyDictionaryInterfaceOfNullableGuidProperty);
                }

                if (systemUnderTest.ParentReadOnlyDictionaryInterfaceOfNullableModelEnumProperty == null)
                {
                    actual.ParentReadOnlyDictionaryInterfaceOfNullableModelEnumProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentReadOnlyDictionaryInterfaceOfNullableModelEnumProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentReadOnlyDictionaryInterfaceOfNullableModelEnumProperty);
                }

                if (systemUnderTest.ParentReadOnlyDictionaryInterfaceOfNullableModelFlagsEnumProperty == null)
                {
                    actual.ParentReadOnlyDictionaryInterfaceOfNullableModelFlagsEnumProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentReadOnlyDictionaryInterfaceOfNullableModelFlagsEnumProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentReadOnlyDictionaryInterfaceOfNullableModelFlagsEnumProperty);
                }

                if (systemUnderTest.ParentCollectionInterfaceOfStringProperty == null)
                {
                    actual.ParentCollectionInterfaceOfStringProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentCollectionInterfaceOfStringProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentCollectionInterfaceOfStringProperty);
                }

                if (systemUnderTest.ParentCollectionOfCollectionInterfaceOfStringProperty == null)
                {
                    actual.ParentCollectionOfCollectionInterfaceOfStringProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentCollectionOfCollectionInterfaceOfStringProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentCollectionOfCollectionInterfaceOfStringProperty);
                }

                if (systemUnderTest.ParentListInterfaceOfCollectionInterfaceOfStringProperty == null)
                {
                    actual.ParentListInterfaceOfCollectionInterfaceOfStringProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentListInterfaceOfCollectionInterfaceOfStringProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentListInterfaceOfCollectionInterfaceOfStringProperty);
                }

                if (systemUnderTest.ParentListOfCollectionInterfaceOfStringProperty == null)
                {
                    actual.ParentListOfCollectionInterfaceOfStringProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentListOfCollectionInterfaceOfStringProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentListOfCollectionInterfaceOfStringProperty);
                }

                if (systemUnderTest.ParentReadOnlyCollectionOfCollectionInterfaceOfStringProperty == null)
                {
                    actual.ParentReadOnlyCollectionOfCollectionInterfaceOfStringProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentReadOnlyCollectionOfCollectionInterfaceOfStringProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentReadOnlyCollectionOfCollectionInterfaceOfStringProperty);
                }

                if (systemUnderTest.ParentDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty == null)
                {
                    actual.ParentDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty);
                }

                if (systemUnderTest.ParentDictionaryOfReadOnlyListInterfaceOfDateTimeProperty == null)
                {
                    actual.ParentDictionaryOfReadOnlyListInterfaceOfDateTimeProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentDictionaryOfReadOnlyListInterfaceOfDateTimeProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentDictionaryOfReadOnlyListInterfaceOfDateTimeProperty);
                }

                if (systemUnderTest.ParentReadOnlyDictionaryOfReadOnlyListInterfaceOfDateTimeProperty == null)
                {
                    actual.ParentReadOnlyDictionaryOfReadOnlyListInterfaceOfDateTimeProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentReadOnlyDictionaryOfReadOnlyListInterfaceOfDateTimeProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentReadOnlyDictionaryOfReadOnlyListInterfaceOfDateTimeProperty);
                }

                if (systemUnderTest.ParentConcurrentDictionaryOfReadOnlyListInterfaceOfDateTimeProperty == null)
                {
                    actual.ParentConcurrentDictionaryOfReadOnlyListInterfaceOfDateTimeProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentConcurrentDictionaryOfReadOnlyListInterfaceOfDateTimeProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentConcurrentDictionaryOfReadOnlyListInterfaceOfDateTimeProperty);
                }

                if (systemUnderTest.ParentReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty == null)
                {
                    actual.ParentReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty);
                }

                if (systemUnderTest.ParentReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyDictionaryOfReadOnlyListInterfaceOfDateTimeProperty == null)
                {
                    actual.ParentReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyDictionaryOfReadOnlyListInterfaceOfDateTimeProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.ParentReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyDictionaryOfReadOnlyListInterfaceOfDateTimeProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.ParentReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyDictionaryOfReadOnlyListInterfaceOfDateTimeProperty);
                }

                if (systemUnderTest.Child2ModelClassProperty == null)
                {
                    actual.Child2ModelClassProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ModelClassProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ModelClassProperty);
                }

                if (systemUnderTest.Child2ArrayOfBoolProperty == null)
                {
                    actual.Child2ArrayOfBoolProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ArrayOfBoolProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ArrayOfBoolProperty);
                }

                if (systemUnderTest.Child2ArrayOfIntProperty == null)
                {
                    actual.Child2ArrayOfIntProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ArrayOfIntProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ArrayOfIntProperty);
                }

                if (systemUnderTest.Child2ArrayOfStringProperty == null)
                {
                    actual.Child2ArrayOfStringProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ArrayOfStringProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ArrayOfStringProperty);
                }

                if (systemUnderTest.Child2ArrayOfGuidProperty == null)
                {
                    actual.Child2ArrayOfGuidProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ArrayOfGuidProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ArrayOfGuidProperty);
                }

                if (systemUnderTest.Child2ArrayOfDateTimeProperty == null)
                {
                    actual.Child2ArrayOfDateTimeProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ArrayOfDateTimeProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ArrayOfDateTimeProperty);
                }

                if (systemUnderTest.Child2ArrayOfModelEnumProperty == null)
                {
                    actual.Child2ArrayOfModelEnumProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ArrayOfModelEnumProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ArrayOfModelEnumProperty);
                }

                if (systemUnderTest.Child2ArrayOfModelFlagsEnumProperty == null)
                {
                    actual.Child2ArrayOfModelFlagsEnumProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ArrayOfModelFlagsEnumProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ArrayOfModelFlagsEnumProperty);
                }

                if (systemUnderTest.Child2ArrayOfModelClassProperty == null)
                {
                    actual.Child2ArrayOfModelClassProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ArrayOfModelClassProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ArrayOfModelClassProperty);
                }

                if (systemUnderTest.Child2ArrayOfNullableBoolProperty == null)
                {
                    actual.Child2ArrayOfNullableBoolProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ArrayOfNullableBoolProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ArrayOfNullableBoolProperty);
                }

                if (systemUnderTest.Child2ArrayOfNullableIntProperty == null)
                {
                    actual.Child2ArrayOfNullableIntProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ArrayOfNullableIntProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ArrayOfNullableIntProperty);
                }

                if (systemUnderTest.Child2ArrayOfNullableGuidProperty == null)
                {
                    actual.Child2ArrayOfNullableGuidProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ArrayOfNullableGuidProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ArrayOfNullableGuidProperty);
                }

                if (systemUnderTest.Child2ArrayOfNullableDateTimeProperty == null)
                {
                    actual.Child2ArrayOfNullableDateTimeProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ArrayOfNullableDateTimeProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ArrayOfNullableDateTimeProperty);
                }

                if (systemUnderTest.Child2ArrayOfNullableModelEnumProperty == null)
                {
                    actual.Child2ArrayOfNullableModelEnumProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ArrayOfNullableModelEnumProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ArrayOfNullableModelEnumProperty);
                }

                if (systemUnderTest.Child2ArrayOfNullableModelFlagsEnumProperty == null)
                {
                    actual.Child2ArrayOfNullableModelFlagsEnumProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ArrayOfNullableModelFlagsEnumProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ArrayOfNullableModelFlagsEnumProperty);
                }

                if (systemUnderTest.Child2ReadOnlyCollectionInterfaceOfBoolProperty == null)
                {
                    actual.Child2ReadOnlyCollectionInterfaceOfBoolProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ReadOnlyCollectionInterfaceOfBoolProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ReadOnlyCollectionInterfaceOfBoolProperty);
                }

                if (systemUnderTest.Child2ReadOnlyCollectionInterfaceOfIntProperty == null)
                {
                    actual.Child2ReadOnlyCollectionInterfaceOfIntProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ReadOnlyCollectionInterfaceOfIntProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ReadOnlyCollectionInterfaceOfIntProperty);
                }

                if (systemUnderTest.Child2ReadOnlyCollectionInterfaceOfStringProperty == null)
                {
                    actual.Child2ReadOnlyCollectionInterfaceOfStringProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ReadOnlyCollectionInterfaceOfStringProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ReadOnlyCollectionInterfaceOfStringProperty);
                }

                if (systemUnderTest.Child2ReadOnlyCollectionInterfaceOfGuidProperty == null)
                {
                    actual.Child2ReadOnlyCollectionInterfaceOfGuidProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ReadOnlyCollectionInterfaceOfGuidProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ReadOnlyCollectionInterfaceOfGuidProperty);
                }

                if (systemUnderTest.Child2ReadOnlyCollectionInterfaceOfDateTimeProperty == null)
                {
                    actual.Child2ReadOnlyCollectionInterfaceOfDateTimeProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ReadOnlyCollectionInterfaceOfDateTimeProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ReadOnlyCollectionInterfaceOfDateTimeProperty);
                }

                if (systemUnderTest.Child2ReadOnlyCollectionInterfaceOfModelEnumProperty == null)
                {
                    actual.Child2ReadOnlyCollectionInterfaceOfModelEnumProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ReadOnlyCollectionInterfaceOfModelEnumProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ReadOnlyCollectionInterfaceOfModelEnumProperty);
                }

                if (systemUnderTest.Child2ReadOnlyCollectionInterfaceOfModelFlagsEnumProperty == null)
                {
                    actual.Child2ReadOnlyCollectionInterfaceOfModelFlagsEnumProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ReadOnlyCollectionInterfaceOfModelFlagsEnumProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ReadOnlyCollectionInterfaceOfModelFlagsEnumProperty);
                }

                if (systemUnderTest.Child2ReadOnlyCollectionInterfaceOfModelClassProperty == null)
                {
                    actual.Child2ReadOnlyCollectionInterfaceOfModelClassProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ReadOnlyCollectionInterfaceOfModelClassProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ReadOnlyCollectionInterfaceOfModelClassProperty);
                }

                if (systemUnderTest.Child2ReadOnlyCollectionInterfaceOfNullableBoolProperty == null)
                {
                    actual.Child2ReadOnlyCollectionInterfaceOfNullableBoolProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ReadOnlyCollectionInterfaceOfNullableBoolProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ReadOnlyCollectionInterfaceOfNullableBoolProperty);
                }

                if (systemUnderTest.Child2ReadOnlyCollectionInterfaceOfNullableIntProperty == null)
                {
                    actual.Child2ReadOnlyCollectionInterfaceOfNullableIntProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ReadOnlyCollectionInterfaceOfNullableIntProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ReadOnlyCollectionInterfaceOfNullableIntProperty);
                }

                if (systemUnderTest.Child2ReadOnlyCollectionInterfaceOfNullableGuidProperty == null)
                {
                    actual.Child2ReadOnlyCollectionInterfaceOfNullableGuidProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ReadOnlyCollectionInterfaceOfNullableGuidProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ReadOnlyCollectionInterfaceOfNullableGuidProperty);
                }

                if (systemUnderTest.Child2ReadOnlyCollectionInterfaceOfNullableDateTimeProperty == null)
                {
                    actual.Child2ReadOnlyCollectionInterfaceOfNullableDateTimeProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ReadOnlyCollectionInterfaceOfNullableDateTimeProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ReadOnlyCollectionInterfaceOfNullableDateTimeProperty);
                }

                if (systemUnderTest.Child2ReadOnlyCollectionInterfaceOfNullableModelEnumProperty == null)
                {
                    actual.Child2ReadOnlyCollectionInterfaceOfNullableModelEnumProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ReadOnlyCollectionInterfaceOfNullableModelEnumProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ReadOnlyCollectionInterfaceOfNullableModelEnumProperty);
                }

                if (systemUnderTest.Child2ReadOnlyCollectionInterfaceOfNullableModelFlagsEnumProperty == null)
                {
                    actual.Child2ReadOnlyCollectionInterfaceOfNullableModelFlagsEnumProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ReadOnlyCollectionInterfaceOfNullableModelFlagsEnumProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ReadOnlyCollectionInterfaceOfNullableModelFlagsEnumProperty);
                }

                if (systemUnderTest.Child2ReadOnlyListInterfaceOfBoolProperty == null)
                {
                    actual.Child2ReadOnlyListInterfaceOfBoolProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ReadOnlyListInterfaceOfBoolProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ReadOnlyListInterfaceOfBoolProperty);
                }

                if (systemUnderTest.Child2ReadOnlyListInterfaceOfIntProperty == null)
                {
                    actual.Child2ReadOnlyListInterfaceOfIntProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ReadOnlyListInterfaceOfIntProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ReadOnlyListInterfaceOfIntProperty);
                }

                if (systemUnderTest.Child2ReadOnlyListInterfaceOfStringProperty == null)
                {
                    actual.Child2ReadOnlyListInterfaceOfStringProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ReadOnlyListInterfaceOfStringProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ReadOnlyListInterfaceOfStringProperty);
                }

                if (systemUnderTest.Child2ReadOnlyListInterfaceOfGuidProperty == null)
                {
                    actual.Child2ReadOnlyListInterfaceOfGuidProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ReadOnlyListInterfaceOfGuidProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ReadOnlyListInterfaceOfGuidProperty);
                }

                if (systemUnderTest.Child2ReadOnlyListInterfaceOfDateTimeProperty == null)
                {
                    actual.Child2ReadOnlyListInterfaceOfDateTimeProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ReadOnlyListInterfaceOfDateTimeProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ReadOnlyListInterfaceOfDateTimeProperty);
                }

                if (systemUnderTest.Child2ReadOnlyListInterfaceOfModelEnumProperty == null)
                {
                    actual.Child2ReadOnlyListInterfaceOfModelEnumProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ReadOnlyListInterfaceOfModelEnumProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ReadOnlyListInterfaceOfModelEnumProperty);
                }

                if (systemUnderTest.Child2ReadOnlyListInterfaceOfModelFlagsEnumProperty == null)
                {
                    actual.Child2ReadOnlyListInterfaceOfModelFlagsEnumProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ReadOnlyListInterfaceOfModelFlagsEnumProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ReadOnlyListInterfaceOfModelFlagsEnumProperty);
                }

                if (systemUnderTest.Child2ReadOnlyListInterfaceOfModelClassProperty == null)
                {
                    actual.Child2ReadOnlyListInterfaceOfModelClassProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ReadOnlyListInterfaceOfModelClassProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ReadOnlyListInterfaceOfModelClassProperty);
                }

                if (systemUnderTest.Child2ReadOnlyListInterfaceOfNullableBoolProperty == null)
                {
                    actual.Child2ReadOnlyListInterfaceOfNullableBoolProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ReadOnlyListInterfaceOfNullableBoolProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ReadOnlyListInterfaceOfNullableBoolProperty);
                }

                if (systemUnderTest.Child2ReadOnlyListInterfaceOfNullableIntProperty == null)
                {
                    actual.Child2ReadOnlyListInterfaceOfNullableIntProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ReadOnlyListInterfaceOfNullableIntProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ReadOnlyListInterfaceOfNullableIntProperty);
                }

                if (systemUnderTest.Child2ReadOnlyListInterfaceOfNullableGuidProperty == null)
                {
                    actual.Child2ReadOnlyListInterfaceOfNullableGuidProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ReadOnlyListInterfaceOfNullableGuidProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ReadOnlyListInterfaceOfNullableGuidProperty);
                }

                if (systemUnderTest.Child2ReadOnlyListInterfaceOfNullableDateTimeProperty == null)
                {
                    actual.Child2ReadOnlyListInterfaceOfNullableDateTimeProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ReadOnlyListInterfaceOfNullableDateTimeProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ReadOnlyListInterfaceOfNullableDateTimeProperty);
                }

                if (systemUnderTest.Child2ReadOnlyListInterfaceOfNullableModelEnumProperty == null)
                {
                    actual.Child2ReadOnlyListInterfaceOfNullableModelEnumProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ReadOnlyListInterfaceOfNullableModelEnumProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ReadOnlyListInterfaceOfNullableModelEnumProperty);
                }

                if (systemUnderTest.Child2ReadOnlyListInterfaceOfNullableModelFlagsEnumProperty == null)
                {
                    actual.Child2ReadOnlyListInterfaceOfNullableModelFlagsEnumProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ReadOnlyListInterfaceOfNullableModelFlagsEnumProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ReadOnlyListInterfaceOfNullableModelFlagsEnumProperty);
                }

                if (systemUnderTest.Child2ReadOnlyDictionaryInterfaceOfBoolProperty == null)
                {
                    actual.Child2ReadOnlyDictionaryInterfaceOfBoolProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ReadOnlyDictionaryInterfaceOfBoolProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ReadOnlyDictionaryInterfaceOfBoolProperty);
                }

                if (systemUnderTest.Child2ReadOnlyDictionaryInterfaceOfIntProperty == null)
                {
                    actual.Child2ReadOnlyDictionaryInterfaceOfIntProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ReadOnlyDictionaryInterfaceOfIntProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ReadOnlyDictionaryInterfaceOfIntProperty);
                }

                if (systemUnderTest.Child2ReadOnlyDictionaryInterfaceOfStringProperty == null)
                {
                    actual.Child2ReadOnlyDictionaryInterfaceOfStringProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ReadOnlyDictionaryInterfaceOfStringProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ReadOnlyDictionaryInterfaceOfStringProperty);
                }

                if (systemUnderTest.Child2ReadOnlyDictionaryInterfaceOfGuidProperty == null)
                {
                    actual.Child2ReadOnlyDictionaryInterfaceOfGuidProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ReadOnlyDictionaryInterfaceOfGuidProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ReadOnlyDictionaryInterfaceOfGuidProperty);
                }

                if (systemUnderTest.Child2ReadOnlyDictionaryInterfaceOfModelEnumProperty == null)
                {
                    actual.Child2ReadOnlyDictionaryInterfaceOfModelEnumProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ReadOnlyDictionaryInterfaceOfModelEnumProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ReadOnlyDictionaryInterfaceOfModelEnumProperty);
                }

                if (systemUnderTest.Child2ReadOnlyDictionaryInterfaceOfModelFlagsEnumProperty == null)
                {
                    actual.Child2ReadOnlyDictionaryInterfaceOfModelFlagsEnumProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ReadOnlyDictionaryInterfaceOfModelFlagsEnumProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ReadOnlyDictionaryInterfaceOfModelFlagsEnumProperty);
                }

                if (systemUnderTest.Child2ReadOnlyDictionaryInterfaceOfModelClassProperty == null)
                {
                    actual.Child2ReadOnlyDictionaryInterfaceOfModelClassProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ReadOnlyDictionaryInterfaceOfModelClassProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ReadOnlyDictionaryInterfaceOfModelClassProperty);
                }

                if (systemUnderTest.Child2ReadOnlyDictionaryInterfaceOfNullableBoolProperty == null)
                {
                    actual.Child2ReadOnlyDictionaryInterfaceOfNullableBoolProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ReadOnlyDictionaryInterfaceOfNullableBoolProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ReadOnlyDictionaryInterfaceOfNullableBoolProperty);
                }

                if (systemUnderTest.Child2ReadOnlyDictionaryInterfaceOfNullableIntProperty == null)
                {
                    actual.Child2ReadOnlyDictionaryInterfaceOfNullableIntProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ReadOnlyDictionaryInterfaceOfNullableIntProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ReadOnlyDictionaryInterfaceOfNullableIntProperty);
                }

                if (systemUnderTest.Child2ReadOnlyDictionaryInterfaceOfNullableGuidProperty == null)
                {
                    actual.Child2ReadOnlyDictionaryInterfaceOfNullableGuidProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ReadOnlyDictionaryInterfaceOfNullableGuidProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ReadOnlyDictionaryInterfaceOfNullableGuidProperty);
                }

                if (systemUnderTest.Child2ReadOnlyDictionaryInterfaceOfNullableModelEnumProperty == null)
                {
                    actual.Child2ReadOnlyDictionaryInterfaceOfNullableModelEnumProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ReadOnlyDictionaryInterfaceOfNullableModelEnumProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ReadOnlyDictionaryInterfaceOfNullableModelEnumProperty);
                }

                if (systemUnderTest.Child2ReadOnlyDictionaryInterfaceOfNullableModelFlagsEnumProperty == null)
                {
                    actual.Child2ReadOnlyDictionaryInterfaceOfNullableModelFlagsEnumProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ReadOnlyDictionaryInterfaceOfNullableModelFlagsEnumProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ReadOnlyDictionaryInterfaceOfNullableModelFlagsEnumProperty);
                }

                if (systemUnderTest.Child2CollectionInterfaceOfStringProperty == null)
                {
                    actual.Child2CollectionInterfaceOfStringProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2CollectionInterfaceOfStringProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2CollectionInterfaceOfStringProperty);
                }

                if (systemUnderTest.Child2CollectionOfCollectionInterfaceOfStringProperty == null)
                {
                    actual.Child2CollectionOfCollectionInterfaceOfStringProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2CollectionOfCollectionInterfaceOfStringProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2CollectionOfCollectionInterfaceOfStringProperty);
                }

                if (systemUnderTest.Child2ListInterfaceOfCollectionInterfaceOfStringProperty == null)
                {
                    actual.Child2ListInterfaceOfCollectionInterfaceOfStringProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ListInterfaceOfCollectionInterfaceOfStringProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ListInterfaceOfCollectionInterfaceOfStringProperty);
                }

                if (systemUnderTest.Child2ListOfCollectionInterfaceOfStringProperty == null)
                {
                    actual.Child2ListOfCollectionInterfaceOfStringProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ListOfCollectionInterfaceOfStringProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ListOfCollectionInterfaceOfStringProperty);
                }

                if (systemUnderTest.Child2ReadOnlyCollectionOfCollectionInterfaceOfStringProperty == null)
                {
                    actual.Child2ReadOnlyCollectionOfCollectionInterfaceOfStringProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ReadOnlyCollectionOfCollectionInterfaceOfStringProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ReadOnlyCollectionOfCollectionInterfaceOfStringProperty);
                }

                if (systemUnderTest.Child2DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty == null)
                {
                    actual.Child2DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty);
                }

                if (systemUnderTest.Child2DictionaryOfReadOnlyListInterfaceOfDateTimeProperty == null)
                {
                    actual.Child2DictionaryOfReadOnlyListInterfaceOfDateTimeProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2DictionaryOfReadOnlyListInterfaceOfDateTimeProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2DictionaryOfReadOnlyListInterfaceOfDateTimeProperty);
                }

                if (systemUnderTest.Child2ReadOnlyDictionaryOfReadOnlyListInterfaceOfDateTimeProperty == null)
                {
                    actual.Child2ReadOnlyDictionaryOfReadOnlyListInterfaceOfDateTimeProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ReadOnlyDictionaryOfReadOnlyListInterfaceOfDateTimeProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ReadOnlyDictionaryOfReadOnlyListInterfaceOfDateTimeProperty);
                }

                if (systemUnderTest.Child2ConcurrentDictionaryOfReadOnlyListInterfaceOfDateTimeProperty == null)
                {
                    actual.Child2ConcurrentDictionaryOfReadOnlyListInterfaceOfDateTimeProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ConcurrentDictionaryOfReadOnlyListInterfaceOfDateTimeProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ConcurrentDictionaryOfReadOnlyListInterfaceOfDateTimeProperty);
                }

                if (systemUnderTest.Child2ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty == null)
                {
                    actual.Child2ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty);
                }

                if (systemUnderTest.Child2ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyDictionaryOfReadOnlyListInterfaceOfDateTimeProperty == null)
                {
                    actual.Child2ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyDictionaryOfReadOnlyListInterfaceOfDateTimeProperty.AsTest().Must().BeNull();
                }
                else
                {
                    actual.Child2ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyDictionaryOfReadOnlyListInterfaceOfDateTimeProperty.AsTest().Must().NotBeSameReferenceAs(systemUnderTest.Child2ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyDictionaryOfReadOnlyListInterfaceOfDateTimeProperty);
                }
            }
        }
    }
}