// --------------------------------------------------------------------------------------------------------------------
// <copyright file="CodeGenDummyFactory.designer.cs" company="OBeautifulCode">
//   Copyright (c) OBeautifulCode 2018. All rights reserved.
// </copyright>
// <auto-generated>
//   Sourced from OBeautifulCode.CodeGen.ModelObject.Test.CodeGeneratorTest
// </auto-generated>
// --------------------------------------------------------------------------------------------------------------------

namespace OBeautifulCode.CodeGen.ModelObject.Test
{
    using System;
    using System.Collections.Concurrent;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;

    using FakeItEasy;

    using OBeautifulCode.AutoFakeItEasy;

    public abstract class DefaultCodeGenDummyFactory : IDummyFactory
    {
        public DefaultCodeGenDummyFactory()
        {
            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPrivateSetArrayOfNullable(
                                 A.Dummy<bool?[]>(),
                                 A.Dummy<int?[]>(),
                                 A.Dummy<Guid?[]>(),
                                 A.Dummy<DateTime?[]>(),
                                 A.Dummy<CustomEnum?[]>(),
                                 A.Dummy<CustomFlagsEnum?[]>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPrivateSetArrayOfNullableChild1(
                                 A.Dummy<bool?[]>(),
                                 A.Dummy<int?[]>(),
                                 A.Dummy<Guid?[]>(),
                                 A.Dummy<DateTime?[]>(),
                                 A.Dummy<CustomEnum?[]>(),
                                 A.Dummy<CustomFlagsEnum?[]>(),
                                 A.Dummy<bool?[]>(),
                                 A.Dummy<int?[]>(),
                                 A.Dummy<Guid?[]>(),
                                 A.Dummy<DateTime?[]>(),
                                 A.Dummy<CustomEnum?[]>(),
                                 A.Dummy<CustomFlagsEnum?[]>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPrivateSetArrayOfNullableChild2(
                                 A.Dummy<bool?[]>(),
                                 A.Dummy<int?[]>(),
                                 A.Dummy<Guid?[]>(),
                                 A.Dummy<DateTime?[]>(),
                                 A.Dummy<CustomEnum?[]>(),
                                 A.Dummy<CustomFlagsEnum?[]>(),
                                 A.Dummy<bool?[]>(),
                                 A.Dummy<int?[]>(),
                                 A.Dummy<Guid?[]>(),
                                 A.Dummy<DateTime?[]>(),
                                 A.Dummy<CustomEnum?[]>(),
                                 A.Dummy<CustomFlagsEnum?[]>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelAllPrivateSetArrayOfNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPrivateSetArray(
                                 A.Dummy<bool[]>(),
                                 A.Dummy<int[]>(),
                                 A.Dummy<string[]>(),
                                 A.Dummy<Guid[]>(),
                                 A.Dummy<DateTime[]>(),
                                 A.Dummy<CustomEnum[]>(),
                                 A.Dummy<CustomFlagsEnum[]>(),
                                 A.Dummy<CustomClass[]>(),
                                 A.Dummy<CustomBaseClass[]>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPrivateSetArrayChild1(
                                 A.Dummy<bool[]>(),
                                 A.Dummy<int[]>(),
                                 A.Dummy<string[]>(),
                                 A.Dummy<Guid[]>(),
                                 A.Dummy<DateTime[]>(),
                                 A.Dummy<CustomEnum[]>(),
                                 A.Dummy<CustomFlagsEnum[]>(),
                                 A.Dummy<CustomClass[]>(),
                                 A.Dummy<CustomBaseClass[]>(),
                                 A.Dummy<bool[]>(),
                                 A.Dummy<int[]>(),
                                 A.Dummy<string[]>(),
                                 A.Dummy<Guid[]>(),
                                 A.Dummy<DateTime[]>(),
                                 A.Dummy<CustomEnum[]>(),
                                 A.Dummy<CustomFlagsEnum[]>(),
                                 A.Dummy<CustomClass[]>(),
                                 A.Dummy<CustomBaseClass[]>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPrivateSetArrayChild2(
                                 A.Dummy<bool[]>(),
                                 A.Dummy<int[]>(),
                                 A.Dummy<string[]>(),
                                 A.Dummy<Guid[]>(),
                                 A.Dummy<DateTime[]>(),
                                 A.Dummy<CustomEnum[]>(),
                                 A.Dummy<CustomFlagsEnum[]>(),
                                 A.Dummy<CustomClass[]>(),
                                 A.Dummy<CustomBaseClass[]>(),
                                 A.Dummy<bool[]>(),
                                 A.Dummy<int[]>(),
                                 A.Dummy<string[]>(),
                                 A.Dummy<Guid[]>(),
                                 A.Dummy<DateTime[]>(),
                                 A.Dummy<CustomEnum[]>(),
                                 A.Dummy<CustomFlagsEnum[]>(),
                                 A.Dummy<CustomClass[]>(),
                                 A.Dummy<CustomBaseClass[]>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelAllPrivateSetArrayParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPrivateSetMisc(
                                 A.Dummy<ICollection<string>>(),
                                 A.Dummy<IList<string>>(),
                                 A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 A.Dummy<IList<ICollection<string>>>(),
                                 A.Dummy<IReadOnlyList<IList<string>>>(),
                                 A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPrivateSetMiscChild1(
                                 A.Dummy<ICollection<string>>(),
                                 A.Dummy<IList<string>>(),
                                 A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 A.Dummy<IList<ICollection<string>>>(),
                                 A.Dummy<IReadOnlyList<IList<string>>>(),
                                 A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>(),
                                 A.Dummy<ICollection<string>>(),
                                 A.Dummy<IList<string>>(),
                                 A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 A.Dummy<IList<ICollection<string>>>(),
                                 A.Dummy<IReadOnlyList<IList<string>>>(),
                                 A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPrivateSetMiscChild2(
                                 A.Dummy<ICollection<string>>(),
                                 A.Dummy<IList<string>>(),
                                 A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 A.Dummy<IList<ICollection<string>>>(),
                                 A.Dummy<IReadOnlyList<IList<string>>>(),
                                 A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>(),
                                 A.Dummy<ICollection<string>>(),
                                 A.Dummy<IList<string>>(),
                                 A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 A.Dummy<IList<ICollection<string>>>(),
                                 A.Dummy<IReadOnlyList<IList<string>>>(),
                                 A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelAllPrivateSetMiscParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPrivateSetNone(
                                 A.Dummy<bool>(),
                                 A.Dummy<int>(),
                                 A.Dummy<string>(),
                                 A.Dummy<Guid>(),
                                 A.Dummy<DateTime>(),
                                 A.Dummy<CustomEnum>(),
                                 A.Dummy<CustomFlagsEnum>(),
                                 A.Dummy<CustomClass>(),
                                 A.Dummy<CustomBaseClass>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPrivateSetNoneChild1(
                                 A.Dummy<bool>(),
                                 A.Dummy<int>(),
                                 A.Dummy<string>(),
                                 A.Dummy<Guid>(),
                                 A.Dummy<DateTime>(),
                                 A.Dummy<CustomEnum>(),
                                 A.Dummy<CustomFlagsEnum>(),
                                 A.Dummy<CustomClass>(),
                                 A.Dummy<CustomBaseClass>(),
                                 A.Dummy<bool>(),
                                 A.Dummy<int>(),
                                 A.Dummy<string>(),
                                 A.Dummy<Guid>(),
                                 A.Dummy<DateTime>(),
                                 A.Dummy<CustomEnum>(),
                                 A.Dummy<CustomFlagsEnum>(),
                                 A.Dummy<CustomClass>(),
                                 A.Dummy<CustomBaseClass>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPrivateSetNoneChild2(
                                 A.Dummy<bool>(),
                                 A.Dummy<int>(),
                                 A.Dummy<string>(),
                                 A.Dummy<Guid>(),
                                 A.Dummy<DateTime>(),
                                 A.Dummy<CustomEnum>(),
                                 A.Dummy<CustomFlagsEnum>(),
                                 A.Dummy<CustomClass>(),
                                 A.Dummy<CustomBaseClass>(),
                                 A.Dummy<bool>(),
                                 A.Dummy<int>(),
                                 A.Dummy<string>(),
                                 A.Dummy<Guid>(),
                                 A.Dummy<DateTime>(),
                                 A.Dummy<CustomEnum>(),
                                 A.Dummy<CustomFlagsEnum>(),
                                 A.Dummy<CustomClass>(),
                                 A.Dummy<CustomBaseClass>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelAllPrivateSetNoneParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPrivateSetNullable(
                                 A.Dummy<bool?>(),
                                 A.Dummy<int?>(),
                                 A.Dummy<Guid?>(),
                                 A.Dummy<DateTime?>(),
                                 A.Dummy<CustomEnum?>(),
                                 A.Dummy<CustomFlagsEnum?>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPrivateSetNullableChild1(
                                 A.Dummy<bool?>(),
                                 A.Dummy<int?>(),
                                 A.Dummy<Guid?>(),
                                 A.Dummy<DateTime?>(),
                                 A.Dummy<CustomEnum?>(),
                                 A.Dummy<CustomFlagsEnum?>(),
                                 A.Dummy<bool?>(),
                                 A.Dummy<int?>(),
                                 A.Dummy<Guid?>(),
                                 A.Dummy<DateTime?>(),
                                 A.Dummy<CustomEnum?>(),
                                 A.Dummy<CustomFlagsEnum?>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPrivateSetNullableChild2(
                                 A.Dummy<bool?>(),
                                 A.Dummy<int?>(),
                                 A.Dummy<Guid?>(),
                                 A.Dummy<DateTime?>(),
                                 A.Dummy<CustomEnum?>(),
                                 A.Dummy<CustomFlagsEnum?>(),
                                 A.Dummy<bool?>(),
                                 A.Dummy<int?>(),
                                 A.Dummy<Guid?>(),
                                 A.Dummy<DateTime?>(),
                                 A.Dummy<CustomEnum?>(),
                                 A.Dummy<CustomFlagsEnum?>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelAllPrivateSetNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPrivateSetReadOnlyCollectionOfNullable(
                                 A.Dummy<IReadOnlyCollection<bool?>>(),
                                 A.Dummy<IReadOnlyCollection<int?>>(),
                                 A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPrivateSetReadOnlyCollectionOfNullableChild1(
                                 A.Dummy<IReadOnlyCollection<bool?>>(),
                                 A.Dummy<IReadOnlyCollection<int?>>(),
                                 A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>(),
                                 A.Dummy<IReadOnlyCollection<bool?>>(),
                                 A.Dummy<IReadOnlyCollection<int?>>(),
                                 A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPrivateSetReadOnlyCollectionOfNullableChild2(
                                 A.Dummy<IReadOnlyCollection<bool?>>(),
                                 A.Dummy<IReadOnlyCollection<int?>>(),
                                 A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>(),
                                 A.Dummy<IReadOnlyCollection<bool?>>(),
                                 A.Dummy<IReadOnlyCollection<int?>>(),
                                 A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelAllPrivateSetReadOnlyCollectionOfNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPrivateSetReadOnlyCollection(
                                 A.Dummy<IReadOnlyCollection<bool>>(),
                                 A.Dummy<IReadOnlyCollection<int>>(),
                                 A.Dummy<IReadOnlyCollection<string>>(),
                                 A.Dummy<IReadOnlyCollection<Guid>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 A.Dummy<IReadOnlyCollection<CustomBaseClass>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPrivateSetReadOnlyCollectionChild1(
                                 A.Dummy<IReadOnlyCollection<bool>>(),
                                 A.Dummy<IReadOnlyCollection<int>>(),
                                 A.Dummy<IReadOnlyCollection<string>>(),
                                 A.Dummy<IReadOnlyCollection<Guid>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 A.Dummy<IReadOnlyCollection<CustomBaseClass>>(),
                                 A.Dummy<IReadOnlyCollection<bool>>(),
                                 A.Dummy<IReadOnlyCollection<int>>(),
                                 A.Dummy<IReadOnlyCollection<string>>(),
                                 A.Dummy<IReadOnlyCollection<Guid>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 A.Dummy<IReadOnlyCollection<CustomBaseClass>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPrivateSetReadOnlyCollectionChild2(
                                 A.Dummy<IReadOnlyCollection<bool>>(),
                                 A.Dummy<IReadOnlyCollection<int>>(),
                                 A.Dummy<IReadOnlyCollection<string>>(),
                                 A.Dummy<IReadOnlyCollection<Guid>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 A.Dummy<IReadOnlyCollection<CustomBaseClass>>(),
                                 A.Dummy<IReadOnlyCollection<bool>>(),
                                 A.Dummy<IReadOnlyCollection<int>>(),
                                 A.Dummy<IReadOnlyCollection<string>>(),
                                 A.Dummy<IReadOnlyCollection<Guid>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 A.Dummy<IReadOnlyCollection<CustomBaseClass>>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelAllPrivateSetReadOnlyCollectionParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPrivateSetReadOnlyDictionaryOfNullable(
                                 A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPrivateSetReadOnlyDictionaryOfNullableChild1(
                                 A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>(),
                                 A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPrivateSetReadOnlyDictionaryOfNullableChild2(
                                 A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>(),
                                 A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelAllPrivateSetReadOnlyDictionaryOfNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPrivateSetReadOnlyDictionary(
                                 A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPrivateSetReadOnlyDictionaryChild1(
                                 A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>(),
                                 A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPrivateSetReadOnlyDictionaryChild2(
                                 A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>(),
                                 A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelAllPrivateSetReadOnlyDictionaryParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPrivateSetReadOnlyListOfNullable(
                                 A.Dummy<IReadOnlyList<bool?>>(),
                                 A.Dummy<IReadOnlyList<int?>>(),
                                 A.Dummy<IReadOnlyList<Guid?>>(),
                                 A.Dummy<IReadOnlyList<DateTime?>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum?>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPrivateSetReadOnlyListOfNullableChild1(
                                 A.Dummy<IReadOnlyList<bool?>>(),
                                 A.Dummy<IReadOnlyList<int?>>(),
                                 A.Dummy<IReadOnlyList<Guid?>>(),
                                 A.Dummy<IReadOnlyList<DateTime?>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum?>>(),
                                 A.Dummy<IReadOnlyList<bool?>>(),
                                 A.Dummy<IReadOnlyList<int?>>(),
                                 A.Dummy<IReadOnlyList<Guid?>>(),
                                 A.Dummy<IReadOnlyList<DateTime?>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum?>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPrivateSetReadOnlyListOfNullableChild2(
                                 A.Dummy<IReadOnlyList<bool?>>(),
                                 A.Dummy<IReadOnlyList<int?>>(),
                                 A.Dummy<IReadOnlyList<Guid?>>(),
                                 A.Dummy<IReadOnlyList<DateTime?>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum?>>(),
                                 A.Dummy<IReadOnlyList<bool?>>(),
                                 A.Dummy<IReadOnlyList<int?>>(),
                                 A.Dummy<IReadOnlyList<Guid?>>(),
                                 A.Dummy<IReadOnlyList<DateTime?>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum?>>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelAllPrivateSetReadOnlyListOfNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPrivateSetReadOnlyList(
                                 A.Dummy<IReadOnlyList<bool>>(),
                                 A.Dummy<IReadOnlyList<int>>(),
                                 A.Dummy<IReadOnlyList<string>>(),
                                 A.Dummy<IReadOnlyList<Guid>>(),
                                 A.Dummy<IReadOnlyList<DateTime>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomClass>>(),
                                 A.Dummy<IReadOnlyList<CustomBaseClass>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPrivateSetReadOnlyListChild1(
                                 A.Dummy<IReadOnlyList<bool>>(),
                                 A.Dummy<IReadOnlyList<int>>(),
                                 A.Dummy<IReadOnlyList<string>>(),
                                 A.Dummy<IReadOnlyList<Guid>>(),
                                 A.Dummy<IReadOnlyList<DateTime>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomClass>>(),
                                 A.Dummy<IReadOnlyList<CustomBaseClass>>(),
                                 A.Dummy<IReadOnlyList<bool>>(),
                                 A.Dummy<IReadOnlyList<int>>(),
                                 A.Dummy<IReadOnlyList<string>>(),
                                 A.Dummy<IReadOnlyList<Guid>>(),
                                 A.Dummy<IReadOnlyList<DateTime>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomClass>>(),
                                 A.Dummy<IReadOnlyList<CustomBaseClass>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPrivateSetReadOnlyListChild2(
                                 A.Dummy<IReadOnlyList<bool>>(),
                                 A.Dummy<IReadOnlyList<int>>(),
                                 A.Dummy<IReadOnlyList<string>>(),
                                 A.Dummy<IReadOnlyList<Guid>>(),
                                 A.Dummy<IReadOnlyList<DateTime>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomClass>>(),
                                 A.Dummy<IReadOnlyList<CustomBaseClass>>(),
                                 A.Dummy<IReadOnlyList<bool>>(),
                                 A.Dummy<IReadOnlyList<int>>(),
                                 A.Dummy<IReadOnlyList<string>>(),
                                 A.Dummy<IReadOnlyList<Guid>>(),
                                 A.Dummy<IReadOnlyList<DateTime>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomClass>>(),
                                 A.Dummy<IReadOnlyList<CustomBaseClass>>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelAllPrivateSetReadOnlyListParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPublicSetArrayOfNullable
                             {
                                 ArrayOfNullableBoolProperty            = A.Dummy<bool?[]>(),
                                 ArrayOfNullableIntProperty             = A.Dummy<int?[]>(),
                                 ArrayOfNullableGuidProperty            = A.Dummy<Guid?[]>(),
                                 ArrayOfNullableDateTimeProperty        = A.Dummy<DateTime?[]>(),
                                 ArrayOfNullableCustomEnumProperty      = A.Dummy<CustomEnum?[]>(),
                                 ArrayOfNullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?[]>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPublicSetArrayOfNullableChild1
                             {
                                 ParentArrayOfNullableBoolProperty            = A.Dummy<bool?[]>(),
                                 ParentArrayOfNullableIntProperty             = A.Dummy<int?[]>(),
                                 ParentArrayOfNullableGuidProperty            = A.Dummy<Guid?[]>(),
                                 ParentArrayOfNullableDateTimeProperty        = A.Dummy<DateTime?[]>(),
                                 ParentArrayOfNullableCustomEnumProperty      = A.Dummy<CustomEnum?[]>(),
                                 ParentArrayOfNullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?[]>(),
                                 Child1ArrayOfNullableBoolProperty            = A.Dummy<bool?[]>(),
                                 Child1ArrayOfNullableIntProperty             = A.Dummy<int?[]>(),
                                 Child1ArrayOfNullableGuidProperty            = A.Dummy<Guid?[]>(),
                                 Child1ArrayOfNullableDateTimeProperty        = A.Dummy<DateTime?[]>(),
                                 Child1ArrayOfNullableCustomEnumProperty      = A.Dummy<CustomEnum?[]>(),
                                 Child1ArrayOfNullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?[]>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPublicSetArrayOfNullableChild2
                             {
                                 ParentArrayOfNullableBoolProperty            = A.Dummy<bool?[]>(),
                                 ParentArrayOfNullableIntProperty             = A.Dummy<int?[]>(),
                                 ParentArrayOfNullableGuidProperty            = A.Dummy<Guid?[]>(),
                                 ParentArrayOfNullableDateTimeProperty        = A.Dummy<DateTime?[]>(),
                                 ParentArrayOfNullableCustomEnumProperty      = A.Dummy<CustomEnum?[]>(),
                                 ParentArrayOfNullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?[]>(),
                                 Child2ArrayOfNullableBoolProperty            = A.Dummy<bool?[]>(),
                                 Child2ArrayOfNullableIntProperty             = A.Dummy<int?[]>(),
                                 Child2ArrayOfNullableGuidProperty            = A.Dummy<Guid?[]>(),
                                 Child2ArrayOfNullableDateTimeProperty        = A.Dummy<DateTime?[]>(),
                                 Child2ArrayOfNullableCustomEnumProperty      = A.Dummy<CustomEnum?[]>(),
                                 Child2ArrayOfNullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?[]>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelAllPublicSetArrayOfNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPublicSetArray
                             {
                                 ArrayOfBoolProperty            = A.Dummy<bool[]>(),
                                 ArrayOfIntProperty             = A.Dummy<int[]>(),
                                 ArrayOfStringProperty          = A.Dummy<string[]>(),
                                 ArrayOfGuidProperty            = A.Dummy<Guid[]>(),
                                 ArrayOfDateTimeProperty        = A.Dummy<DateTime[]>(),
                                 ArrayOfCustomEnumProperty      = A.Dummy<CustomEnum[]>(),
                                 ArrayOfCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum[]>(),
                                 ArrayOfCustomClassProperty     = A.Dummy<CustomClass[]>(),
                                 ArrayOfCustomBaseClassProperty = A.Dummy<CustomBaseClass[]>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPublicSetArrayChild1
                             {
                                 ParentArrayOfBoolProperty            = A.Dummy<bool[]>(),
                                 ParentArrayOfIntProperty             = A.Dummy<int[]>(),
                                 ParentArrayOfStringProperty          = A.Dummy<string[]>(),
                                 ParentArrayOfGuidProperty            = A.Dummy<Guid[]>(),
                                 ParentArrayOfDateTimeProperty        = A.Dummy<DateTime[]>(),
                                 ParentArrayOfCustomEnumProperty      = A.Dummy<CustomEnum[]>(),
                                 ParentArrayOfCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum[]>(),
                                 ParentArrayOfCustomClassProperty     = A.Dummy<CustomClass[]>(),
                                 ParentArrayOfCustomBaseClassProperty = A.Dummy<CustomBaseClass[]>(),
                                 Child1ArrayOfBoolProperty            = A.Dummy<bool[]>(),
                                 Child1ArrayOfIntProperty             = A.Dummy<int[]>(),
                                 Child1ArrayOfStringProperty          = A.Dummy<string[]>(),
                                 Child1ArrayOfGuidProperty            = A.Dummy<Guid[]>(),
                                 Child1ArrayOfDateTimeProperty        = A.Dummy<DateTime[]>(),
                                 Child1ArrayOfCustomEnumProperty      = A.Dummy<CustomEnum[]>(),
                                 Child1ArrayOfCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum[]>(),
                                 Child1ArrayOfCustomClassProperty     = A.Dummy<CustomClass[]>(),
                                 Child1ArrayOfCustomBaseClassProperty = A.Dummy<CustomBaseClass[]>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPublicSetArrayChild2
                             {
                                 ParentArrayOfBoolProperty            = A.Dummy<bool[]>(),
                                 ParentArrayOfIntProperty             = A.Dummy<int[]>(),
                                 ParentArrayOfStringProperty          = A.Dummy<string[]>(),
                                 ParentArrayOfGuidProperty            = A.Dummy<Guid[]>(),
                                 ParentArrayOfDateTimeProperty        = A.Dummy<DateTime[]>(),
                                 ParentArrayOfCustomEnumProperty      = A.Dummy<CustomEnum[]>(),
                                 ParentArrayOfCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum[]>(),
                                 ParentArrayOfCustomClassProperty     = A.Dummy<CustomClass[]>(),
                                 ParentArrayOfCustomBaseClassProperty = A.Dummy<CustomBaseClass[]>(),
                                 Child2ArrayOfBoolProperty            = A.Dummy<bool[]>(),
                                 Child2ArrayOfIntProperty             = A.Dummy<int[]>(),
                                 Child2ArrayOfStringProperty          = A.Dummy<string[]>(),
                                 Child2ArrayOfGuidProperty            = A.Dummy<Guid[]>(),
                                 Child2ArrayOfDateTimeProperty        = A.Dummy<DateTime[]>(),
                                 Child2ArrayOfCustomEnumProperty      = A.Dummy<CustomEnum[]>(),
                                 Child2ArrayOfCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum[]>(),
                                 Child2ArrayOfCustomClassProperty     = A.Dummy<CustomClass[]>(),
                                 Child2ArrayOfCustomBaseClassProperty = A.Dummy<CustomBaseClass[]>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelAllPublicSetArrayParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPublicSetMisc
                             {
                                 CollectionInterfaceOfStringProperty                                                                                    = A.Dummy<ICollection<string>>(),
                                 ListInterfaceOfStringProperty                                                                                          = A.Dummy<IList<string>>(),
                                 ReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty                                                       = A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 CollectionInterfaceOfReadOnlyListInterfaceOfStringProperty                                                             = A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 ListInterfaceOfCollectionInterfaceOfStringProperty                                                                     = A.Dummy<IList<ICollection<string>>>(),
                                 ReadOnlyListInterfaceOfListInterfaceOfStringProperty                                                                   = A.Dummy<IReadOnlyList<IList<string>>>(),
                                 DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                                                           = A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 ReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty                                                     = A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                            = A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty = A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPublicSetMiscChild1
                             {
                                 ParentCollectionInterfaceOfStringProperty                                                                                    = A.Dummy<ICollection<string>>(),
                                 ParentListInterfaceOfStringProperty                                                                                          = A.Dummy<IList<string>>(),
                                 ParentReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty                                                       = A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 ParentCollectionInterfaceOfReadOnlyListInterfaceOfStringProperty                                                             = A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 ParentListInterfaceOfCollectionInterfaceOfStringProperty                                                                     = A.Dummy<IList<ICollection<string>>>(),
                                 ParentReadOnlyListInterfaceOfListInterfaceOfStringProperty                                                                   = A.Dummy<IReadOnlyList<IList<string>>>(),
                                 ParentDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                                                           = A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty                                                     = A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 ParentReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                            = A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 ParentReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty = A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>(),
                                 Child1CollectionInterfaceOfStringProperty                                                                                    = A.Dummy<ICollection<string>>(),
                                 Child1ListInterfaceOfStringProperty                                                                                          = A.Dummy<IList<string>>(),
                                 Child1ReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty                                                       = A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 Child1CollectionInterfaceOfReadOnlyListInterfaceOfStringProperty                                                             = A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 Child1ListInterfaceOfCollectionInterfaceOfStringProperty                                                                     = A.Dummy<IList<ICollection<string>>>(),
                                 Child1ReadOnlyListInterfaceOfListInterfaceOfStringProperty                                                                   = A.Dummy<IReadOnlyList<IList<string>>>(),
                                 Child1DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                                                           = A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty                                                     = A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 Child1ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                            = A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty = A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPublicSetMiscChild2
                             {
                                 ParentCollectionInterfaceOfStringProperty                                                                                    = A.Dummy<ICollection<string>>(),
                                 ParentListInterfaceOfStringProperty                                                                                          = A.Dummy<IList<string>>(),
                                 ParentReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty                                                       = A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 ParentCollectionInterfaceOfReadOnlyListInterfaceOfStringProperty                                                             = A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 ParentListInterfaceOfCollectionInterfaceOfStringProperty                                                                     = A.Dummy<IList<ICollection<string>>>(),
                                 ParentReadOnlyListInterfaceOfListInterfaceOfStringProperty                                                                   = A.Dummy<IReadOnlyList<IList<string>>>(),
                                 ParentDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                                                           = A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty                                                     = A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 ParentReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                            = A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 ParentReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty = A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>(),
                                 Child2CollectionInterfaceOfStringProperty                                                                                    = A.Dummy<ICollection<string>>(),
                                 Child2ListInterfaceOfStringProperty                                                                                          = A.Dummy<IList<string>>(),
                                 Child2ReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty                                                       = A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 Child2CollectionInterfaceOfReadOnlyListInterfaceOfStringProperty                                                             = A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 Child2ListInterfaceOfCollectionInterfaceOfStringProperty                                                                     = A.Dummy<IList<ICollection<string>>>(),
                                 Child2ReadOnlyListInterfaceOfListInterfaceOfStringProperty                                                                   = A.Dummy<IReadOnlyList<IList<string>>>(),
                                 Child2DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                                                           = A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty                                                     = A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 Child2ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                            = A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty = A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelAllPublicSetMiscParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPublicSetNone
                             {
                                 BoolProperty            = A.Dummy<bool>(),
                                 IntProperty             = A.Dummy<int>(),
                                 StringProperty          = A.Dummy<string>(),
                                 GuidProperty            = A.Dummy<Guid>(),
                                 DateTimeProperty        = A.Dummy<DateTime>(),
                                 CustomEnumProperty      = A.Dummy<CustomEnum>(),
                                 CustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum>(),
                                 CustomClassProperty     = A.Dummy<CustomClass>(),
                                 CustomBaseClassProperty = A.Dummy<CustomBaseClass>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPublicSetNoneChild1
                             {
                                 ParentBoolProperty            = A.Dummy<bool>(),
                                 ParentIntProperty             = A.Dummy<int>(),
                                 ParentStringProperty          = A.Dummy<string>(),
                                 ParentGuidProperty            = A.Dummy<Guid>(),
                                 ParentDateTimeProperty        = A.Dummy<DateTime>(),
                                 ParentCustomEnumProperty      = A.Dummy<CustomEnum>(),
                                 ParentCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum>(),
                                 ParentCustomClassProperty     = A.Dummy<CustomClass>(),
                                 ParentCustomBaseClassProperty = A.Dummy<CustomBaseClass>(),
                                 Child1BoolProperty            = A.Dummy<bool>(),
                                 Child1IntProperty             = A.Dummy<int>(),
                                 Child1StringProperty          = A.Dummy<string>(),
                                 Child1GuidProperty            = A.Dummy<Guid>(),
                                 Child1DateTimeProperty        = A.Dummy<DateTime>(),
                                 Child1CustomEnumProperty      = A.Dummy<CustomEnum>(),
                                 Child1CustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum>(),
                                 Child1CustomClassProperty     = A.Dummy<CustomClass>(),
                                 Child1CustomBaseClassProperty = A.Dummy<CustomBaseClass>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPublicSetNoneChild2
                             {
                                 ParentBoolProperty            = A.Dummy<bool>(),
                                 ParentIntProperty             = A.Dummy<int>(),
                                 ParentStringProperty          = A.Dummy<string>(),
                                 ParentGuidProperty            = A.Dummy<Guid>(),
                                 ParentDateTimeProperty        = A.Dummy<DateTime>(),
                                 ParentCustomEnumProperty      = A.Dummy<CustomEnum>(),
                                 ParentCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum>(),
                                 ParentCustomClassProperty     = A.Dummy<CustomClass>(),
                                 ParentCustomBaseClassProperty = A.Dummy<CustomBaseClass>(),
                                 Child2BoolProperty            = A.Dummy<bool>(),
                                 Child2IntProperty             = A.Dummy<int>(),
                                 Child2StringProperty          = A.Dummy<string>(),
                                 Child2GuidProperty            = A.Dummy<Guid>(),
                                 Child2DateTimeProperty        = A.Dummy<DateTime>(),
                                 Child2CustomEnumProperty      = A.Dummy<CustomEnum>(),
                                 Child2CustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum>(),
                                 Child2CustomClassProperty     = A.Dummy<CustomClass>(),
                                 Child2CustomBaseClassProperty = A.Dummy<CustomBaseClass>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelAllPublicSetNoneParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPublicSetNullable
                             {
                                 NullableBoolProperty            = A.Dummy<bool?>(),
                                 NullableIntProperty             = A.Dummy<int?>(),
                                 NullableGuidProperty            = A.Dummy<Guid?>(),
                                 NullableDateTimeProperty        = A.Dummy<DateTime?>(),
                                 NullableCustomEnumProperty      = A.Dummy<CustomEnum?>(),
                                 NullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPublicSetNullableChild1
                             {
                                 ParentNullableBoolProperty            = A.Dummy<bool?>(),
                                 ParentNullableIntProperty             = A.Dummy<int?>(),
                                 ParentNullableGuidProperty            = A.Dummy<Guid?>(),
                                 ParentNullableDateTimeProperty        = A.Dummy<DateTime?>(),
                                 ParentNullableCustomEnumProperty      = A.Dummy<CustomEnum?>(),
                                 ParentNullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?>(),
                                 Child1NullableBoolProperty            = A.Dummy<bool?>(),
                                 Child1NullableIntProperty             = A.Dummy<int?>(),
                                 Child1NullableGuidProperty            = A.Dummy<Guid?>(),
                                 Child1NullableDateTimeProperty        = A.Dummy<DateTime?>(),
                                 Child1NullableCustomEnumProperty      = A.Dummy<CustomEnum?>(),
                                 Child1NullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPublicSetNullableChild2
                             {
                                 ParentNullableBoolProperty            = A.Dummy<bool?>(),
                                 ParentNullableIntProperty             = A.Dummy<int?>(),
                                 ParentNullableGuidProperty            = A.Dummy<Guid?>(),
                                 ParentNullableDateTimeProperty        = A.Dummy<DateTime?>(),
                                 ParentNullableCustomEnumProperty      = A.Dummy<CustomEnum?>(),
                                 ParentNullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?>(),
                                 Child2NullableBoolProperty            = A.Dummy<bool?>(),
                                 Child2NullableIntProperty             = A.Dummy<int?>(),
                                 Child2NullableGuidProperty            = A.Dummy<Guid?>(),
                                 Child2NullableDateTimeProperty        = A.Dummy<DateTime?>(),
                                 Child2NullableCustomEnumProperty      = A.Dummy<CustomEnum?>(),
                                 Child2NullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelAllPublicSetNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPublicSetReadOnlyCollectionOfNullable
                             {
                                 ReadOnlyCollectionInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyCollection<bool?>>(),
                                 ReadOnlyCollectionInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyCollection<int?>>(),
                                 ReadOnlyCollectionInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 ReadOnlyCollectionInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 ReadOnlyCollectionInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 ReadOnlyCollectionInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPublicSetReadOnlyCollectionOfNullableChild1
                             {
                                 ParentReadOnlyCollectionInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyCollection<bool?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyCollection<int?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>(),
                                 Child1ReadOnlyCollectionInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyCollection<bool?>>(),
                                 Child1ReadOnlyCollectionInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyCollection<int?>>(),
                                 Child1ReadOnlyCollectionInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 Child1ReadOnlyCollectionInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 Child1ReadOnlyCollectionInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 Child1ReadOnlyCollectionInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPublicSetReadOnlyCollectionOfNullableChild2
                             {
                                 ParentReadOnlyCollectionInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyCollection<bool?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyCollection<int?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>(),
                                 Child2ReadOnlyCollectionInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyCollection<bool?>>(),
                                 Child2ReadOnlyCollectionInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyCollection<int?>>(),
                                 Child2ReadOnlyCollectionInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 Child2ReadOnlyCollectionInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 Child2ReadOnlyCollectionInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 Child2ReadOnlyCollectionInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelAllPublicSetReadOnlyCollectionOfNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPublicSetReadOnlyCollection
                             {
                                 ReadOnlyCollectionInterfaceOfBoolProperty            = A.Dummy<IReadOnlyCollection<bool>>(),
                                 ReadOnlyCollectionInterfaceOfIntProperty             = A.Dummy<IReadOnlyCollection<int>>(),
                                 ReadOnlyCollectionInterfaceOfStringProperty          = A.Dummy<IReadOnlyCollection<string>>(),
                                 ReadOnlyCollectionInterfaceOfGuidProperty            = A.Dummy<IReadOnlyCollection<Guid>>(),
                                 ReadOnlyCollectionInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 ReadOnlyCollectionInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 ReadOnlyCollectionInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 ReadOnlyCollectionInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyCollection<CustomBaseClass>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPublicSetReadOnlyCollectionChild1
                             {
                                 ParentReadOnlyCollectionInterfaceOfBoolProperty            = A.Dummy<IReadOnlyCollection<bool>>(),
                                 ParentReadOnlyCollectionInterfaceOfIntProperty             = A.Dummy<IReadOnlyCollection<int>>(),
                                 ParentReadOnlyCollectionInterfaceOfStringProperty          = A.Dummy<IReadOnlyCollection<string>>(),
                                 ParentReadOnlyCollectionInterfaceOfGuidProperty            = A.Dummy<IReadOnlyCollection<Guid>>(),
                                 ParentReadOnlyCollectionInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 ParentReadOnlyCollectionInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 ParentReadOnlyCollectionInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyCollection<CustomBaseClass>>(),
                                 Child1ReadOnlyCollectionInterfaceOfBoolProperty            = A.Dummy<IReadOnlyCollection<bool>>(),
                                 Child1ReadOnlyCollectionInterfaceOfIntProperty             = A.Dummy<IReadOnlyCollection<int>>(),
                                 Child1ReadOnlyCollectionInterfaceOfStringProperty          = A.Dummy<IReadOnlyCollection<string>>(),
                                 Child1ReadOnlyCollectionInterfaceOfGuidProperty            = A.Dummy<IReadOnlyCollection<Guid>>(),
                                 Child1ReadOnlyCollectionInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyCollection<CustomBaseClass>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPublicSetReadOnlyCollectionChild2
                             {
                                 ParentReadOnlyCollectionInterfaceOfBoolProperty            = A.Dummy<IReadOnlyCollection<bool>>(),
                                 ParentReadOnlyCollectionInterfaceOfIntProperty             = A.Dummy<IReadOnlyCollection<int>>(),
                                 ParentReadOnlyCollectionInterfaceOfStringProperty          = A.Dummy<IReadOnlyCollection<string>>(),
                                 ParentReadOnlyCollectionInterfaceOfGuidProperty            = A.Dummy<IReadOnlyCollection<Guid>>(),
                                 ParentReadOnlyCollectionInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 ParentReadOnlyCollectionInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 ParentReadOnlyCollectionInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyCollection<CustomBaseClass>>(),
                                 Child2ReadOnlyCollectionInterfaceOfBoolProperty            = A.Dummy<IReadOnlyCollection<bool>>(),
                                 Child2ReadOnlyCollectionInterfaceOfIntProperty             = A.Dummy<IReadOnlyCollection<int>>(),
                                 Child2ReadOnlyCollectionInterfaceOfStringProperty          = A.Dummy<IReadOnlyCollection<string>>(),
                                 Child2ReadOnlyCollectionInterfaceOfGuidProperty            = A.Dummy<IReadOnlyCollection<Guid>>(),
                                 Child2ReadOnlyCollectionInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 Child2ReadOnlyCollectionInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 Child2ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 Child2ReadOnlyCollectionInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 Child2ReadOnlyCollectionInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyCollection<CustomBaseClass>>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelAllPublicSetReadOnlyCollectionParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPublicSetReadOnlyDictionaryOfNullable
                             {
                                 ReadOnlyDictionaryInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 ReadOnlyDictionaryInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 ReadOnlyDictionaryInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 ReadOnlyDictionaryInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 ReadOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPublicSetReadOnlyDictionaryOfNullableChild1
                             {
                                 ParentReadOnlyDictionaryInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 ParentReadOnlyDictionaryInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 ParentReadOnlyDictionaryInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 ParentReadOnlyDictionaryInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 ParentReadOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPublicSetReadOnlyDictionaryOfNullableChild2
                             {
                                 ParentReadOnlyDictionaryInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 ParentReadOnlyDictionaryInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 ParentReadOnlyDictionaryInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 ParentReadOnlyDictionaryInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 ParentReadOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelAllPublicSetReadOnlyDictionaryOfNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPublicSetReadOnlyDictionary
                             {
                                 ReadOnlyDictionaryInterfaceOfBoolProperty            = A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 ReadOnlyDictionaryInterfaceOfIntProperty             = A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 ReadOnlyDictionaryInterfaceOfStringProperty          = A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 ReadOnlyDictionaryInterfaceOfGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 ReadOnlyDictionaryInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 ReadOnlyDictionaryInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 ReadOnlyDictionaryInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 ReadOnlyDictionaryInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPublicSetReadOnlyDictionaryChild1
                             {
                                 ParentReadOnlyDictionaryInterfaceOfBoolProperty            = A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 ParentReadOnlyDictionaryInterfaceOfIntProperty             = A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 ParentReadOnlyDictionaryInterfaceOfStringProperty          = A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 ParentReadOnlyDictionaryInterfaceOfGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfBoolProperty            = A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfIntProperty             = A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfStringProperty          = A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPublicSetReadOnlyDictionaryChild2
                             {
                                 ParentReadOnlyDictionaryInterfaceOfBoolProperty            = A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 ParentReadOnlyDictionaryInterfaceOfIntProperty             = A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 ParentReadOnlyDictionaryInterfaceOfStringProperty          = A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 ParentReadOnlyDictionaryInterfaceOfGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfBoolProperty            = A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfIntProperty             = A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfStringProperty          = A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelAllPublicSetReadOnlyDictionaryParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPublicSetReadOnlyListOfNullable
                             {
                                 ReadOnlyListInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyList<bool?>>(),
                                 ReadOnlyListInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyList<int?>>(),
                                 ReadOnlyListInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyList<Guid?>>(),
                                 ReadOnlyListInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime?>>(),
                                 ReadOnlyListInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 ReadOnlyListInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum?>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPublicSetReadOnlyListOfNullableChild1
                             {
                                 ParentReadOnlyListInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyList<bool?>>(),
                                 ParentReadOnlyListInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyList<int?>>(),
                                 ParentReadOnlyListInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyList<Guid?>>(),
                                 ParentReadOnlyListInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime?>>(),
                                 ParentReadOnlyListInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 ParentReadOnlyListInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum?>>(),
                                 Child1ReadOnlyListInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyList<bool?>>(),
                                 Child1ReadOnlyListInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyList<int?>>(),
                                 Child1ReadOnlyListInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyList<Guid?>>(),
                                 Child1ReadOnlyListInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime?>>(),
                                 Child1ReadOnlyListInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 Child1ReadOnlyListInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum?>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPublicSetReadOnlyListOfNullableChild2
                             {
                                 ParentReadOnlyListInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyList<bool?>>(),
                                 ParentReadOnlyListInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyList<int?>>(),
                                 ParentReadOnlyListInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyList<Guid?>>(),
                                 ParentReadOnlyListInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime?>>(),
                                 ParentReadOnlyListInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 ParentReadOnlyListInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum?>>(),
                                 Child2ReadOnlyListInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyList<bool?>>(),
                                 Child2ReadOnlyListInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyList<int?>>(),
                                 Child2ReadOnlyListInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyList<Guid?>>(),
                                 Child2ReadOnlyListInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime?>>(),
                                 Child2ReadOnlyListInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 Child2ReadOnlyListInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum?>>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelAllPublicSetReadOnlyListOfNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPublicSetReadOnlyList
                             {
                                 ReadOnlyListInterfaceOfBoolProperty            = A.Dummy<IReadOnlyList<bool>>(),
                                 ReadOnlyListInterfaceOfIntProperty             = A.Dummy<IReadOnlyList<int>>(),
                                 ReadOnlyListInterfaceOfStringProperty          = A.Dummy<IReadOnlyList<string>>(),
                                 ReadOnlyListInterfaceOfGuidProperty            = A.Dummy<IReadOnlyList<Guid>>(),
                                 ReadOnlyListInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime>>(),
                                 ReadOnlyListInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 ReadOnlyListInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 ReadOnlyListInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyList<CustomClass>>(),
                                 ReadOnlyListInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyList<CustomBaseClass>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPublicSetReadOnlyListChild1
                             {
                                 ParentReadOnlyListInterfaceOfBoolProperty            = A.Dummy<IReadOnlyList<bool>>(),
                                 ParentReadOnlyListInterfaceOfIntProperty             = A.Dummy<IReadOnlyList<int>>(),
                                 ParentReadOnlyListInterfaceOfStringProperty          = A.Dummy<IReadOnlyList<string>>(),
                                 ParentReadOnlyListInterfaceOfGuidProperty            = A.Dummy<IReadOnlyList<Guid>>(),
                                 ParentReadOnlyListInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime>>(),
                                 ParentReadOnlyListInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 ParentReadOnlyListInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyList<CustomClass>>(),
                                 ParentReadOnlyListInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyList<CustomBaseClass>>(),
                                 Child1ReadOnlyListInterfaceOfBoolProperty            = A.Dummy<IReadOnlyList<bool>>(),
                                 Child1ReadOnlyListInterfaceOfIntProperty             = A.Dummy<IReadOnlyList<int>>(),
                                 Child1ReadOnlyListInterfaceOfStringProperty          = A.Dummy<IReadOnlyList<string>>(),
                                 Child1ReadOnlyListInterfaceOfGuidProperty            = A.Dummy<IReadOnlyList<Guid>>(),
                                 Child1ReadOnlyListInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime>>(),
                                 Child1ReadOnlyListInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 Child1ReadOnlyListInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyList<CustomClass>>(),
                                 Child1ReadOnlyListInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyList<CustomBaseClass>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelAllPublicSetReadOnlyListChild2
                             {
                                 ParentReadOnlyListInterfaceOfBoolProperty            = A.Dummy<IReadOnlyList<bool>>(),
                                 ParentReadOnlyListInterfaceOfIntProperty             = A.Dummy<IReadOnlyList<int>>(),
                                 ParentReadOnlyListInterfaceOfStringProperty          = A.Dummy<IReadOnlyList<string>>(),
                                 ParentReadOnlyListInterfaceOfGuidProperty            = A.Dummy<IReadOnlyList<Guid>>(),
                                 ParentReadOnlyListInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime>>(),
                                 ParentReadOnlyListInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 ParentReadOnlyListInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyList<CustomClass>>(),
                                 ParentReadOnlyListInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyList<CustomBaseClass>>(),
                                 Child2ReadOnlyListInterfaceOfBoolProperty            = A.Dummy<IReadOnlyList<bool>>(),
                                 Child2ReadOnlyListInterfaceOfIntProperty             = A.Dummy<IReadOnlyList<int>>(),
                                 Child2ReadOnlyListInterfaceOfStringProperty          = A.Dummy<IReadOnlyList<string>>(),
                                 Child2ReadOnlyListInterfaceOfGuidProperty            = A.Dummy<IReadOnlyList<Guid>>(),
                                 Child2ReadOnlyListInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime>>(),
                                 Child2ReadOnlyListInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 Child2ReadOnlyListInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 Child2ReadOnlyListInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyList<CustomClass>>(),
                                 Child2ReadOnlyListInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyList<CustomBaseClass>>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelAllPublicSetReadOnlyListParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPrivateSetArrayOfNullable(
                                 A.Dummy<bool?[]>(),
                                 A.Dummy<int?[]>(),
                                 A.Dummy<Guid?[]>(),
                                 A.Dummy<DateTime?[]>(),
                                 A.Dummy<CustomEnum?[]>(),
                                 A.Dummy<CustomFlagsEnum?[]>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPrivateSetArrayOfNullableChild1(
                                 A.Dummy<bool?[]>(),
                                 A.Dummy<int?[]>(),
                                 A.Dummy<Guid?[]>(),
                                 A.Dummy<DateTime?[]>(),
                                 A.Dummy<CustomEnum?[]>(),
                                 A.Dummy<CustomFlagsEnum?[]>(),
                                 A.Dummy<bool?[]>(),
                                 A.Dummy<int?[]>(),
                                 A.Dummy<Guid?[]>(),
                                 A.Dummy<DateTime?[]>(),
                                 A.Dummy<CustomEnum?[]>(),
                                 A.Dummy<CustomFlagsEnum?[]>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPrivateSetArrayOfNullableChild2(
                                 A.Dummy<bool?[]>(),
                                 A.Dummy<int?[]>(),
                                 A.Dummy<Guid?[]>(),
                                 A.Dummy<DateTime?[]>(),
                                 A.Dummy<CustomEnum?[]>(),
                                 A.Dummy<CustomFlagsEnum?[]>(),
                                 A.Dummy<bool?[]>(),
                                 A.Dummy<int?[]>(),
                                 A.Dummy<Guid?[]>(),
                                 A.Dummy<DateTime?[]>(),
                                 A.Dummy<CustomEnum?[]>(),
                                 A.Dummy<CustomFlagsEnum?[]>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelCloningPrivateSetArrayOfNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPrivateSetArray(
                                 A.Dummy<bool[]>(),
                                 A.Dummy<int[]>(),
                                 A.Dummy<string[]>(),
                                 A.Dummy<Guid[]>(),
                                 A.Dummy<DateTime[]>(),
                                 A.Dummy<CustomEnum[]>(),
                                 A.Dummy<CustomFlagsEnum[]>(),
                                 A.Dummy<CustomClass[]>(),
                                 A.Dummy<CustomBaseClass[]>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPrivateSetArrayChild1(
                                 A.Dummy<bool[]>(),
                                 A.Dummy<int[]>(),
                                 A.Dummy<string[]>(),
                                 A.Dummy<Guid[]>(),
                                 A.Dummy<DateTime[]>(),
                                 A.Dummy<CustomEnum[]>(),
                                 A.Dummy<CustomFlagsEnum[]>(),
                                 A.Dummy<CustomClass[]>(),
                                 A.Dummy<CustomBaseClass[]>(),
                                 A.Dummy<bool[]>(),
                                 A.Dummy<int[]>(),
                                 A.Dummy<string[]>(),
                                 A.Dummy<Guid[]>(),
                                 A.Dummy<DateTime[]>(),
                                 A.Dummy<CustomEnum[]>(),
                                 A.Dummy<CustomFlagsEnum[]>(),
                                 A.Dummy<CustomClass[]>(),
                                 A.Dummy<CustomBaseClass[]>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPrivateSetArrayChild2(
                                 A.Dummy<bool[]>(),
                                 A.Dummy<int[]>(),
                                 A.Dummy<string[]>(),
                                 A.Dummy<Guid[]>(),
                                 A.Dummy<DateTime[]>(),
                                 A.Dummy<CustomEnum[]>(),
                                 A.Dummy<CustomFlagsEnum[]>(),
                                 A.Dummy<CustomClass[]>(),
                                 A.Dummy<CustomBaseClass[]>(),
                                 A.Dummy<bool[]>(),
                                 A.Dummy<int[]>(),
                                 A.Dummy<string[]>(),
                                 A.Dummy<Guid[]>(),
                                 A.Dummy<DateTime[]>(),
                                 A.Dummy<CustomEnum[]>(),
                                 A.Dummy<CustomFlagsEnum[]>(),
                                 A.Dummy<CustomClass[]>(),
                                 A.Dummy<CustomBaseClass[]>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelCloningPrivateSetArrayParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPrivateSetMisc(
                                 A.Dummy<ICollection<string>>(),
                                 A.Dummy<IList<string>>(),
                                 A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 A.Dummy<IList<ICollection<string>>>(),
                                 A.Dummy<IReadOnlyList<IList<string>>>(),
                                 A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPrivateSetMiscChild1(
                                 A.Dummy<ICollection<string>>(),
                                 A.Dummy<IList<string>>(),
                                 A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 A.Dummy<IList<ICollection<string>>>(),
                                 A.Dummy<IReadOnlyList<IList<string>>>(),
                                 A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>(),
                                 A.Dummy<ICollection<string>>(),
                                 A.Dummy<IList<string>>(),
                                 A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 A.Dummy<IList<ICollection<string>>>(),
                                 A.Dummy<IReadOnlyList<IList<string>>>(),
                                 A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPrivateSetMiscChild2(
                                 A.Dummy<ICollection<string>>(),
                                 A.Dummy<IList<string>>(),
                                 A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 A.Dummy<IList<ICollection<string>>>(),
                                 A.Dummy<IReadOnlyList<IList<string>>>(),
                                 A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>(),
                                 A.Dummy<ICollection<string>>(),
                                 A.Dummy<IList<string>>(),
                                 A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 A.Dummy<IList<ICollection<string>>>(),
                                 A.Dummy<IReadOnlyList<IList<string>>>(),
                                 A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelCloningPrivateSetMiscParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPrivateSetNone(
                                 A.Dummy<bool>(),
                                 A.Dummy<int>(),
                                 A.Dummy<string>(),
                                 A.Dummy<Guid>(),
                                 A.Dummy<DateTime>(),
                                 A.Dummy<CustomEnum>(),
                                 A.Dummy<CustomFlagsEnum>(),
                                 A.Dummy<CustomClass>(),
                                 A.Dummy<CustomBaseClass>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPrivateSetNoneChild1(
                                 A.Dummy<bool>(),
                                 A.Dummy<int>(),
                                 A.Dummy<string>(),
                                 A.Dummy<Guid>(),
                                 A.Dummy<DateTime>(),
                                 A.Dummy<CustomEnum>(),
                                 A.Dummy<CustomFlagsEnum>(),
                                 A.Dummy<CustomClass>(),
                                 A.Dummy<CustomBaseClass>(),
                                 A.Dummy<bool>(),
                                 A.Dummy<int>(),
                                 A.Dummy<string>(),
                                 A.Dummy<Guid>(),
                                 A.Dummy<DateTime>(),
                                 A.Dummy<CustomEnum>(),
                                 A.Dummy<CustomFlagsEnum>(),
                                 A.Dummy<CustomClass>(),
                                 A.Dummy<CustomBaseClass>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPrivateSetNoneChild2(
                                 A.Dummy<bool>(),
                                 A.Dummy<int>(),
                                 A.Dummy<string>(),
                                 A.Dummy<Guid>(),
                                 A.Dummy<DateTime>(),
                                 A.Dummy<CustomEnum>(),
                                 A.Dummy<CustomFlagsEnum>(),
                                 A.Dummy<CustomClass>(),
                                 A.Dummy<CustomBaseClass>(),
                                 A.Dummy<bool>(),
                                 A.Dummy<int>(),
                                 A.Dummy<string>(),
                                 A.Dummy<Guid>(),
                                 A.Dummy<DateTime>(),
                                 A.Dummy<CustomEnum>(),
                                 A.Dummy<CustomFlagsEnum>(),
                                 A.Dummy<CustomClass>(),
                                 A.Dummy<CustomBaseClass>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelCloningPrivateSetNoneParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPrivateSetNullable(
                                 A.Dummy<bool?>(),
                                 A.Dummy<int?>(),
                                 A.Dummy<Guid?>(),
                                 A.Dummy<DateTime?>(),
                                 A.Dummy<CustomEnum?>(),
                                 A.Dummy<CustomFlagsEnum?>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPrivateSetNullableChild1(
                                 A.Dummy<bool?>(),
                                 A.Dummy<int?>(),
                                 A.Dummy<Guid?>(),
                                 A.Dummy<DateTime?>(),
                                 A.Dummy<CustomEnum?>(),
                                 A.Dummy<CustomFlagsEnum?>(),
                                 A.Dummy<bool?>(),
                                 A.Dummy<int?>(),
                                 A.Dummy<Guid?>(),
                                 A.Dummy<DateTime?>(),
                                 A.Dummy<CustomEnum?>(),
                                 A.Dummy<CustomFlagsEnum?>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPrivateSetNullableChild2(
                                 A.Dummy<bool?>(),
                                 A.Dummy<int?>(),
                                 A.Dummy<Guid?>(),
                                 A.Dummy<DateTime?>(),
                                 A.Dummy<CustomEnum?>(),
                                 A.Dummy<CustomFlagsEnum?>(),
                                 A.Dummy<bool?>(),
                                 A.Dummy<int?>(),
                                 A.Dummy<Guid?>(),
                                 A.Dummy<DateTime?>(),
                                 A.Dummy<CustomEnum?>(),
                                 A.Dummy<CustomFlagsEnum?>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelCloningPrivateSetNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPrivateSetReadOnlyCollectionOfNullable(
                                 A.Dummy<IReadOnlyCollection<bool?>>(),
                                 A.Dummy<IReadOnlyCollection<int?>>(),
                                 A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPrivateSetReadOnlyCollectionOfNullableChild1(
                                 A.Dummy<IReadOnlyCollection<bool?>>(),
                                 A.Dummy<IReadOnlyCollection<int?>>(),
                                 A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>(),
                                 A.Dummy<IReadOnlyCollection<bool?>>(),
                                 A.Dummy<IReadOnlyCollection<int?>>(),
                                 A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPrivateSetReadOnlyCollectionOfNullableChild2(
                                 A.Dummy<IReadOnlyCollection<bool?>>(),
                                 A.Dummy<IReadOnlyCollection<int?>>(),
                                 A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>(),
                                 A.Dummy<IReadOnlyCollection<bool?>>(),
                                 A.Dummy<IReadOnlyCollection<int?>>(),
                                 A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelCloningPrivateSetReadOnlyCollectionOfNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPrivateSetReadOnlyCollection(
                                 A.Dummy<IReadOnlyCollection<bool>>(),
                                 A.Dummy<IReadOnlyCollection<int>>(),
                                 A.Dummy<IReadOnlyCollection<string>>(),
                                 A.Dummy<IReadOnlyCollection<Guid>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 A.Dummy<IReadOnlyCollection<CustomBaseClass>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPrivateSetReadOnlyCollectionChild1(
                                 A.Dummy<IReadOnlyCollection<bool>>(),
                                 A.Dummy<IReadOnlyCollection<int>>(),
                                 A.Dummy<IReadOnlyCollection<string>>(),
                                 A.Dummy<IReadOnlyCollection<Guid>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 A.Dummy<IReadOnlyCollection<CustomBaseClass>>(),
                                 A.Dummy<IReadOnlyCollection<bool>>(),
                                 A.Dummy<IReadOnlyCollection<int>>(),
                                 A.Dummy<IReadOnlyCollection<string>>(),
                                 A.Dummy<IReadOnlyCollection<Guid>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 A.Dummy<IReadOnlyCollection<CustomBaseClass>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPrivateSetReadOnlyCollectionChild2(
                                 A.Dummy<IReadOnlyCollection<bool>>(),
                                 A.Dummy<IReadOnlyCollection<int>>(),
                                 A.Dummy<IReadOnlyCollection<string>>(),
                                 A.Dummy<IReadOnlyCollection<Guid>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 A.Dummy<IReadOnlyCollection<CustomBaseClass>>(),
                                 A.Dummy<IReadOnlyCollection<bool>>(),
                                 A.Dummy<IReadOnlyCollection<int>>(),
                                 A.Dummy<IReadOnlyCollection<string>>(),
                                 A.Dummy<IReadOnlyCollection<Guid>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 A.Dummy<IReadOnlyCollection<CustomBaseClass>>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelCloningPrivateSetReadOnlyCollectionParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPrivateSetReadOnlyDictionaryOfNullable(
                                 A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPrivateSetReadOnlyDictionaryOfNullableChild1(
                                 A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>(),
                                 A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPrivateSetReadOnlyDictionaryOfNullableChild2(
                                 A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>(),
                                 A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelCloningPrivateSetReadOnlyDictionaryOfNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPrivateSetReadOnlyDictionary(
                                 A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPrivateSetReadOnlyDictionaryChild1(
                                 A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>(),
                                 A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPrivateSetReadOnlyDictionaryChild2(
                                 A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>(),
                                 A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelCloningPrivateSetReadOnlyDictionaryParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPrivateSetReadOnlyListOfNullable(
                                 A.Dummy<IReadOnlyList<bool?>>(),
                                 A.Dummy<IReadOnlyList<int?>>(),
                                 A.Dummy<IReadOnlyList<Guid?>>(),
                                 A.Dummy<IReadOnlyList<DateTime?>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum?>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPrivateSetReadOnlyListOfNullableChild1(
                                 A.Dummy<IReadOnlyList<bool?>>(),
                                 A.Dummy<IReadOnlyList<int?>>(),
                                 A.Dummy<IReadOnlyList<Guid?>>(),
                                 A.Dummy<IReadOnlyList<DateTime?>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum?>>(),
                                 A.Dummy<IReadOnlyList<bool?>>(),
                                 A.Dummy<IReadOnlyList<int?>>(),
                                 A.Dummy<IReadOnlyList<Guid?>>(),
                                 A.Dummy<IReadOnlyList<DateTime?>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum?>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPrivateSetReadOnlyListOfNullableChild2(
                                 A.Dummy<IReadOnlyList<bool?>>(),
                                 A.Dummy<IReadOnlyList<int?>>(),
                                 A.Dummy<IReadOnlyList<Guid?>>(),
                                 A.Dummy<IReadOnlyList<DateTime?>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum?>>(),
                                 A.Dummy<IReadOnlyList<bool?>>(),
                                 A.Dummy<IReadOnlyList<int?>>(),
                                 A.Dummy<IReadOnlyList<Guid?>>(),
                                 A.Dummy<IReadOnlyList<DateTime?>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum?>>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelCloningPrivateSetReadOnlyListOfNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPrivateSetReadOnlyList(
                                 A.Dummy<IReadOnlyList<bool>>(),
                                 A.Dummy<IReadOnlyList<int>>(),
                                 A.Dummy<IReadOnlyList<string>>(),
                                 A.Dummy<IReadOnlyList<Guid>>(),
                                 A.Dummy<IReadOnlyList<DateTime>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomClass>>(),
                                 A.Dummy<IReadOnlyList<CustomBaseClass>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPrivateSetReadOnlyListChild1(
                                 A.Dummy<IReadOnlyList<bool>>(),
                                 A.Dummy<IReadOnlyList<int>>(),
                                 A.Dummy<IReadOnlyList<string>>(),
                                 A.Dummy<IReadOnlyList<Guid>>(),
                                 A.Dummy<IReadOnlyList<DateTime>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomClass>>(),
                                 A.Dummy<IReadOnlyList<CustomBaseClass>>(),
                                 A.Dummy<IReadOnlyList<bool>>(),
                                 A.Dummy<IReadOnlyList<int>>(),
                                 A.Dummy<IReadOnlyList<string>>(),
                                 A.Dummy<IReadOnlyList<Guid>>(),
                                 A.Dummy<IReadOnlyList<DateTime>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomClass>>(),
                                 A.Dummy<IReadOnlyList<CustomBaseClass>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPrivateSetReadOnlyListChild2(
                                 A.Dummy<IReadOnlyList<bool>>(),
                                 A.Dummy<IReadOnlyList<int>>(),
                                 A.Dummy<IReadOnlyList<string>>(),
                                 A.Dummy<IReadOnlyList<Guid>>(),
                                 A.Dummy<IReadOnlyList<DateTime>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomClass>>(),
                                 A.Dummy<IReadOnlyList<CustomBaseClass>>(),
                                 A.Dummy<IReadOnlyList<bool>>(),
                                 A.Dummy<IReadOnlyList<int>>(),
                                 A.Dummy<IReadOnlyList<string>>(),
                                 A.Dummy<IReadOnlyList<Guid>>(),
                                 A.Dummy<IReadOnlyList<DateTime>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomClass>>(),
                                 A.Dummy<IReadOnlyList<CustomBaseClass>>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelCloningPrivateSetReadOnlyListParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPublicSetArrayOfNullable
                             {
                                 ArrayOfNullableBoolProperty            = A.Dummy<bool?[]>(),
                                 ArrayOfNullableIntProperty             = A.Dummy<int?[]>(),
                                 ArrayOfNullableGuidProperty            = A.Dummy<Guid?[]>(),
                                 ArrayOfNullableDateTimeProperty        = A.Dummy<DateTime?[]>(),
                                 ArrayOfNullableCustomEnumProperty      = A.Dummy<CustomEnum?[]>(),
                                 ArrayOfNullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?[]>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPublicSetArrayOfNullableChild1
                             {
                                 ParentArrayOfNullableBoolProperty            = A.Dummy<bool?[]>(),
                                 ParentArrayOfNullableIntProperty             = A.Dummy<int?[]>(),
                                 ParentArrayOfNullableGuidProperty            = A.Dummy<Guid?[]>(),
                                 ParentArrayOfNullableDateTimeProperty        = A.Dummy<DateTime?[]>(),
                                 ParentArrayOfNullableCustomEnumProperty      = A.Dummy<CustomEnum?[]>(),
                                 ParentArrayOfNullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?[]>(),
                                 Child1ArrayOfNullableBoolProperty            = A.Dummy<bool?[]>(),
                                 Child1ArrayOfNullableIntProperty             = A.Dummy<int?[]>(),
                                 Child1ArrayOfNullableGuidProperty            = A.Dummy<Guid?[]>(),
                                 Child1ArrayOfNullableDateTimeProperty        = A.Dummy<DateTime?[]>(),
                                 Child1ArrayOfNullableCustomEnumProperty      = A.Dummy<CustomEnum?[]>(),
                                 Child1ArrayOfNullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?[]>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPublicSetArrayOfNullableChild2
                             {
                                 ParentArrayOfNullableBoolProperty            = A.Dummy<bool?[]>(),
                                 ParentArrayOfNullableIntProperty             = A.Dummy<int?[]>(),
                                 ParentArrayOfNullableGuidProperty            = A.Dummy<Guid?[]>(),
                                 ParentArrayOfNullableDateTimeProperty        = A.Dummy<DateTime?[]>(),
                                 ParentArrayOfNullableCustomEnumProperty      = A.Dummy<CustomEnum?[]>(),
                                 ParentArrayOfNullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?[]>(),
                                 Child2ArrayOfNullableBoolProperty            = A.Dummy<bool?[]>(),
                                 Child2ArrayOfNullableIntProperty             = A.Dummy<int?[]>(),
                                 Child2ArrayOfNullableGuidProperty            = A.Dummy<Guid?[]>(),
                                 Child2ArrayOfNullableDateTimeProperty        = A.Dummy<DateTime?[]>(),
                                 Child2ArrayOfNullableCustomEnumProperty      = A.Dummy<CustomEnum?[]>(),
                                 Child2ArrayOfNullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?[]>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelCloningPublicSetArrayOfNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPublicSetArray
                             {
                                 ArrayOfBoolProperty            = A.Dummy<bool[]>(),
                                 ArrayOfIntProperty             = A.Dummy<int[]>(),
                                 ArrayOfStringProperty          = A.Dummy<string[]>(),
                                 ArrayOfGuidProperty            = A.Dummy<Guid[]>(),
                                 ArrayOfDateTimeProperty        = A.Dummy<DateTime[]>(),
                                 ArrayOfCustomEnumProperty      = A.Dummy<CustomEnum[]>(),
                                 ArrayOfCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum[]>(),
                                 ArrayOfCustomClassProperty     = A.Dummy<CustomClass[]>(),
                                 ArrayOfCustomBaseClassProperty = A.Dummy<CustomBaseClass[]>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPublicSetArrayChild1
                             {
                                 ParentArrayOfBoolProperty            = A.Dummy<bool[]>(),
                                 ParentArrayOfIntProperty             = A.Dummy<int[]>(),
                                 ParentArrayOfStringProperty          = A.Dummy<string[]>(),
                                 ParentArrayOfGuidProperty            = A.Dummy<Guid[]>(),
                                 ParentArrayOfDateTimeProperty        = A.Dummy<DateTime[]>(),
                                 ParentArrayOfCustomEnumProperty      = A.Dummy<CustomEnum[]>(),
                                 ParentArrayOfCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum[]>(),
                                 ParentArrayOfCustomClassProperty     = A.Dummy<CustomClass[]>(),
                                 ParentArrayOfCustomBaseClassProperty = A.Dummy<CustomBaseClass[]>(),
                                 Child1ArrayOfBoolProperty            = A.Dummy<bool[]>(),
                                 Child1ArrayOfIntProperty             = A.Dummy<int[]>(),
                                 Child1ArrayOfStringProperty          = A.Dummy<string[]>(),
                                 Child1ArrayOfGuidProperty            = A.Dummy<Guid[]>(),
                                 Child1ArrayOfDateTimeProperty        = A.Dummy<DateTime[]>(),
                                 Child1ArrayOfCustomEnumProperty      = A.Dummy<CustomEnum[]>(),
                                 Child1ArrayOfCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum[]>(),
                                 Child1ArrayOfCustomClassProperty     = A.Dummy<CustomClass[]>(),
                                 Child1ArrayOfCustomBaseClassProperty = A.Dummy<CustomBaseClass[]>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPublicSetArrayChild2
                             {
                                 ParentArrayOfBoolProperty            = A.Dummy<bool[]>(),
                                 ParentArrayOfIntProperty             = A.Dummy<int[]>(),
                                 ParentArrayOfStringProperty          = A.Dummy<string[]>(),
                                 ParentArrayOfGuidProperty            = A.Dummy<Guid[]>(),
                                 ParentArrayOfDateTimeProperty        = A.Dummy<DateTime[]>(),
                                 ParentArrayOfCustomEnumProperty      = A.Dummy<CustomEnum[]>(),
                                 ParentArrayOfCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum[]>(),
                                 ParentArrayOfCustomClassProperty     = A.Dummy<CustomClass[]>(),
                                 ParentArrayOfCustomBaseClassProperty = A.Dummy<CustomBaseClass[]>(),
                                 Child2ArrayOfBoolProperty            = A.Dummy<bool[]>(),
                                 Child2ArrayOfIntProperty             = A.Dummy<int[]>(),
                                 Child2ArrayOfStringProperty          = A.Dummy<string[]>(),
                                 Child2ArrayOfGuidProperty            = A.Dummy<Guid[]>(),
                                 Child2ArrayOfDateTimeProperty        = A.Dummy<DateTime[]>(),
                                 Child2ArrayOfCustomEnumProperty      = A.Dummy<CustomEnum[]>(),
                                 Child2ArrayOfCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum[]>(),
                                 Child2ArrayOfCustomClassProperty     = A.Dummy<CustomClass[]>(),
                                 Child2ArrayOfCustomBaseClassProperty = A.Dummy<CustomBaseClass[]>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelCloningPublicSetArrayParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPublicSetMisc
                             {
                                 CollectionInterfaceOfStringProperty                                                                                    = A.Dummy<ICollection<string>>(),
                                 ListInterfaceOfStringProperty                                                                                          = A.Dummy<IList<string>>(),
                                 ReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty                                                       = A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 CollectionInterfaceOfReadOnlyListInterfaceOfStringProperty                                                             = A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 ListInterfaceOfCollectionInterfaceOfStringProperty                                                                     = A.Dummy<IList<ICollection<string>>>(),
                                 ReadOnlyListInterfaceOfListInterfaceOfStringProperty                                                                   = A.Dummy<IReadOnlyList<IList<string>>>(),
                                 DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                                                           = A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 ReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty                                                     = A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                            = A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty = A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPublicSetMiscChild1
                             {
                                 ParentCollectionInterfaceOfStringProperty                                                                                    = A.Dummy<ICollection<string>>(),
                                 ParentListInterfaceOfStringProperty                                                                                          = A.Dummy<IList<string>>(),
                                 ParentReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty                                                       = A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 ParentCollectionInterfaceOfReadOnlyListInterfaceOfStringProperty                                                             = A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 ParentListInterfaceOfCollectionInterfaceOfStringProperty                                                                     = A.Dummy<IList<ICollection<string>>>(),
                                 ParentReadOnlyListInterfaceOfListInterfaceOfStringProperty                                                                   = A.Dummy<IReadOnlyList<IList<string>>>(),
                                 ParentDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                                                           = A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty                                                     = A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 ParentReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                            = A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 ParentReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty = A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>(),
                                 Child1CollectionInterfaceOfStringProperty                                                                                    = A.Dummy<ICollection<string>>(),
                                 Child1ListInterfaceOfStringProperty                                                                                          = A.Dummy<IList<string>>(),
                                 Child1ReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty                                                       = A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 Child1CollectionInterfaceOfReadOnlyListInterfaceOfStringProperty                                                             = A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 Child1ListInterfaceOfCollectionInterfaceOfStringProperty                                                                     = A.Dummy<IList<ICollection<string>>>(),
                                 Child1ReadOnlyListInterfaceOfListInterfaceOfStringProperty                                                                   = A.Dummy<IReadOnlyList<IList<string>>>(),
                                 Child1DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                                                           = A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty                                                     = A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 Child1ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                            = A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty = A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPublicSetMiscChild2
                             {
                                 ParentCollectionInterfaceOfStringProperty                                                                                    = A.Dummy<ICollection<string>>(),
                                 ParentListInterfaceOfStringProperty                                                                                          = A.Dummy<IList<string>>(),
                                 ParentReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty                                                       = A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 ParentCollectionInterfaceOfReadOnlyListInterfaceOfStringProperty                                                             = A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 ParentListInterfaceOfCollectionInterfaceOfStringProperty                                                                     = A.Dummy<IList<ICollection<string>>>(),
                                 ParentReadOnlyListInterfaceOfListInterfaceOfStringProperty                                                                   = A.Dummy<IReadOnlyList<IList<string>>>(),
                                 ParentDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                                                           = A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty                                                     = A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 ParentReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                            = A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 ParentReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty = A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>(),
                                 Child2CollectionInterfaceOfStringProperty                                                                                    = A.Dummy<ICollection<string>>(),
                                 Child2ListInterfaceOfStringProperty                                                                                          = A.Dummy<IList<string>>(),
                                 Child2ReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty                                                       = A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 Child2CollectionInterfaceOfReadOnlyListInterfaceOfStringProperty                                                             = A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 Child2ListInterfaceOfCollectionInterfaceOfStringProperty                                                                     = A.Dummy<IList<ICollection<string>>>(),
                                 Child2ReadOnlyListInterfaceOfListInterfaceOfStringProperty                                                                   = A.Dummy<IReadOnlyList<IList<string>>>(),
                                 Child2DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                                                           = A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty                                                     = A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 Child2ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                            = A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty = A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelCloningPublicSetMiscParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPublicSetNone
                             {
                                 BoolProperty            = A.Dummy<bool>(),
                                 IntProperty             = A.Dummy<int>(),
                                 StringProperty          = A.Dummy<string>(),
                                 GuidProperty            = A.Dummy<Guid>(),
                                 DateTimeProperty        = A.Dummy<DateTime>(),
                                 CustomEnumProperty      = A.Dummy<CustomEnum>(),
                                 CustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum>(),
                                 CustomClassProperty     = A.Dummy<CustomClass>(),
                                 CustomBaseClassProperty = A.Dummy<CustomBaseClass>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPublicSetNoneChild1
                             {
                                 ParentBoolProperty            = A.Dummy<bool>(),
                                 ParentIntProperty             = A.Dummy<int>(),
                                 ParentStringProperty          = A.Dummy<string>(),
                                 ParentGuidProperty            = A.Dummy<Guid>(),
                                 ParentDateTimeProperty        = A.Dummy<DateTime>(),
                                 ParentCustomEnumProperty      = A.Dummy<CustomEnum>(),
                                 ParentCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum>(),
                                 ParentCustomClassProperty     = A.Dummy<CustomClass>(),
                                 ParentCustomBaseClassProperty = A.Dummy<CustomBaseClass>(),
                                 Child1BoolProperty            = A.Dummy<bool>(),
                                 Child1IntProperty             = A.Dummy<int>(),
                                 Child1StringProperty          = A.Dummy<string>(),
                                 Child1GuidProperty            = A.Dummy<Guid>(),
                                 Child1DateTimeProperty        = A.Dummy<DateTime>(),
                                 Child1CustomEnumProperty      = A.Dummy<CustomEnum>(),
                                 Child1CustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum>(),
                                 Child1CustomClassProperty     = A.Dummy<CustomClass>(),
                                 Child1CustomBaseClassProperty = A.Dummy<CustomBaseClass>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPublicSetNoneChild2
                             {
                                 ParentBoolProperty            = A.Dummy<bool>(),
                                 ParentIntProperty             = A.Dummy<int>(),
                                 ParentStringProperty          = A.Dummy<string>(),
                                 ParentGuidProperty            = A.Dummy<Guid>(),
                                 ParentDateTimeProperty        = A.Dummy<DateTime>(),
                                 ParentCustomEnumProperty      = A.Dummy<CustomEnum>(),
                                 ParentCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum>(),
                                 ParentCustomClassProperty     = A.Dummy<CustomClass>(),
                                 ParentCustomBaseClassProperty = A.Dummy<CustomBaseClass>(),
                                 Child2BoolProperty            = A.Dummy<bool>(),
                                 Child2IntProperty             = A.Dummy<int>(),
                                 Child2StringProperty          = A.Dummy<string>(),
                                 Child2GuidProperty            = A.Dummy<Guid>(),
                                 Child2DateTimeProperty        = A.Dummy<DateTime>(),
                                 Child2CustomEnumProperty      = A.Dummy<CustomEnum>(),
                                 Child2CustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum>(),
                                 Child2CustomClassProperty     = A.Dummy<CustomClass>(),
                                 Child2CustomBaseClassProperty = A.Dummy<CustomBaseClass>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelCloningPublicSetNoneParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPublicSetNullable
                             {
                                 NullableBoolProperty            = A.Dummy<bool?>(),
                                 NullableIntProperty             = A.Dummy<int?>(),
                                 NullableGuidProperty            = A.Dummy<Guid?>(),
                                 NullableDateTimeProperty        = A.Dummy<DateTime?>(),
                                 NullableCustomEnumProperty      = A.Dummy<CustomEnum?>(),
                                 NullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPublicSetNullableChild1
                             {
                                 ParentNullableBoolProperty            = A.Dummy<bool?>(),
                                 ParentNullableIntProperty             = A.Dummy<int?>(),
                                 ParentNullableGuidProperty            = A.Dummy<Guid?>(),
                                 ParentNullableDateTimeProperty        = A.Dummy<DateTime?>(),
                                 ParentNullableCustomEnumProperty      = A.Dummy<CustomEnum?>(),
                                 ParentNullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?>(),
                                 Child1NullableBoolProperty            = A.Dummy<bool?>(),
                                 Child1NullableIntProperty             = A.Dummy<int?>(),
                                 Child1NullableGuidProperty            = A.Dummy<Guid?>(),
                                 Child1NullableDateTimeProperty        = A.Dummy<DateTime?>(),
                                 Child1NullableCustomEnumProperty      = A.Dummy<CustomEnum?>(),
                                 Child1NullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPublicSetNullableChild2
                             {
                                 ParentNullableBoolProperty            = A.Dummy<bool?>(),
                                 ParentNullableIntProperty             = A.Dummy<int?>(),
                                 ParentNullableGuidProperty            = A.Dummy<Guid?>(),
                                 ParentNullableDateTimeProperty        = A.Dummy<DateTime?>(),
                                 ParentNullableCustomEnumProperty      = A.Dummy<CustomEnum?>(),
                                 ParentNullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?>(),
                                 Child2NullableBoolProperty            = A.Dummy<bool?>(),
                                 Child2NullableIntProperty             = A.Dummy<int?>(),
                                 Child2NullableGuidProperty            = A.Dummy<Guid?>(),
                                 Child2NullableDateTimeProperty        = A.Dummy<DateTime?>(),
                                 Child2NullableCustomEnumProperty      = A.Dummy<CustomEnum?>(),
                                 Child2NullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelCloningPublicSetNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPublicSetReadOnlyCollectionOfNullable
                             {
                                 ReadOnlyCollectionInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyCollection<bool?>>(),
                                 ReadOnlyCollectionInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyCollection<int?>>(),
                                 ReadOnlyCollectionInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 ReadOnlyCollectionInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 ReadOnlyCollectionInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 ReadOnlyCollectionInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPublicSetReadOnlyCollectionOfNullableChild1
                             {
                                 ParentReadOnlyCollectionInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyCollection<bool?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyCollection<int?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>(),
                                 Child1ReadOnlyCollectionInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyCollection<bool?>>(),
                                 Child1ReadOnlyCollectionInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyCollection<int?>>(),
                                 Child1ReadOnlyCollectionInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 Child1ReadOnlyCollectionInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 Child1ReadOnlyCollectionInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 Child1ReadOnlyCollectionInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPublicSetReadOnlyCollectionOfNullableChild2
                             {
                                 ParentReadOnlyCollectionInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyCollection<bool?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyCollection<int?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>(),
                                 Child2ReadOnlyCollectionInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyCollection<bool?>>(),
                                 Child2ReadOnlyCollectionInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyCollection<int?>>(),
                                 Child2ReadOnlyCollectionInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 Child2ReadOnlyCollectionInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 Child2ReadOnlyCollectionInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 Child2ReadOnlyCollectionInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelCloningPublicSetReadOnlyCollectionOfNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPublicSetReadOnlyCollection
                             {
                                 ReadOnlyCollectionInterfaceOfBoolProperty            = A.Dummy<IReadOnlyCollection<bool>>(),
                                 ReadOnlyCollectionInterfaceOfIntProperty             = A.Dummy<IReadOnlyCollection<int>>(),
                                 ReadOnlyCollectionInterfaceOfStringProperty          = A.Dummy<IReadOnlyCollection<string>>(),
                                 ReadOnlyCollectionInterfaceOfGuidProperty            = A.Dummy<IReadOnlyCollection<Guid>>(),
                                 ReadOnlyCollectionInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 ReadOnlyCollectionInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 ReadOnlyCollectionInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 ReadOnlyCollectionInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyCollection<CustomBaseClass>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPublicSetReadOnlyCollectionChild1
                             {
                                 ParentReadOnlyCollectionInterfaceOfBoolProperty            = A.Dummy<IReadOnlyCollection<bool>>(),
                                 ParentReadOnlyCollectionInterfaceOfIntProperty             = A.Dummy<IReadOnlyCollection<int>>(),
                                 ParentReadOnlyCollectionInterfaceOfStringProperty          = A.Dummy<IReadOnlyCollection<string>>(),
                                 ParentReadOnlyCollectionInterfaceOfGuidProperty            = A.Dummy<IReadOnlyCollection<Guid>>(),
                                 ParentReadOnlyCollectionInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 ParentReadOnlyCollectionInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 ParentReadOnlyCollectionInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyCollection<CustomBaseClass>>(),
                                 Child1ReadOnlyCollectionInterfaceOfBoolProperty            = A.Dummy<IReadOnlyCollection<bool>>(),
                                 Child1ReadOnlyCollectionInterfaceOfIntProperty             = A.Dummy<IReadOnlyCollection<int>>(),
                                 Child1ReadOnlyCollectionInterfaceOfStringProperty          = A.Dummy<IReadOnlyCollection<string>>(),
                                 Child1ReadOnlyCollectionInterfaceOfGuidProperty            = A.Dummy<IReadOnlyCollection<Guid>>(),
                                 Child1ReadOnlyCollectionInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyCollection<CustomBaseClass>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPublicSetReadOnlyCollectionChild2
                             {
                                 ParentReadOnlyCollectionInterfaceOfBoolProperty            = A.Dummy<IReadOnlyCollection<bool>>(),
                                 ParentReadOnlyCollectionInterfaceOfIntProperty             = A.Dummy<IReadOnlyCollection<int>>(),
                                 ParentReadOnlyCollectionInterfaceOfStringProperty          = A.Dummy<IReadOnlyCollection<string>>(),
                                 ParentReadOnlyCollectionInterfaceOfGuidProperty            = A.Dummy<IReadOnlyCollection<Guid>>(),
                                 ParentReadOnlyCollectionInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 ParentReadOnlyCollectionInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 ParentReadOnlyCollectionInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyCollection<CustomBaseClass>>(),
                                 Child2ReadOnlyCollectionInterfaceOfBoolProperty            = A.Dummy<IReadOnlyCollection<bool>>(),
                                 Child2ReadOnlyCollectionInterfaceOfIntProperty             = A.Dummy<IReadOnlyCollection<int>>(),
                                 Child2ReadOnlyCollectionInterfaceOfStringProperty          = A.Dummy<IReadOnlyCollection<string>>(),
                                 Child2ReadOnlyCollectionInterfaceOfGuidProperty            = A.Dummy<IReadOnlyCollection<Guid>>(),
                                 Child2ReadOnlyCollectionInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 Child2ReadOnlyCollectionInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 Child2ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 Child2ReadOnlyCollectionInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 Child2ReadOnlyCollectionInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyCollection<CustomBaseClass>>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelCloningPublicSetReadOnlyCollectionParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPublicSetReadOnlyDictionaryOfNullable
                             {
                                 ReadOnlyDictionaryInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 ReadOnlyDictionaryInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 ReadOnlyDictionaryInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 ReadOnlyDictionaryInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 ReadOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPublicSetReadOnlyDictionaryOfNullableChild1
                             {
                                 ParentReadOnlyDictionaryInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 ParentReadOnlyDictionaryInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 ParentReadOnlyDictionaryInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 ParentReadOnlyDictionaryInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 ParentReadOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPublicSetReadOnlyDictionaryOfNullableChild2
                             {
                                 ParentReadOnlyDictionaryInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 ParentReadOnlyDictionaryInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 ParentReadOnlyDictionaryInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 ParentReadOnlyDictionaryInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 ParentReadOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelCloningPublicSetReadOnlyDictionaryOfNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPublicSetReadOnlyDictionary
                             {
                                 ReadOnlyDictionaryInterfaceOfBoolProperty            = A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 ReadOnlyDictionaryInterfaceOfIntProperty             = A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 ReadOnlyDictionaryInterfaceOfStringProperty          = A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 ReadOnlyDictionaryInterfaceOfGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 ReadOnlyDictionaryInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 ReadOnlyDictionaryInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 ReadOnlyDictionaryInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 ReadOnlyDictionaryInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPublicSetReadOnlyDictionaryChild1
                             {
                                 ParentReadOnlyDictionaryInterfaceOfBoolProperty            = A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 ParentReadOnlyDictionaryInterfaceOfIntProperty             = A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 ParentReadOnlyDictionaryInterfaceOfStringProperty          = A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 ParentReadOnlyDictionaryInterfaceOfGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfBoolProperty            = A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfIntProperty             = A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfStringProperty          = A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPublicSetReadOnlyDictionaryChild2
                             {
                                 ParentReadOnlyDictionaryInterfaceOfBoolProperty            = A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 ParentReadOnlyDictionaryInterfaceOfIntProperty             = A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 ParentReadOnlyDictionaryInterfaceOfStringProperty          = A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 ParentReadOnlyDictionaryInterfaceOfGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfBoolProperty            = A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfIntProperty             = A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfStringProperty          = A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelCloningPublicSetReadOnlyDictionaryParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPublicSetReadOnlyListOfNullable
                             {
                                 ReadOnlyListInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyList<bool?>>(),
                                 ReadOnlyListInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyList<int?>>(),
                                 ReadOnlyListInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyList<Guid?>>(),
                                 ReadOnlyListInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime?>>(),
                                 ReadOnlyListInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 ReadOnlyListInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum?>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPublicSetReadOnlyListOfNullableChild1
                             {
                                 ParentReadOnlyListInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyList<bool?>>(),
                                 ParentReadOnlyListInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyList<int?>>(),
                                 ParentReadOnlyListInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyList<Guid?>>(),
                                 ParentReadOnlyListInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime?>>(),
                                 ParentReadOnlyListInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 ParentReadOnlyListInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum?>>(),
                                 Child1ReadOnlyListInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyList<bool?>>(),
                                 Child1ReadOnlyListInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyList<int?>>(),
                                 Child1ReadOnlyListInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyList<Guid?>>(),
                                 Child1ReadOnlyListInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime?>>(),
                                 Child1ReadOnlyListInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 Child1ReadOnlyListInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum?>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPublicSetReadOnlyListOfNullableChild2
                             {
                                 ParentReadOnlyListInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyList<bool?>>(),
                                 ParentReadOnlyListInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyList<int?>>(),
                                 ParentReadOnlyListInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyList<Guid?>>(),
                                 ParentReadOnlyListInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime?>>(),
                                 ParentReadOnlyListInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 ParentReadOnlyListInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum?>>(),
                                 Child2ReadOnlyListInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyList<bool?>>(),
                                 Child2ReadOnlyListInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyList<int?>>(),
                                 Child2ReadOnlyListInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyList<Guid?>>(),
                                 Child2ReadOnlyListInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime?>>(),
                                 Child2ReadOnlyListInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 Child2ReadOnlyListInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum?>>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelCloningPublicSetReadOnlyListOfNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPublicSetReadOnlyList
                             {
                                 ReadOnlyListInterfaceOfBoolProperty            = A.Dummy<IReadOnlyList<bool>>(),
                                 ReadOnlyListInterfaceOfIntProperty             = A.Dummy<IReadOnlyList<int>>(),
                                 ReadOnlyListInterfaceOfStringProperty          = A.Dummy<IReadOnlyList<string>>(),
                                 ReadOnlyListInterfaceOfGuidProperty            = A.Dummy<IReadOnlyList<Guid>>(),
                                 ReadOnlyListInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime>>(),
                                 ReadOnlyListInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 ReadOnlyListInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 ReadOnlyListInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyList<CustomClass>>(),
                                 ReadOnlyListInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyList<CustomBaseClass>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPublicSetReadOnlyListChild1
                             {
                                 ParentReadOnlyListInterfaceOfBoolProperty            = A.Dummy<IReadOnlyList<bool>>(),
                                 ParentReadOnlyListInterfaceOfIntProperty             = A.Dummy<IReadOnlyList<int>>(),
                                 ParentReadOnlyListInterfaceOfStringProperty          = A.Dummy<IReadOnlyList<string>>(),
                                 ParentReadOnlyListInterfaceOfGuidProperty            = A.Dummy<IReadOnlyList<Guid>>(),
                                 ParentReadOnlyListInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime>>(),
                                 ParentReadOnlyListInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 ParentReadOnlyListInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyList<CustomClass>>(),
                                 ParentReadOnlyListInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyList<CustomBaseClass>>(),
                                 Child1ReadOnlyListInterfaceOfBoolProperty            = A.Dummy<IReadOnlyList<bool>>(),
                                 Child1ReadOnlyListInterfaceOfIntProperty             = A.Dummy<IReadOnlyList<int>>(),
                                 Child1ReadOnlyListInterfaceOfStringProperty          = A.Dummy<IReadOnlyList<string>>(),
                                 Child1ReadOnlyListInterfaceOfGuidProperty            = A.Dummy<IReadOnlyList<Guid>>(),
                                 Child1ReadOnlyListInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime>>(),
                                 Child1ReadOnlyListInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 Child1ReadOnlyListInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyList<CustomClass>>(),
                                 Child1ReadOnlyListInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyList<CustomBaseClass>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelCloningPublicSetReadOnlyListChild2
                             {
                                 ParentReadOnlyListInterfaceOfBoolProperty            = A.Dummy<IReadOnlyList<bool>>(),
                                 ParentReadOnlyListInterfaceOfIntProperty             = A.Dummy<IReadOnlyList<int>>(),
                                 ParentReadOnlyListInterfaceOfStringProperty          = A.Dummy<IReadOnlyList<string>>(),
                                 ParentReadOnlyListInterfaceOfGuidProperty            = A.Dummy<IReadOnlyList<Guid>>(),
                                 ParentReadOnlyListInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime>>(),
                                 ParentReadOnlyListInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 ParentReadOnlyListInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyList<CustomClass>>(),
                                 ParentReadOnlyListInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyList<CustomBaseClass>>(),
                                 Child2ReadOnlyListInterfaceOfBoolProperty            = A.Dummy<IReadOnlyList<bool>>(),
                                 Child2ReadOnlyListInterfaceOfIntProperty             = A.Dummy<IReadOnlyList<int>>(),
                                 Child2ReadOnlyListInterfaceOfStringProperty          = A.Dummy<IReadOnlyList<string>>(),
                                 Child2ReadOnlyListInterfaceOfGuidProperty            = A.Dummy<IReadOnlyList<Guid>>(),
                                 Child2ReadOnlyListInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime>>(),
                                 Child2ReadOnlyListInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 Child2ReadOnlyListInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 Child2ReadOnlyListInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyList<CustomClass>>(),
                                 Child2ReadOnlyListInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyList<CustomBaseClass>>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelCloningPublicSetReadOnlyListParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelComparingPrivateSetNone(
                                 A.Dummy<int>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelComparingPrivateSetNoneChild1(
                                 A.Dummy<int>(),
                                 A.Dummy<int>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelComparingPrivateSetNoneChild2(
                                 A.Dummy<int>(),
                                 A.Dummy<int>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelComparingPrivateSetNoneParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelComparingPublicSetNone
                             {
                                 IntProperty = A.Dummy<int>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelComparingPublicSetNoneChild1
                             {
                                 ParentIntProperty = A.Dummy<int>(),
                                 Child1IntProperty = A.Dummy<int>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelComparingPublicSetNoneChild2
                             {
                                 ParentIntProperty = A.Dummy<int>(),
                                 Child2IntProperty = A.Dummy<int>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelComparingPublicSetNoneParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPrivateSetArrayOfNullable(
                                 A.Dummy<bool?[]>(),
                                 A.Dummy<int?[]>(),
                                 A.Dummy<Guid?[]>(),
                                 A.Dummy<DateTime?[]>(),
                                 A.Dummy<CustomEnum?[]>(),
                                 A.Dummy<CustomFlagsEnum?[]>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPrivateSetArrayOfNullableChild1(
                                 A.Dummy<bool?[]>(),
                                 A.Dummy<int?[]>(),
                                 A.Dummy<Guid?[]>(),
                                 A.Dummy<DateTime?[]>(),
                                 A.Dummy<CustomEnum?[]>(),
                                 A.Dummy<CustomFlagsEnum?[]>(),
                                 A.Dummy<bool?[]>(),
                                 A.Dummy<int?[]>(),
                                 A.Dummy<Guid?[]>(),
                                 A.Dummy<DateTime?[]>(),
                                 A.Dummy<CustomEnum?[]>(),
                                 A.Dummy<CustomFlagsEnum?[]>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPrivateSetArrayOfNullableChild2(
                                 A.Dummy<bool?[]>(),
                                 A.Dummy<int?[]>(),
                                 A.Dummy<Guid?[]>(),
                                 A.Dummy<DateTime?[]>(),
                                 A.Dummy<CustomEnum?[]>(),
                                 A.Dummy<CustomFlagsEnum?[]>(),
                                 A.Dummy<bool?[]>(),
                                 A.Dummy<int?[]>(),
                                 A.Dummy<Guid?[]>(),
                                 A.Dummy<DateTime?[]>(),
                                 A.Dummy<CustomEnum?[]>(),
                                 A.Dummy<CustomFlagsEnum?[]>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelEqualityPrivateSetArrayOfNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPrivateSetArray(
                                 A.Dummy<bool[]>(),
                                 A.Dummy<int[]>(),
                                 A.Dummy<string[]>(),
                                 A.Dummy<Guid[]>(),
                                 A.Dummy<DateTime[]>(),
                                 A.Dummy<CustomEnum[]>(),
                                 A.Dummy<CustomFlagsEnum[]>(),
                                 A.Dummy<CustomClass[]>(),
                                 A.Dummy<CustomBaseClass[]>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPrivateSetArrayChild1(
                                 A.Dummy<bool[]>(),
                                 A.Dummy<int[]>(),
                                 A.Dummy<string[]>(),
                                 A.Dummy<Guid[]>(),
                                 A.Dummy<DateTime[]>(),
                                 A.Dummy<CustomEnum[]>(),
                                 A.Dummy<CustomFlagsEnum[]>(),
                                 A.Dummy<CustomClass[]>(),
                                 A.Dummy<CustomBaseClass[]>(),
                                 A.Dummy<bool[]>(),
                                 A.Dummy<int[]>(),
                                 A.Dummy<string[]>(),
                                 A.Dummy<Guid[]>(),
                                 A.Dummy<DateTime[]>(),
                                 A.Dummy<CustomEnum[]>(),
                                 A.Dummy<CustomFlagsEnum[]>(),
                                 A.Dummy<CustomClass[]>(),
                                 A.Dummy<CustomBaseClass[]>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPrivateSetArrayChild2(
                                 A.Dummy<bool[]>(),
                                 A.Dummy<int[]>(),
                                 A.Dummy<string[]>(),
                                 A.Dummy<Guid[]>(),
                                 A.Dummy<DateTime[]>(),
                                 A.Dummy<CustomEnum[]>(),
                                 A.Dummy<CustomFlagsEnum[]>(),
                                 A.Dummy<CustomClass[]>(),
                                 A.Dummy<CustomBaseClass[]>(),
                                 A.Dummy<bool[]>(),
                                 A.Dummy<int[]>(),
                                 A.Dummy<string[]>(),
                                 A.Dummy<Guid[]>(),
                                 A.Dummy<DateTime[]>(),
                                 A.Dummy<CustomEnum[]>(),
                                 A.Dummy<CustomFlagsEnum[]>(),
                                 A.Dummy<CustomClass[]>(),
                                 A.Dummy<CustomBaseClass[]>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelEqualityPrivateSetArrayParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPrivateSetMisc(
                                 A.Dummy<ICollection<string>>(),
                                 A.Dummy<IList<string>>(),
                                 A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 A.Dummy<IList<ICollection<string>>>(),
                                 A.Dummy<IReadOnlyList<IList<string>>>(),
                                 A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPrivateSetMiscChild1(
                                 A.Dummy<ICollection<string>>(),
                                 A.Dummy<IList<string>>(),
                                 A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 A.Dummy<IList<ICollection<string>>>(),
                                 A.Dummy<IReadOnlyList<IList<string>>>(),
                                 A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>(),
                                 A.Dummy<ICollection<string>>(),
                                 A.Dummy<IList<string>>(),
                                 A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 A.Dummy<IList<ICollection<string>>>(),
                                 A.Dummy<IReadOnlyList<IList<string>>>(),
                                 A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPrivateSetMiscChild2(
                                 A.Dummy<ICollection<string>>(),
                                 A.Dummy<IList<string>>(),
                                 A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 A.Dummy<IList<ICollection<string>>>(),
                                 A.Dummy<IReadOnlyList<IList<string>>>(),
                                 A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>(),
                                 A.Dummy<ICollection<string>>(),
                                 A.Dummy<IList<string>>(),
                                 A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 A.Dummy<IList<ICollection<string>>>(),
                                 A.Dummy<IReadOnlyList<IList<string>>>(),
                                 A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelEqualityPrivateSetMiscParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPrivateSetNone(
                                 A.Dummy<bool>(),
                                 A.Dummy<int>(),
                                 A.Dummy<string>(),
                                 A.Dummy<Guid>(),
                                 A.Dummy<DateTime>(),
                                 A.Dummy<CustomEnum>(),
                                 A.Dummy<CustomFlagsEnum>(),
                                 A.Dummy<CustomClass>(),
                                 A.Dummy<CustomBaseClass>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPrivateSetNoneChild1(
                                 A.Dummy<bool>(),
                                 A.Dummy<int>(),
                                 A.Dummy<string>(),
                                 A.Dummy<Guid>(),
                                 A.Dummy<DateTime>(),
                                 A.Dummy<CustomEnum>(),
                                 A.Dummy<CustomFlagsEnum>(),
                                 A.Dummy<CustomClass>(),
                                 A.Dummy<CustomBaseClass>(),
                                 A.Dummy<bool>(),
                                 A.Dummy<int>(),
                                 A.Dummy<string>(),
                                 A.Dummy<Guid>(),
                                 A.Dummy<DateTime>(),
                                 A.Dummy<CustomEnum>(),
                                 A.Dummy<CustomFlagsEnum>(),
                                 A.Dummy<CustomClass>(),
                                 A.Dummy<CustomBaseClass>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPrivateSetNoneChild2(
                                 A.Dummy<bool>(),
                                 A.Dummy<int>(),
                                 A.Dummy<string>(),
                                 A.Dummy<Guid>(),
                                 A.Dummy<DateTime>(),
                                 A.Dummy<CustomEnum>(),
                                 A.Dummy<CustomFlagsEnum>(),
                                 A.Dummy<CustomClass>(),
                                 A.Dummy<CustomBaseClass>(),
                                 A.Dummy<bool>(),
                                 A.Dummy<int>(),
                                 A.Dummy<string>(),
                                 A.Dummy<Guid>(),
                                 A.Dummy<DateTime>(),
                                 A.Dummy<CustomEnum>(),
                                 A.Dummy<CustomFlagsEnum>(),
                                 A.Dummy<CustomClass>(),
                                 A.Dummy<CustomBaseClass>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelEqualityPrivateSetNoneParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPrivateSetNullable(
                                 A.Dummy<bool?>(),
                                 A.Dummy<int?>(),
                                 A.Dummy<Guid?>(),
                                 A.Dummy<DateTime?>(),
                                 A.Dummy<CustomEnum?>(),
                                 A.Dummy<CustomFlagsEnum?>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPrivateSetNullableChild1(
                                 A.Dummy<bool?>(),
                                 A.Dummy<int?>(),
                                 A.Dummy<Guid?>(),
                                 A.Dummy<DateTime?>(),
                                 A.Dummy<CustomEnum?>(),
                                 A.Dummy<CustomFlagsEnum?>(),
                                 A.Dummy<bool?>(),
                                 A.Dummy<int?>(),
                                 A.Dummy<Guid?>(),
                                 A.Dummy<DateTime?>(),
                                 A.Dummy<CustomEnum?>(),
                                 A.Dummy<CustomFlagsEnum?>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPrivateSetNullableChild2(
                                 A.Dummy<bool?>(),
                                 A.Dummy<int?>(),
                                 A.Dummy<Guid?>(),
                                 A.Dummy<DateTime?>(),
                                 A.Dummy<CustomEnum?>(),
                                 A.Dummy<CustomFlagsEnum?>(),
                                 A.Dummy<bool?>(),
                                 A.Dummy<int?>(),
                                 A.Dummy<Guid?>(),
                                 A.Dummy<DateTime?>(),
                                 A.Dummy<CustomEnum?>(),
                                 A.Dummy<CustomFlagsEnum?>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelEqualityPrivateSetNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPrivateSetReadOnlyCollectionOfNullable(
                                 A.Dummy<IReadOnlyCollection<bool?>>(),
                                 A.Dummy<IReadOnlyCollection<int?>>(),
                                 A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPrivateSetReadOnlyCollectionOfNullableChild1(
                                 A.Dummy<IReadOnlyCollection<bool?>>(),
                                 A.Dummy<IReadOnlyCollection<int?>>(),
                                 A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>(),
                                 A.Dummy<IReadOnlyCollection<bool?>>(),
                                 A.Dummy<IReadOnlyCollection<int?>>(),
                                 A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPrivateSetReadOnlyCollectionOfNullableChild2(
                                 A.Dummy<IReadOnlyCollection<bool?>>(),
                                 A.Dummy<IReadOnlyCollection<int?>>(),
                                 A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>(),
                                 A.Dummy<IReadOnlyCollection<bool?>>(),
                                 A.Dummy<IReadOnlyCollection<int?>>(),
                                 A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelEqualityPrivateSetReadOnlyCollectionOfNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPrivateSetReadOnlyCollection(
                                 A.Dummy<IReadOnlyCollection<bool>>(),
                                 A.Dummy<IReadOnlyCollection<int>>(),
                                 A.Dummy<IReadOnlyCollection<string>>(),
                                 A.Dummy<IReadOnlyCollection<Guid>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 A.Dummy<IReadOnlyCollection<CustomBaseClass>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPrivateSetReadOnlyCollectionChild1(
                                 A.Dummy<IReadOnlyCollection<bool>>(),
                                 A.Dummy<IReadOnlyCollection<int>>(),
                                 A.Dummy<IReadOnlyCollection<string>>(),
                                 A.Dummy<IReadOnlyCollection<Guid>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 A.Dummy<IReadOnlyCollection<CustomBaseClass>>(),
                                 A.Dummy<IReadOnlyCollection<bool>>(),
                                 A.Dummy<IReadOnlyCollection<int>>(),
                                 A.Dummy<IReadOnlyCollection<string>>(),
                                 A.Dummy<IReadOnlyCollection<Guid>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 A.Dummy<IReadOnlyCollection<CustomBaseClass>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPrivateSetReadOnlyCollectionChild2(
                                 A.Dummy<IReadOnlyCollection<bool>>(),
                                 A.Dummy<IReadOnlyCollection<int>>(),
                                 A.Dummy<IReadOnlyCollection<string>>(),
                                 A.Dummy<IReadOnlyCollection<Guid>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 A.Dummy<IReadOnlyCollection<CustomBaseClass>>(),
                                 A.Dummy<IReadOnlyCollection<bool>>(),
                                 A.Dummy<IReadOnlyCollection<int>>(),
                                 A.Dummy<IReadOnlyCollection<string>>(),
                                 A.Dummy<IReadOnlyCollection<Guid>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 A.Dummy<IReadOnlyCollection<CustomBaseClass>>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelEqualityPrivateSetReadOnlyCollectionParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPrivateSetReadOnlyDictionaryOfNullable(
                                 A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPrivateSetReadOnlyDictionaryOfNullableChild1(
                                 A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>(),
                                 A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPrivateSetReadOnlyDictionaryOfNullableChild2(
                                 A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>(),
                                 A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelEqualityPrivateSetReadOnlyDictionaryOfNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPrivateSetReadOnlyDictionary(
                                 A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPrivateSetReadOnlyDictionaryChild1(
                                 A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>(),
                                 A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPrivateSetReadOnlyDictionaryChild2(
                                 A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>(),
                                 A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelEqualityPrivateSetReadOnlyDictionaryParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPrivateSetReadOnlyListOfNullable(
                                 A.Dummy<IReadOnlyList<bool?>>(),
                                 A.Dummy<IReadOnlyList<int?>>(),
                                 A.Dummy<IReadOnlyList<Guid?>>(),
                                 A.Dummy<IReadOnlyList<DateTime?>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum?>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPrivateSetReadOnlyListOfNullableChild1(
                                 A.Dummy<IReadOnlyList<bool?>>(),
                                 A.Dummy<IReadOnlyList<int?>>(),
                                 A.Dummy<IReadOnlyList<Guid?>>(),
                                 A.Dummy<IReadOnlyList<DateTime?>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum?>>(),
                                 A.Dummy<IReadOnlyList<bool?>>(),
                                 A.Dummy<IReadOnlyList<int?>>(),
                                 A.Dummy<IReadOnlyList<Guid?>>(),
                                 A.Dummy<IReadOnlyList<DateTime?>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum?>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPrivateSetReadOnlyListOfNullableChild2(
                                 A.Dummy<IReadOnlyList<bool?>>(),
                                 A.Dummy<IReadOnlyList<int?>>(),
                                 A.Dummy<IReadOnlyList<Guid?>>(),
                                 A.Dummy<IReadOnlyList<DateTime?>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum?>>(),
                                 A.Dummy<IReadOnlyList<bool?>>(),
                                 A.Dummy<IReadOnlyList<int?>>(),
                                 A.Dummy<IReadOnlyList<Guid?>>(),
                                 A.Dummy<IReadOnlyList<DateTime?>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum?>>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelEqualityPrivateSetReadOnlyListOfNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPrivateSetReadOnlyList(
                                 A.Dummy<IReadOnlyList<bool>>(),
                                 A.Dummy<IReadOnlyList<int>>(),
                                 A.Dummy<IReadOnlyList<string>>(),
                                 A.Dummy<IReadOnlyList<Guid>>(),
                                 A.Dummy<IReadOnlyList<DateTime>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomClass>>(),
                                 A.Dummy<IReadOnlyList<CustomBaseClass>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPrivateSetReadOnlyListChild1(
                                 A.Dummy<IReadOnlyList<bool>>(),
                                 A.Dummy<IReadOnlyList<int>>(),
                                 A.Dummy<IReadOnlyList<string>>(),
                                 A.Dummy<IReadOnlyList<Guid>>(),
                                 A.Dummy<IReadOnlyList<DateTime>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomClass>>(),
                                 A.Dummy<IReadOnlyList<CustomBaseClass>>(),
                                 A.Dummy<IReadOnlyList<bool>>(),
                                 A.Dummy<IReadOnlyList<int>>(),
                                 A.Dummy<IReadOnlyList<string>>(),
                                 A.Dummy<IReadOnlyList<Guid>>(),
                                 A.Dummy<IReadOnlyList<DateTime>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomClass>>(),
                                 A.Dummy<IReadOnlyList<CustomBaseClass>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPrivateSetReadOnlyListChild2(
                                 A.Dummy<IReadOnlyList<bool>>(),
                                 A.Dummy<IReadOnlyList<int>>(),
                                 A.Dummy<IReadOnlyList<string>>(),
                                 A.Dummy<IReadOnlyList<Guid>>(),
                                 A.Dummy<IReadOnlyList<DateTime>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomClass>>(),
                                 A.Dummy<IReadOnlyList<CustomBaseClass>>(),
                                 A.Dummy<IReadOnlyList<bool>>(),
                                 A.Dummy<IReadOnlyList<int>>(),
                                 A.Dummy<IReadOnlyList<string>>(),
                                 A.Dummy<IReadOnlyList<Guid>>(),
                                 A.Dummy<IReadOnlyList<DateTime>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomClass>>(),
                                 A.Dummy<IReadOnlyList<CustomBaseClass>>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelEqualityPrivateSetReadOnlyListParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPublicSetArrayOfNullable
                             {
                                 ArrayOfNullableBoolProperty            = A.Dummy<bool?[]>(),
                                 ArrayOfNullableIntProperty             = A.Dummy<int?[]>(),
                                 ArrayOfNullableGuidProperty            = A.Dummy<Guid?[]>(),
                                 ArrayOfNullableDateTimeProperty        = A.Dummy<DateTime?[]>(),
                                 ArrayOfNullableCustomEnumProperty      = A.Dummy<CustomEnum?[]>(),
                                 ArrayOfNullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?[]>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPublicSetArrayOfNullableChild1
                             {
                                 ParentArrayOfNullableBoolProperty            = A.Dummy<bool?[]>(),
                                 ParentArrayOfNullableIntProperty             = A.Dummy<int?[]>(),
                                 ParentArrayOfNullableGuidProperty            = A.Dummy<Guid?[]>(),
                                 ParentArrayOfNullableDateTimeProperty        = A.Dummy<DateTime?[]>(),
                                 ParentArrayOfNullableCustomEnumProperty      = A.Dummy<CustomEnum?[]>(),
                                 ParentArrayOfNullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?[]>(),
                                 Child1ArrayOfNullableBoolProperty            = A.Dummy<bool?[]>(),
                                 Child1ArrayOfNullableIntProperty             = A.Dummy<int?[]>(),
                                 Child1ArrayOfNullableGuidProperty            = A.Dummy<Guid?[]>(),
                                 Child1ArrayOfNullableDateTimeProperty        = A.Dummy<DateTime?[]>(),
                                 Child1ArrayOfNullableCustomEnumProperty      = A.Dummy<CustomEnum?[]>(),
                                 Child1ArrayOfNullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?[]>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPublicSetArrayOfNullableChild2
                             {
                                 ParentArrayOfNullableBoolProperty            = A.Dummy<bool?[]>(),
                                 ParentArrayOfNullableIntProperty             = A.Dummy<int?[]>(),
                                 ParentArrayOfNullableGuidProperty            = A.Dummy<Guid?[]>(),
                                 ParentArrayOfNullableDateTimeProperty        = A.Dummy<DateTime?[]>(),
                                 ParentArrayOfNullableCustomEnumProperty      = A.Dummy<CustomEnum?[]>(),
                                 ParentArrayOfNullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?[]>(),
                                 Child2ArrayOfNullableBoolProperty            = A.Dummy<bool?[]>(),
                                 Child2ArrayOfNullableIntProperty             = A.Dummy<int?[]>(),
                                 Child2ArrayOfNullableGuidProperty            = A.Dummy<Guid?[]>(),
                                 Child2ArrayOfNullableDateTimeProperty        = A.Dummy<DateTime?[]>(),
                                 Child2ArrayOfNullableCustomEnumProperty      = A.Dummy<CustomEnum?[]>(),
                                 Child2ArrayOfNullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?[]>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelEqualityPublicSetArrayOfNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPublicSetArray
                             {
                                 ArrayOfBoolProperty            = A.Dummy<bool[]>(),
                                 ArrayOfIntProperty             = A.Dummy<int[]>(),
                                 ArrayOfStringProperty          = A.Dummy<string[]>(),
                                 ArrayOfGuidProperty            = A.Dummy<Guid[]>(),
                                 ArrayOfDateTimeProperty        = A.Dummy<DateTime[]>(),
                                 ArrayOfCustomEnumProperty      = A.Dummy<CustomEnum[]>(),
                                 ArrayOfCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum[]>(),
                                 ArrayOfCustomClassProperty     = A.Dummy<CustomClass[]>(),
                                 ArrayOfCustomBaseClassProperty = A.Dummy<CustomBaseClass[]>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPublicSetArrayChild1
                             {
                                 ParentArrayOfBoolProperty            = A.Dummy<bool[]>(),
                                 ParentArrayOfIntProperty             = A.Dummy<int[]>(),
                                 ParentArrayOfStringProperty          = A.Dummy<string[]>(),
                                 ParentArrayOfGuidProperty            = A.Dummy<Guid[]>(),
                                 ParentArrayOfDateTimeProperty        = A.Dummy<DateTime[]>(),
                                 ParentArrayOfCustomEnumProperty      = A.Dummy<CustomEnum[]>(),
                                 ParentArrayOfCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum[]>(),
                                 ParentArrayOfCustomClassProperty     = A.Dummy<CustomClass[]>(),
                                 ParentArrayOfCustomBaseClassProperty = A.Dummy<CustomBaseClass[]>(),
                                 Child1ArrayOfBoolProperty            = A.Dummy<bool[]>(),
                                 Child1ArrayOfIntProperty             = A.Dummy<int[]>(),
                                 Child1ArrayOfStringProperty          = A.Dummy<string[]>(),
                                 Child1ArrayOfGuidProperty            = A.Dummy<Guid[]>(),
                                 Child1ArrayOfDateTimeProperty        = A.Dummy<DateTime[]>(),
                                 Child1ArrayOfCustomEnumProperty      = A.Dummy<CustomEnum[]>(),
                                 Child1ArrayOfCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum[]>(),
                                 Child1ArrayOfCustomClassProperty     = A.Dummy<CustomClass[]>(),
                                 Child1ArrayOfCustomBaseClassProperty = A.Dummy<CustomBaseClass[]>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPublicSetArrayChild2
                             {
                                 ParentArrayOfBoolProperty            = A.Dummy<bool[]>(),
                                 ParentArrayOfIntProperty             = A.Dummy<int[]>(),
                                 ParentArrayOfStringProperty          = A.Dummy<string[]>(),
                                 ParentArrayOfGuidProperty            = A.Dummy<Guid[]>(),
                                 ParentArrayOfDateTimeProperty        = A.Dummy<DateTime[]>(),
                                 ParentArrayOfCustomEnumProperty      = A.Dummy<CustomEnum[]>(),
                                 ParentArrayOfCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum[]>(),
                                 ParentArrayOfCustomClassProperty     = A.Dummy<CustomClass[]>(),
                                 ParentArrayOfCustomBaseClassProperty = A.Dummy<CustomBaseClass[]>(),
                                 Child2ArrayOfBoolProperty            = A.Dummy<bool[]>(),
                                 Child2ArrayOfIntProperty             = A.Dummy<int[]>(),
                                 Child2ArrayOfStringProperty          = A.Dummy<string[]>(),
                                 Child2ArrayOfGuidProperty            = A.Dummy<Guid[]>(),
                                 Child2ArrayOfDateTimeProperty        = A.Dummy<DateTime[]>(),
                                 Child2ArrayOfCustomEnumProperty      = A.Dummy<CustomEnum[]>(),
                                 Child2ArrayOfCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum[]>(),
                                 Child2ArrayOfCustomClassProperty     = A.Dummy<CustomClass[]>(),
                                 Child2ArrayOfCustomBaseClassProperty = A.Dummy<CustomBaseClass[]>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelEqualityPublicSetArrayParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPublicSetMisc
                             {
                                 CollectionInterfaceOfStringProperty                                                                                    = A.Dummy<ICollection<string>>(),
                                 ListInterfaceOfStringProperty                                                                                          = A.Dummy<IList<string>>(),
                                 ReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty                                                       = A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 CollectionInterfaceOfReadOnlyListInterfaceOfStringProperty                                                             = A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 ListInterfaceOfCollectionInterfaceOfStringProperty                                                                     = A.Dummy<IList<ICollection<string>>>(),
                                 ReadOnlyListInterfaceOfListInterfaceOfStringProperty                                                                   = A.Dummy<IReadOnlyList<IList<string>>>(),
                                 DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                                                           = A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 ReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty                                                     = A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                            = A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty = A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPublicSetMiscChild1
                             {
                                 ParentCollectionInterfaceOfStringProperty                                                                                    = A.Dummy<ICollection<string>>(),
                                 ParentListInterfaceOfStringProperty                                                                                          = A.Dummy<IList<string>>(),
                                 ParentReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty                                                       = A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 ParentCollectionInterfaceOfReadOnlyListInterfaceOfStringProperty                                                             = A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 ParentListInterfaceOfCollectionInterfaceOfStringProperty                                                                     = A.Dummy<IList<ICollection<string>>>(),
                                 ParentReadOnlyListInterfaceOfListInterfaceOfStringProperty                                                                   = A.Dummy<IReadOnlyList<IList<string>>>(),
                                 ParentDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                                                           = A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty                                                     = A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 ParentReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                            = A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 ParentReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty = A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>(),
                                 Child1CollectionInterfaceOfStringProperty                                                                                    = A.Dummy<ICollection<string>>(),
                                 Child1ListInterfaceOfStringProperty                                                                                          = A.Dummy<IList<string>>(),
                                 Child1ReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty                                                       = A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 Child1CollectionInterfaceOfReadOnlyListInterfaceOfStringProperty                                                             = A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 Child1ListInterfaceOfCollectionInterfaceOfStringProperty                                                                     = A.Dummy<IList<ICollection<string>>>(),
                                 Child1ReadOnlyListInterfaceOfListInterfaceOfStringProperty                                                                   = A.Dummy<IReadOnlyList<IList<string>>>(),
                                 Child1DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                                                           = A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty                                                     = A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 Child1ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                            = A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty = A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPublicSetMiscChild2
                             {
                                 ParentCollectionInterfaceOfStringProperty                                                                                    = A.Dummy<ICollection<string>>(),
                                 ParentListInterfaceOfStringProperty                                                                                          = A.Dummy<IList<string>>(),
                                 ParentReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty                                                       = A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 ParentCollectionInterfaceOfReadOnlyListInterfaceOfStringProperty                                                             = A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 ParentListInterfaceOfCollectionInterfaceOfStringProperty                                                                     = A.Dummy<IList<ICollection<string>>>(),
                                 ParentReadOnlyListInterfaceOfListInterfaceOfStringProperty                                                                   = A.Dummy<IReadOnlyList<IList<string>>>(),
                                 ParentDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                                                           = A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty                                                     = A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 ParentReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                            = A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 ParentReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty = A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>(),
                                 Child2CollectionInterfaceOfStringProperty                                                                                    = A.Dummy<ICollection<string>>(),
                                 Child2ListInterfaceOfStringProperty                                                                                          = A.Dummy<IList<string>>(),
                                 Child2ReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty                                                       = A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 Child2CollectionInterfaceOfReadOnlyListInterfaceOfStringProperty                                                             = A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 Child2ListInterfaceOfCollectionInterfaceOfStringProperty                                                                     = A.Dummy<IList<ICollection<string>>>(),
                                 Child2ReadOnlyListInterfaceOfListInterfaceOfStringProperty                                                                   = A.Dummy<IReadOnlyList<IList<string>>>(),
                                 Child2DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                                                           = A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty                                                     = A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 Child2ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                            = A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty = A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelEqualityPublicSetMiscParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPublicSetNone
                             {
                                 BoolProperty            = A.Dummy<bool>(),
                                 IntProperty             = A.Dummy<int>(),
                                 StringProperty          = A.Dummy<string>(),
                                 GuidProperty            = A.Dummy<Guid>(),
                                 DateTimeProperty        = A.Dummy<DateTime>(),
                                 CustomEnumProperty      = A.Dummy<CustomEnum>(),
                                 CustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum>(),
                                 CustomClassProperty     = A.Dummy<CustomClass>(),
                                 CustomBaseClassProperty = A.Dummy<CustomBaseClass>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPublicSetNoneChild1
                             {
                                 ParentBoolProperty            = A.Dummy<bool>(),
                                 ParentIntProperty             = A.Dummy<int>(),
                                 ParentStringProperty          = A.Dummy<string>(),
                                 ParentGuidProperty            = A.Dummy<Guid>(),
                                 ParentDateTimeProperty        = A.Dummy<DateTime>(),
                                 ParentCustomEnumProperty      = A.Dummy<CustomEnum>(),
                                 ParentCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum>(),
                                 ParentCustomClassProperty     = A.Dummy<CustomClass>(),
                                 ParentCustomBaseClassProperty = A.Dummy<CustomBaseClass>(),
                                 Child1BoolProperty            = A.Dummy<bool>(),
                                 Child1IntProperty             = A.Dummy<int>(),
                                 Child1StringProperty          = A.Dummy<string>(),
                                 Child1GuidProperty            = A.Dummy<Guid>(),
                                 Child1DateTimeProperty        = A.Dummy<DateTime>(),
                                 Child1CustomEnumProperty      = A.Dummy<CustomEnum>(),
                                 Child1CustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum>(),
                                 Child1CustomClassProperty     = A.Dummy<CustomClass>(),
                                 Child1CustomBaseClassProperty = A.Dummy<CustomBaseClass>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPublicSetNoneChild2
                             {
                                 ParentBoolProperty            = A.Dummy<bool>(),
                                 ParentIntProperty             = A.Dummy<int>(),
                                 ParentStringProperty          = A.Dummy<string>(),
                                 ParentGuidProperty            = A.Dummy<Guid>(),
                                 ParentDateTimeProperty        = A.Dummy<DateTime>(),
                                 ParentCustomEnumProperty      = A.Dummy<CustomEnum>(),
                                 ParentCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum>(),
                                 ParentCustomClassProperty     = A.Dummy<CustomClass>(),
                                 ParentCustomBaseClassProperty = A.Dummy<CustomBaseClass>(),
                                 Child2BoolProperty            = A.Dummy<bool>(),
                                 Child2IntProperty             = A.Dummy<int>(),
                                 Child2StringProperty          = A.Dummy<string>(),
                                 Child2GuidProperty            = A.Dummy<Guid>(),
                                 Child2DateTimeProperty        = A.Dummy<DateTime>(),
                                 Child2CustomEnumProperty      = A.Dummy<CustomEnum>(),
                                 Child2CustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum>(),
                                 Child2CustomClassProperty     = A.Dummy<CustomClass>(),
                                 Child2CustomBaseClassProperty = A.Dummy<CustomBaseClass>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelEqualityPublicSetNoneParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPublicSetNullable
                             {
                                 NullableBoolProperty            = A.Dummy<bool?>(),
                                 NullableIntProperty             = A.Dummy<int?>(),
                                 NullableGuidProperty            = A.Dummy<Guid?>(),
                                 NullableDateTimeProperty        = A.Dummy<DateTime?>(),
                                 NullableCustomEnumProperty      = A.Dummy<CustomEnum?>(),
                                 NullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPublicSetNullableChild1
                             {
                                 ParentNullableBoolProperty            = A.Dummy<bool?>(),
                                 ParentNullableIntProperty             = A.Dummy<int?>(),
                                 ParentNullableGuidProperty            = A.Dummy<Guid?>(),
                                 ParentNullableDateTimeProperty        = A.Dummy<DateTime?>(),
                                 ParentNullableCustomEnumProperty      = A.Dummy<CustomEnum?>(),
                                 ParentNullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?>(),
                                 Child1NullableBoolProperty            = A.Dummy<bool?>(),
                                 Child1NullableIntProperty             = A.Dummy<int?>(),
                                 Child1NullableGuidProperty            = A.Dummy<Guid?>(),
                                 Child1NullableDateTimeProperty        = A.Dummy<DateTime?>(),
                                 Child1NullableCustomEnumProperty      = A.Dummy<CustomEnum?>(),
                                 Child1NullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPublicSetNullableChild2
                             {
                                 ParentNullableBoolProperty            = A.Dummy<bool?>(),
                                 ParentNullableIntProperty             = A.Dummy<int?>(),
                                 ParentNullableGuidProperty            = A.Dummy<Guid?>(),
                                 ParentNullableDateTimeProperty        = A.Dummy<DateTime?>(),
                                 ParentNullableCustomEnumProperty      = A.Dummy<CustomEnum?>(),
                                 ParentNullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?>(),
                                 Child2NullableBoolProperty            = A.Dummy<bool?>(),
                                 Child2NullableIntProperty             = A.Dummy<int?>(),
                                 Child2NullableGuidProperty            = A.Dummy<Guid?>(),
                                 Child2NullableDateTimeProperty        = A.Dummy<DateTime?>(),
                                 Child2NullableCustomEnumProperty      = A.Dummy<CustomEnum?>(),
                                 Child2NullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelEqualityPublicSetNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPublicSetReadOnlyCollectionOfNullable
                             {
                                 ReadOnlyCollectionInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyCollection<bool?>>(),
                                 ReadOnlyCollectionInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyCollection<int?>>(),
                                 ReadOnlyCollectionInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 ReadOnlyCollectionInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 ReadOnlyCollectionInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 ReadOnlyCollectionInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPublicSetReadOnlyCollectionOfNullableChild1
                             {
                                 ParentReadOnlyCollectionInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyCollection<bool?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyCollection<int?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>(),
                                 Child1ReadOnlyCollectionInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyCollection<bool?>>(),
                                 Child1ReadOnlyCollectionInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyCollection<int?>>(),
                                 Child1ReadOnlyCollectionInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 Child1ReadOnlyCollectionInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 Child1ReadOnlyCollectionInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 Child1ReadOnlyCollectionInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPublicSetReadOnlyCollectionOfNullableChild2
                             {
                                 ParentReadOnlyCollectionInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyCollection<bool?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyCollection<int?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>(),
                                 Child2ReadOnlyCollectionInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyCollection<bool?>>(),
                                 Child2ReadOnlyCollectionInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyCollection<int?>>(),
                                 Child2ReadOnlyCollectionInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 Child2ReadOnlyCollectionInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 Child2ReadOnlyCollectionInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 Child2ReadOnlyCollectionInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelEqualityPublicSetReadOnlyCollectionOfNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPublicSetReadOnlyCollection
                             {
                                 ReadOnlyCollectionInterfaceOfBoolProperty            = A.Dummy<IReadOnlyCollection<bool>>(),
                                 ReadOnlyCollectionInterfaceOfIntProperty             = A.Dummy<IReadOnlyCollection<int>>(),
                                 ReadOnlyCollectionInterfaceOfStringProperty          = A.Dummy<IReadOnlyCollection<string>>(),
                                 ReadOnlyCollectionInterfaceOfGuidProperty            = A.Dummy<IReadOnlyCollection<Guid>>(),
                                 ReadOnlyCollectionInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 ReadOnlyCollectionInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 ReadOnlyCollectionInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 ReadOnlyCollectionInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyCollection<CustomBaseClass>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPublicSetReadOnlyCollectionChild1
                             {
                                 ParentReadOnlyCollectionInterfaceOfBoolProperty            = A.Dummy<IReadOnlyCollection<bool>>(),
                                 ParentReadOnlyCollectionInterfaceOfIntProperty             = A.Dummy<IReadOnlyCollection<int>>(),
                                 ParentReadOnlyCollectionInterfaceOfStringProperty          = A.Dummy<IReadOnlyCollection<string>>(),
                                 ParentReadOnlyCollectionInterfaceOfGuidProperty            = A.Dummy<IReadOnlyCollection<Guid>>(),
                                 ParentReadOnlyCollectionInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 ParentReadOnlyCollectionInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 ParentReadOnlyCollectionInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyCollection<CustomBaseClass>>(),
                                 Child1ReadOnlyCollectionInterfaceOfBoolProperty            = A.Dummy<IReadOnlyCollection<bool>>(),
                                 Child1ReadOnlyCollectionInterfaceOfIntProperty             = A.Dummy<IReadOnlyCollection<int>>(),
                                 Child1ReadOnlyCollectionInterfaceOfStringProperty          = A.Dummy<IReadOnlyCollection<string>>(),
                                 Child1ReadOnlyCollectionInterfaceOfGuidProperty            = A.Dummy<IReadOnlyCollection<Guid>>(),
                                 Child1ReadOnlyCollectionInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyCollection<CustomBaseClass>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPublicSetReadOnlyCollectionChild2
                             {
                                 ParentReadOnlyCollectionInterfaceOfBoolProperty            = A.Dummy<IReadOnlyCollection<bool>>(),
                                 ParentReadOnlyCollectionInterfaceOfIntProperty             = A.Dummy<IReadOnlyCollection<int>>(),
                                 ParentReadOnlyCollectionInterfaceOfStringProperty          = A.Dummy<IReadOnlyCollection<string>>(),
                                 ParentReadOnlyCollectionInterfaceOfGuidProperty            = A.Dummy<IReadOnlyCollection<Guid>>(),
                                 ParentReadOnlyCollectionInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 ParentReadOnlyCollectionInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 ParentReadOnlyCollectionInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyCollection<CustomBaseClass>>(),
                                 Child2ReadOnlyCollectionInterfaceOfBoolProperty            = A.Dummy<IReadOnlyCollection<bool>>(),
                                 Child2ReadOnlyCollectionInterfaceOfIntProperty             = A.Dummy<IReadOnlyCollection<int>>(),
                                 Child2ReadOnlyCollectionInterfaceOfStringProperty          = A.Dummy<IReadOnlyCollection<string>>(),
                                 Child2ReadOnlyCollectionInterfaceOfGuidProperty            = A.Dummy<IReadOnlyCollection<Guid>>(),
                                 Child2ReadOnlyCollectionInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 Child2ReadOnlyCollectionInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 Child2ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 Child2ReadOnlyCollectionInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 Child2ReadOnlyCollectionInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyCollection<CustomBaseClass>>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelEqualityPublicSetReadOnlyCollectionParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPublicSetReadOnlyDictionaryOfNullable
                             {
                                 ReadOnlyDictionaryInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 ReadOnlyDictionaryInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 ReadOnlyDictionaryInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 ReadOnlyDictionaryInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 ReadOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPublicSetReadOnlyDictionaryOfNullableChild1
                             {
                                 ParentReadOnlyDictionaryInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 ParentReadOnlyDictionaryInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 ParentReadOnlyDictionaryInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 ParentReadOnlyDictionaryInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 ParentReadOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPublicSetReadOnlyDictionaryOfNullableChild2
                             {
                                 ParentReadOnlyDictionaryInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 ParentReadOnlyDictionaryInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 ParentReadOnlyDictionaryInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 ParentReadOnlyDictionaryInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 ParentReadOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelEqualityPublicSetReadOnlyDictionaryOfNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPublicSetReadOnlyDictionary
                             {
                                 ReadOnlyDictionaryInterfaceOfBoolProperty            = A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 ReadOnlyDictionaryInterfaceOfIntProperty             = A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 ReadOnlyDictionaryInterfaceOfStringProperty          = A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 ReadOnlyDictionaryInterfaceOfGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 ReadOnlyDictionaryInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 ReadOnlyDictionaryInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 ReadOnlyDictionaryInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 ReadOnlyDictionaryInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPublicSetReadOnlyDictionaryChild1
                             {
                                 ParentReadOnlyDictionaryInterfaceOfBoolProperty            = A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 ParentReadOnlyDictionaryInterfaceOfIntProperty             = A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 ParentReadOnlyDictionaryInterfaceOfStringProperty          = A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 ParentReadOnlyDictionaryInterfaceOfGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfBoolProperty            = A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfIntProperty             = A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfStringProperty          = A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPublicSetReadOnlyDictionaryChild2
                             {
                                 ParentReadOnlyDictionaryInterfaceOfBoolProperty            = A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 ParentReadOnlyDictionaryInterfaceOfIntProperty             = A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 ParentReadOnlyDictionaryInterfaceOfStringProperty          = A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 ParentReadOnlyDictionaryInterfaceOfGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfBoolProperty            = A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfIntProperty             = A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfStringProperty          = A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelEqualityPublicSetReadOnlyDictionaryParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPublicSetReadOnlyListOfNullable
                             {
                                 ReadOnlyListInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyList<bool?>>(),
                                 ReadOnlyListInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyList<int?>>(),
                                 ReadOnlyListInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyList<Guid?>>(),
                                 ReadOnlyListInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime?>>(),
                                 ReadOnlyListInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 ReadOnlyListInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum?>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPublicSetReadOnlyListOfNullableChild1
                             {
                                 ParentReadOnlyListInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyList<bool?>>(),
                                 ParentReadOnlyListInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyList<int?>>(),
                                 ParentReadOnlyListInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyList<Guid?>>(),
                                 ParentReadOnlyListInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime?>>(),
                                 ParentReadOnlyListInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 ParentReadOnlyListInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum?>>(),
                                 Child1ReadOnlyListInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyList<bool?>>(),
                                 Child1ReadOnlyListInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyList<int?>>(),
                                 Child1ReadOnlyListInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyList<Guid?>>(),
                                 Child1ReadOnlyListInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime?>>(),
                                 Child1ReadOnlyListInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 Child1ReadOnlyListInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum?>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPublicSetReadOnlyListOfNullableChild2
                             {
                                 ParentReadOnlyListInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyList<bool?>>(),
                                 ParentReadOnlyListInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyList<int?>>(),
                                 ParentReadOnlyListInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyList<Guid?>>(),
                                 ParentReadOnlyListInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime?>>(),
                                 ParentReadOnlyListInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 ParentReadOnlyListInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum?>>(),
                                 Child2ReadOnlyListInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyList<bool?>>(),
                                 Child2ReadOnlyListInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyList<int?>>(),
                                 Child2ReadOnlyListInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyList<Guid?>>(),
                                 Child2ReadOnlyListInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime?>>(),
                                 Child2ReadOnlyListInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 Child2ReadOnlyListInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum?>>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelEqualityPublicSetReadOnlyListOfNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPublicSetReadOnlyList
                             {
                                 ReadOnlyListInterfaceOfBoolProperty            = A.Dummy<IReadOnlyList<bool>>(),
                                 ReadOnlyListInterfaceOfIntProperty             = A.Dummy<IReadOnlyList<int>>(),
                                 ReadOnlyListInterfaceOfStringProperty          = A.Dummy<IReadOnlyList<string>>(),
                                 ReadOnlyListInterfaceOfGuidProperty            = A.Dummy<IReadOnlyList<Guid>>(),
                                 ReadOnlyListInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime>>(),
                                 ReadOnlyListInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 ReadOnlyListInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 ReadOnlyListInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyList<CustomClass>>(),
                                 ReadOnlyListInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyList<CustomBaseClass>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPublicSetReadOnlyListChild1
                             {
                                 ParentReadOnlyListInterfaceOfBoolProperty            = A.Dummy<IReadOnlyList<bool>>(),
                                 ParentReadOnlyListInterfaceOfIntProperty             = A.Dummy<IReadOnlyList<int>>(),
                                 ParentReadOnlyListInterfaceOfStringProperty          = A.Dummy<IReadOnlyList<string>>(),
                                 ParentReadOnlyListInterfaceOfGuidProperty            = A.Dummy<IReadOnlyList<Guid>>(),
                                 ParentReadOnlyListInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime>>(),
                                 ParentReadOnlyListInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 ParentReadOnlyListInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyList<CustomClass>>(),
                                 ParentReadOnlyListInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyList<CustomBaseClass>>(),
                                 Child1ReadOnlyListInterfaceOfBoolProperty            = A.Dummy<IReadOnlyList<bool>>(),
                                 Child1ReadOnlyListInterfaceOfIntProperty             = A.Dummy<IReadOnlyList<int>>(),
                                 Child1ReadOnlyListInterfaceOfStringProperty          = A.Dummy<IReadOnlyList<string>>(),
                                 Child1ReadOnlyListInterfaceOfGuidProperty            = A.Dummy<IReadOnlyList<Guid>>(),
                                 Child1ReadOnlyListInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime>>(),
                                 Child1ReadOnlyListInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 Child1ReadOnlyListInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyList<CustomClass>>(),
                                 Child1ReadOnlyListInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyList<CustomBaseClass>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelEqualityPublicSetReadOnlyListChild2
                             {
                                 ParentReadOnlyListInterfaceOfBoolProperty            = A.Dummy<IReadOnlyList<bool>>(),
                                 ParentReadOnlyListInterfaceOfIntProperty             = A.Dummy<IReadOnlyList<int>>(),
                                 ParentReadOnlyListInterfaceOfStringProperty          = A.Dummy<IReadOnlyList<string>>(),
                                 ParentReadOnlyListInterfaceOfGuidProperty            = A.Dummy<IReadOnlyList<Guid>>(),
                                 ParentReadOnlyListInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime>>(),
                                 ParentReadOnlyListInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 ParentReadOnlyListInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyList<CustomClass>>(),
                                 ParentReadOnlyListInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyList<CustomBaseClass>>(),
                                 Child2ReadOnlyListInterfaceOfBoolProperty            = A.Dummy<IReadOnlyList<bool>>(),
                                 Child2ReadOnlyListInterfaceOfIntProperty             = A.Dummy<IReadOnlyList<int>>(),
                                 Child2ReadOnlyListInterfaceOfStringProperty          = A.Dummy<IReadOnlyList<string>>(),
                                 Child2ReadOnlyListInterfaceOfGuidProperty            = A.Dummy<IReadOnlyList<Guid>>(),
                                 Child2ReadOnlyListInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime>>(),
                                 Child2ReadOnlyListInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 Child2ReadOnlyListInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 Child2ReadOnlyListInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyList<CustomClass>>(),
                                 Child2ReadOnlyListInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyList<CustomBaseClass>>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelEqualityPublicSetReadOnlyListParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPrivateSetArrayOfNullable(
                                 A.Dummy<bool?[]>(),
                                 A.Dummy<int?[]>(),
                                 A.Dummy<Guid?[]>(),
                                 A.Dummy<DateTime?[]>(),
                                 A.Dummy<CustomEnum?[]>(),
                                 A.Dummy<CustomFlagsEnum?[]>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPrivateSetArrayOfNullableChild1(
                                 A.Dummy<bool?[]>(),
                                 A.Dummy<int?[]>(),
                                 A.Dummy<Guid?[]>(),
                                 A.Dummy<DateTime?[]>(),
                                 A.Dummy<CustomEnum?[]>(),
                                 A.Dummy<CustomFlagsEnum?[]>(),
                                 A.Dummy<bool?[]>(),
                                 A.Dummy<int?[]>(),
                                 A.Dummy<Guid?[]>(),
                                 A.Dummy<DateTime?[]>(),
                                 A.Dummy<CustomEnum?[]>(),
                                 A.Dummy<CustomFlagsEnum?[]>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPrivateSetArrayOfNullableChild2(
                                 A.Dummy<bool?[]>(),
                                 A.Dummy<int?[]>(),
                                 A.Dummy<Guid?[]>(),
                                 A.Dummy<DateTime?[]>(),
                                 A.Dummy<CustomEnum?[]>(),
                                 A.Dummy<CustomFlagsEnum?[]>(),
                                 A.Dummy<bool?[]>(),
                                 A.Dummy<int?[]>(),
                                 A.Dummy<Guid?[]>(),
                                 A.Dummy<DateTime?[]>(),
                                 A.Dummy<CustomEnum?[]>(),
                                 A.Dummy<CustomFlagsEnum?[]>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelHashingPrivateSetArrayOfNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPrivateSetArray(
                                 A.Dummy<bool[]>(),
                                 A.Dummy<int[]>(),
                                 A.Dummy<string[]>(),
                                 A.Dummy<Guid[]>(),
                                 A.Dummy<DateTime[]>(),
                                 A.Dummy<CustomEnum[]>(),
                                 A.Dummy<CustomFlagsEnum[]>(),
                                 A.Dummy<CustomClass[]>(),
                                 A.Dummy<CustomBaseClass[]>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPrivateSetArrayChild1(
                                 A.Dummy<bool[]>(),
                                 A.Dummy<int[]>(),
                                 A.Dummy<string[]>(),
                                 A.Dummy<Guid[]>(),
                                 A.Dummy<DateTime[]>(),
                                 A.Dummy<CustomEnum[]>(),
                                 A.Dummy<CustomFlagsEnum[]>(),
                                 A.Dummy<CustomClass[]>(),
                                 A.Dummy<CustomBaseClass[]>(),
                                 A.Dummy<bool[]>(),
                                 A.Dummy<int[]>(),
                                 A.Dummy<string[]>(),
                                 A.Dummy<Guid[]>(),
                                 A.Dummy<DateTime[]>(),
                                 A.Dummy<CustomEnum[]>(),
                                 A.Dummy<CustomFlagsEnum[]>(),
                                 A.Dummy<CustomClass[]>(),
                                 A.Dummy<CustomBaseClass[]>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPrivateSetArrayChild2(
                                 A.Dummy<bool[]>(),
                                 A.Dummy<int[]>(),
                                 A.Dummy<string[]>(),
                                 A.Dummy<Guid[]>(),
                                 A.Dummy<DateTime[]>(),
                                 A.Dummy<CustomEnum[]>(),
                                 A.Dummy<CustomFlagsEnum[]>(),
                                 A.Dummy<CustomClass[]>(),
                                 A.Dummy<CustomBaseClass[]>(),
                                 A.Dummy<bool[]>(),
                                 A.Dummy<int[]>(),
                                 A.Dummy<string[]>(),
                                 A.Dummy<Guid[]>(),
                                 A.Dummy<DateTime[]>(),
                                 A.Dummy<CustomEnum[]>(),
                                 A.Dummy<CustomFlagsEnum[]>(),
                                 A.Dummy<CustomClass[]>(),
                                 A.Dummy<CustomBaseClass[]>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelHashingPrivateSetArrayParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPrivateSetMisc(
                                 A.Dummy<ICollection<string>>(),
                                 A.Dummy<IList<string>>(),
                                 A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 A.Dummy<IList<ICollection<string>>>(),
                                 A.Dummy<IReadOnlyList<IList<string>>>(),
                                 A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPrivateSetMiscChild1(
                                 A.Dummy<ICollection<string>>(),
                                 A.Dummy<IList<string>>(),
                                 A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 A.Dummy<IList<ICollection<string>>>(),
                                 A.Dummy<IReadOnlyList<IList<string>>>(),
                                 A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>(),
                                 A.Dummy<ICollection<string>>(),
                                 A.Dummy<IList<string>>(),
                                 A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 A.Dummy<IList<ICollection<string>>>(),
                                 A.Dummy<IReadOnlyList<IList<string>>>(),
                                 A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPrivateSetMiscChild2(
                                 A.Dummy<ICollection<string>>(),
                                 A.Dummy<IList<string>>(),
                                 A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 A.Dummy<IList<ICollection<string>>>(),
                                 A.Dummy<IReadOnlyList<IList<string>>>(),
                                 A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>(),
                                 A.Dummy<ICollection<string>>(),
                                 A.Dummy<IList<string>>(),
                                 A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 A.Dummy<IList<ICollection<string>>>(),
                                 A.Dummy<IReadOnlyList<IList<string>>>(),
                                 A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelHashingPrivateSetMiscParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPrivateSetNone(
                                 A.Dummy<bool>(),
                                 A.Dummy<int>(),
                                 A.Dummy<string>(),
                                 A.Dummy<Guid>(),
                                 A.Dummy<DateTime>(),
                                 A.Dummy<CustomEnum>(),
                                 A.Dummy<CustomFlagsEnum>(),
                                 A.Dummy<CustomClass>(),
                                 A.Dummy<CustomBaseClass>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPrivateSetNoneChild1(
                                 A.Dummy<bool>(),
                                 A.Dummy<int>(),
                                 A.Dummy<string>(),
                                 A.Dummy<Guid>(),
                                 A.Dummy<DateTime>(),
                                 A.Dummy<CustomEnum>(),
                                 A.Dummy<CustomFlagsEnum>(),
                                 A.Dummy<CustomClass>(),
                                 A.Dummy<CustomBaseClass>(),
                                 A.Dummy<bool>(),
                                 A.Dummy<int>(),
                                 A.Dummy<string>(),
                                 A.Dummy<Guid>(),
                                 A.Dummy<DateTime>(),
                                 A.Dummy<CustomEnum>(),
                                 A.Dummy<CustomFlagsEnum>(),
                                 A.Dummy<CustomClass>(),
                                 A.Dummy<CustomBaseClass>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPrivateSetNoneChild2(
                                 A.Dummy<bool>(),
                                 A.Dummy<int>(),
                                 A.Dummy<string>(),
                                 A.Dummy<Guid>(),
                                 A.Dummy<DateTime>(),
                                 A.Dummy<CustomEnum>(),
                                 A.Dummy<CustomFlagsEnum>(),
                                 A.Dummy<CustomClass>(),
                                 A.Dummy<CustomBaseClass>(),
                                 A.Dummy<bool>(),
                                 A.Dummy<int>(),
                                 A.Dummy<string>(),
                                 A.Dummy<Guid>(),
                                 A.Dummy<DateTime>(),
                                 A.Dummy<CustomEnum>(),
                                 A.Dummy<CustomFlagsEnum>(),
                                 A.Dummy<CustomClass>(),
                                 A.Dummy<CustomBaseClass>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelHashingPrivateSetNoneParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPrivateSetNullable(
                                 A.Dummy<bool?>(),
                                 A.Dummy<int?>(),
                                 A.Dummy<Guid?>(),
                                 A.Dummy<DateTime?>(),
                                 A.Dummy<CustomEnum?>(),
                                 A.Dummy<CustomFlagsEnum?>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPrivateSetNullableChild1(
                                 A.Dummy<bool?>(),
                                 A.Dummy<int?>(),
                                 A.Dummy<Guid?>(),
                                 A.Dummy<DateTime?>(),
                                 A.Dummy<CustomEnum?>(),
                                 A.Dummy<CustomFlagsEnum?>(),
                                 A.Dummy<bool?>(),
                                 A.Dummy<int?>(),
                                 A.Dummy<Guid?>(),
                                 A.Dummy<DateTime?>(),
                                 A.Dummy<CustomEnum?>(),
                                 A.Dummy<CustomFlagsEnum?>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPrivateSetNullableChild2(
                                 A.Dummy<bool?>(),
                                 A.Dummy<int?>(),
                                 A.Dummy<Guid?>(),
                                 A.Dummy<DateTime?>(),
                                 A.Dummy<CustomEnum?>(),
                                 A.Dummy<CustomFlagsEnum?>(),
                                 A.Dummy<bool?>(),
                                 A.Dummy<int?>(),
                                 A.Dummy<Guid?>(),
                                 A.Dummy<DateTime?>(),
                                 A.Dummy<CustomEnum?>(),
                                 A.Dummy<CustomFlagsEnum?>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelHashingPrivateSetNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPrivateSetReadOnlyCollectionOfNullable(
                                 A.Dummy<IReadOnlyCollection<bool?>>(),
                                 A.Dummy<IReadOnlyCollection<int?>>(),
                                 A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPrivateSetReadOnlyCollectionOfNullableChild1(
                                 A.Dummy<IReadOnlyCollection<bool?>>(),
                                 A.Dummy<IReadOnlyCollection<int?>>(),
                                 A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>(),
                                 A.Dummy<IReadOnlyCollection<bool?>>(),
                                 A.Dummy<IReadOnlyCollection<int?>>(),
                                 A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPrivateSetReadOnlyCollectionOfNullableChild2(
                                 A.Dummy<IReadOnlyCollection<bool?>>(),
                                 A.Dummy<IReadOnlyCollection<int?>>(),
                                 A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>(),
                                 A.Dummy<IReadOnlyCollection<bool?>>(),
                                 A.Dummy<IReadOnlyCollection<int?>>(),
                                 A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelHashingPrivateSetReadOnlyCollectionOfNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPrivateSetReadOnlyCollection(
                                 A.Dummy<IReadOnlyCollection<bool>>(),
                                 A.Dummy<IReadOnlyCollection<int>>(),
                                 A.Dummy<IReadOnlyCollection<string>>(),
                                 A.Dummy<IReadOnlyCollection<Guid>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 A.Dummy<IReadOnlyCollection<CustomBaseClass>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPrivateSetReadOnlyCollectionChild1(
                                 A.Dummy<IReadOnlyCollection<bool>>(),
                                 A.Dummy<IReadOnlyCollection<int>>(),
                                 A.Dummy<IReadOnlyCollection<string>>(),
                                 A.Dummy<IReadOnlyCollection<Guid>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 A.Dummy<IReadOnlyCollection<CustomBaseClass>>(),
                                 A.Dummy<IReadOnlyCollection<bool>>(),
                                 A.Dummy<IReadOnlyCollection<int>>(),
                                 A.Dummy<IReadOnlyCollection<string>>(),
                                 A.Dummy<IReadOnlyCollection<Guid>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 A.Dummy<IReadOnlyCollection<CustomBaseClass>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPrivateSetReadOnlyCollectionChild2(
                                 A.Dummy<IReadOnlyCollection<bool>>(),
                                 A.Dummy<IReadOnlyCollection<int>>(),
                                 A.Dummy<IReadOnlyCollection<string>>(),
                                 A.Dummy<IReadOnlyCollection<Guid>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 A.Dummy<IReadOnlyCollection<CustomBaseClass>>(),
                                 A.Dummy<IReadOnlyCollection<bool>>(),
                                 A.Dummy<IReadOnlyCollection<int>>(),
                                 A.Dummy<IReadOnlyCollection<string>>(),
                                 A.Dummy<IReadOnlyCollection<Guid>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 A.Dummy<IReadOnlyCollection<CustomBaseClass>>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelHashingPrivateSetReadOnlyCollectionParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPrivateSetReadOnlyDictionaryOfNullable(
                                 A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPrivateSetReadOnlyDictionaryOfNullableChild1(
                                 A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>(),
                                 A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPrivateSetReadOnlyDictionaryOfNullableChild2(
                                 A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>(),
                                 A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelHashingPrivateSetReadOnlyDictionaryOfNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPrivateSetReadOnlyDictionary(
                                 A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPrivateSetReadOnlyDictionaryChild1(
                                 A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>(),
                                 A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPrivateSetReadOnlyDictionaryChild2(
                                 A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>(),
                                 A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelHashingPrivateSetReadOnlyDictionaryParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPrivateSetReadOnlyListOfNullable(
                                 A.Dummy<IReadOnlyList<bool?>>(),
                                 A.Dummy<IReadOnlyList<int?>>(),
                                 A.Dummy<IReadOnlyList<Guid?>>(),
                                 A.Dummy<IReadOnlyList<DateTime?>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum?>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPrivateSetReadOnlyListOfNullableChild1(
                                 A.Dummy<IReadOnlyList<bool?>>(),
                                 A.Dummy<IReadOnlyList<int?>>(),
                                 A.Dummy<IReadOnlyList<Guid?>>(),
                                 A.Dummy<IReadOnlyList<DateTime?>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum?>>(),
                                 A.Dummy<IReadOnlyList<bool?>>(),
                                 A.Dummy<IReadOnlyList<int?>>(),
                                 A.Dummy<IReadOnlyList<Guid?>>(),
                                 A.Dummy<IReadOnlyList<DateTime?>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum?>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPrivateSetReadOnlyListOfNullableChild2(
                                 A.Dummy<IReadOnlyList<bool?>>(),
                                 A.Dummy<IReadOnlyList<int?>>(),
                                 A.Dummy<IReadOnlyList<Guid?>>(),
                                 A.Dummy<IReadOnlyList<DateTime?>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum?>>(),
                                 A.Dummy<IReadOnlyList<bool?>>(),
                                 A.Dummy<IReadOnlyList<int?>>(),
                                 A.Dummy<IReadOnlyList<Guid?>>(),
                                 A.Dummy<IReadOnlyList<DateTime?>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum?>>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelHashingPrivateSetReadOnlyListOfNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPrivateSetReadOnlyList(
                                 A.Dummy<IReadOnlyList<bool>>(),
                                 A.Dummy<IReadOnlyList<int>>(),
                                 A.Dummy<IReadOnlyList<string>>(),
                                 A.Dummy<IReadOnlyList<Guid>>(),
                                 A.Dummy<IReadOnlyList<DateTime>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomClass>>(),
                                 A.Dummy<IReadOnlyList<CustomBaseClass>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPrivateSetReadOnlyListChild1(
                                 A.Dummy<IReadOnlyList<bool>>(),
                                 A.Dummy<IReadOnlyList<int>>(),
                                 A.Dummy<IReadOnlyList<string>>(),
                                 A.Dummy<IReadOnlyList<Guid>>(),
                                 A.Dummy<IReadOnlyList<DateTime>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomClass>>(),
                                 A.Dummy<IReadOnlyList<CustomBaseClass>>(),
                                 A.Dummy<IReadOnlyList<bool>>(),
                                 A.Dummy<IReadOnlyList<int>>(),
                                 A.Dummy<IReadOnlyList<string>>(),
                                 A.Dummy<IReadOnlyList<Guid>>(),
                                 A.Dummy<IReadOnlyList<DateTime>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomClass>>(),
                                 A.Dummy<IReadOnlyList<CustomBaseClass>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPrivateSetReadOnlyListChild2(
                                 A.Dummy<IReadOnlyList<bool>>(),
                                 A.Dummy<IReadOnlyList<int>>(),
                                 A.Dummy<IReadOnlyList<string>>(),
                                 A.Dummy<IReadOnlyList<Guid>>(),
                                 A.Dummy<IReadOnlyList<DateTime>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomClass>>(),
                                 A.Dummy<IReadOnlyList<CustomBaseClass>>(),
                                 A.Dummy<IReadOnlyList<bool>>(),
                                 A.Dummy<IReadOnlyList<int>>(),
                                 A.Dummy<IReadOnlyList<string>>(),
                                 A.Dummy<IReadOnlyList<Guid>>(),
                                 A.Dummy<IReadOnlyList<DateTime>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomClass>>(),
                                 A.Dummy<IReadOnlyList<CustomBaseClass>>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelHashingPrivateSetReadOnlyListParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPublicSetArrayOfNullable
                             {
                                 ArrayOfNullableBoolProperty            = A.Dummy<bool?[]>(),
                                 ArrayOfNullableIntProperty             = A.Dummy<int?[]>(),
                                 ArrayOfNullableGuidProperty            = A.Dummy<Guid?[]>(),
                                 ArrayOfNullableDateTimeProperty        = A.Dummy<DateTime?[]>(),
                                 ArrayOfNullableCustomEnumProperty      = A.Dummy<CustomEnum?[]>(),
                                 ArrayOfNullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?[]>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPublicSetArrayOfNullableChild1
                             {
                                 ParentArrayOfNullableBoolProperty            = A.Dummy<bool?[]>(),
                                 ParentArrayOfNullableIntProperty             = A.Dummy<int?[]>(),
                                 ParentArrayOfNullableGuidProperty            = A.Dummy<Guid?[]>(),
                                 ParentArrayOfNullableDateTimeProperty        = A.Dummy<DateTime?[]>(),
                                 ParentArrayOfNullableCustomEnumProperty      = A.Dummy<CustomEnum?[]>(),
                                 ParentArrayOfNullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?[]>(),
                                 Child1ArrayOfNullableBoolProperty            = A.Dummy<bool?[]>(),
                                 Child1ArrayOfNullableIntProperty             = A.Dummy<int?[]>(),
                                 Child1ArrayOfNullableGuidProperty            = A.Dummy<Guid?[]>(),
                                 Child1ArrayOfNullableDateTimeProperty        = A.Dummy<DateTime?[]>(),
                                 Child1ArrayOfNullableCustomEnumProperty      = A.Dummy<CustomEnum?[]>(),
                                 Child1ArrayOfNullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?[]>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPublicSetArrayOfNullableChild2
                             {
                                 ParentArrayOfNullableBoolProperty            = A.Dummy<bool?[]>(),
                                 ParentArrayOfNullableIntProperty             = A.Dummy<int?[]>(),
                                 ParentArrayOfNullableGuidProperty            = A.Dummy<Guid?[]>(),
                                 ParentArrayOfNullableDateTimeProperty        = A.Dummy<DateTime?[]>(),
                                 ParentArrayOfNullableCustomEnumProperty      = A.Dummy<CustomEnum?[]>(),
                                 ParentArrayOfNullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?[]>(),
                                 Child2ArrayOfNullableBoolProperty            = A.Dummy<bool?[]>(),
                                 Child2ArrayOfNullableIntProperty             = A.Dummy<int?[]>(),
                                 Child2ArrayOfNullableGuidProperty            = A.Dummy<Guid?[]>(),
                                 Child2ArrayOfNullableDateTimeProperty        = A.Dummy<DateTime?[]>(),
                                 Child2ArrayOfNullableCustomEnumProperty      = A.Dummy<CustomEnum?[]>(),
                                 Child2ArrayOfNullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?[]>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelHashingPublicSetArrayOfNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPublicSetArray
                             {
                                 ArrayOfBoolProperty            = A.Dummy<bool[]>(),
                                 ArrayOfIntProperty             = A.Dummy<int[]>(),
                                 ArrayOfStringProperty          = A.Dummy<string[]>(),
                                 ArrayOfGuidProperty            = A.Dummy<Guid[]>(),
                                 ArrayOfDateTimeProperty        = A.Dummy<DateTime[]>(),
                                 ArrayOfCustomEnumProperty      = A.Dummy<CustomEnum[]>(),
                                 ArrayOfCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum[]>(),
                                 ArrayOfCustomClassProperty     = A.Dummy<CustomClass[]>(),
                                 ArrayOfCustomBaseClassProperty = A.Dummy<CustomBaseClass[]>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPublicSetArrayChild1
                             {
                                 ParentArrayOfBoolProperty            = A.Dummy<bool[]>(),
                                 ParentArrayOfIntProperty             = A.Dummy<int[]>(),
                                 ParentArrayOfStringProperty          = A.Dummy<string[]>(),
                                 ParentArrayOfGuidProperty            = A.Dummy<Guid[]>(),
                                 ParentArrayOfDateTimeProperty        = A.Dummy<DateTime[]>(),
                                 ParentArrayOfCustomEnumProperty      = A.Dummy<CustomEnum[]>(),
                                 ParentArrayOfCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum[]>(),
                                 ParentArrayOfCustomClassProperty     = A.Dummy<CustomClass[]>(),
                                 ParentArrayOfCustomBaseClassProperty = A.Dummy<CustomBaseClass[]>(),
                                 Child1ArrayOfBoolProperty            = A.Dummy<bool[]>(),
                                 Child1ArrayOfIntProperty             = A.Dummy<int[]>(),
                                 Child1ArrayOfStringProperty          = A.Dummy<string[]>(),
                                 Child1ArrayOfGuidProperty            = A.Dummy<Guid[]>(),
                                 Child1ArrayOfDateTimeProperty        = A.Dummy<DateTime[]>(),
                                 Child1ArrayOfCustomEnumProperty      = A.Dummy<CustomEnum[]>(),
                                 Child1ArrayOfCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum[]>(),
                                 Child1ArrayOfCustomClassProperty     = A.Dummy<CustomClass[]>(),
                                 Child1ArrayOfCustomBaseClassProperty = A.Dummy<CustomBaseClass[]>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPublicSetArrayChild2
                             {
                                 ParentArrayOfBoolProperty            = A.Dummy<bool[]>(),
                                 ParentArrayOfIntProperty             = A.Dummy<int[]>(),
                                 ParentArrayOfStringProperty          = A.Dummy<string[]>(),
                                 ParentArrayOfGuidProperty            = A.Dummy<Guid[]>(),
                                 ParentArrayOfDateTimeProperty        = A.Dummy<DateTime[]>(),
                                 ParentArrayOfCustomEnumProperty      = A.Dummy<CustomEnum[]>(),
                                 ParentArrayOfCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum[]>(),
                                 ParentArrayOfCustomClassProperty     = A.Dummy<CustomClass[]>(),
                                 ParentArrayOfCustomBaseClassProperty = A.Dummy<CustomBaseClass[]>(),
                                 Child2ArrayOfBoolProperty            = A.Dummy<bool[]>(),
                                 Child2ArrayOfIntProperty             = A.Dummy<int[]>(),
                                 Child2ArrayOfStringProperty          = A.Dummy<string[]>(),
                                 Child2ArrayOfGuidProperty            = A.Dummy<Guid[]>(),
                                 Child2ArrayOfDateTimeProperty        = A.Dummy<DateTime[]>(),
                                 Child2ArrayOfCustomEnumProperty      = A.Dummy<CustomEnum[]>(),
                                 Child2ArrayOfCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum[]>(),
                                 Child2ArrayOfCustomClassProperty     = A.Dummy<CustomClass[]>(),
                                 Child2ArrayOfCustomBaseClassProperty = A.Dummy<CustomBaseClass[]>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelHashingPublicSetArrayParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPublicSetMisc
                             {
                                 CollectionInterfaceOfStringProperty                                                                                    = A.Dummy<ICollection<string>>(),
                                 ListInterfaceOfStringProperty                                                                                          = A.Dummy<IList<string>>(),
                                 ReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty                                                       = A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 CollectionInterfaceOfReadOnlyListInterfaceOfStringProperty                                                             = A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 ListInterfaceOfCollectionInterfaceOfStringProperty                                                                     = A.Dummy<IList<ICollection<string>>>(),
                                 ReadOnlyListInterfaceOfListInterfaceOfStringProperty                                                                   = A.Dummy<IReadOnlyList<IList<string>>>(),
                                 DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                                                           = A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 ReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty                                                     = A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                            = A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty = A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPublicSetMiscChild1
                             {
                                 ParentCollectionInterfaceOfStringProperty                                                                                    = A.Dummy<ICollection<string>>(),
                                 ParentListInterfaceOfStringProperty                                                                                          = A.Dummy<IList<string>>(),
                                 ParentReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty                                                       = A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 ParentCollectionInterfaceOfReadOnlyListInterfaceOfStringProperty                                                             = A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 ParentListInterfaceOfCollectionInterfaceOfStringProperty                                                                     = A.Dummy<IList<ICollection<string>>>(),
                                 ParentReadOnlyListInterfaceOfListInterfaceOfStringProperty                                                                   = A.Dummy<IReadOnlyList<IList<string>>>(),
                                 ParentDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                                                           = A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty                                                     = A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 ParentReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                            = A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 ParentReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty = A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>(),
                                 Child1CollectionInterfaceOfStringProperty                                                                                    = A.Dummy<ICollection<string>>(),
                                 Child1ListInterfaceOfStringProperty                                                                                          = A.Dummy<IList<string>>(),
                                 Child1ReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty                                                       = A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 Child1CollectionInterfaceOfReadOnlyListInterfaceOfStringProperty                                                             = A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 Child1ListInterfaceOfCollectionInterfaceOfStringProperty                                                                     = A.Dummy<IList<ICollection<string>>>(),
                                 Child1ReadOnlyListInterfaceOfListInterfaceOfStringProperty                                                                   = A.Dummy<IReadOnlyList<IList<string>>>(),
                                 Child1DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                                                           = A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty                                                     = A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 Child1ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                            = A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty = A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPublicSetMiscChild2
                             {
                                 ParentCollectionInterfaceOfStringProperty                                                                                    = A.Dummy<ICollection<string>>(),
                                 ParentListInterfaceOfStringProperty                                                                                          = A.Dummy<IList<string>>(),
                                 ParentReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty                                                       = A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 ParentCollectionInterfaceOfReadOnlyListInterfaceOfStringProperty                                                             = A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 ParentListInterfaceOfCollectionInterfaceOfStringProperty                                                                     = A.Dummy<IList<ICollection<string>>>(),
                                 ParentReadOnlyListInterfaceOfListInterfaceOfStringProperty                                                                   = A.Dummy<IReadOnlyList<IList<string>>>(),
                                 ParentDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                                                           = A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty                                                     = A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 ParentReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                            = A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 ParentReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty = A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>(),
                                 Child2CollectionInterfaceOfStringProperty                                                                                    = A.Dummy<ICollection<string>>(),
                                 Child2ListInterfaceOfStringProperty                                                                                          = A.Dummy<IList<string>>(),
                                 Child2ReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty                                                       = A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 Child2CollectionInterfaceOfReadOnlyListInterfaceOfStringProperty                                                             = A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 Child2ListInterfaceOfCollectionInterfaceOfStringProperty                                                                     = A.Dummy<IList<ICollection<string>>>(),
                                 Child2ReadOnlyListInterfaceOfListInterfaceOfStringProperty                                                                   = A.Dummy<IReadOnlyList<IList<string>>>(),
                                 Child2DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                                                           = A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty                                                     = A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 Child2ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                            = A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty = A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelHashingPublicSetMiscParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPublicSetNone
                             {
                                 BoolProperty            = A.Dummy<bool>(),
                                 IntProperty             = A.Dummy<int>(),
                                 StringProperty          = A.Dummy<string>(),
                                 GuidProperty            = A.Dummy<Guid>(),
                                 DateTimeProperty        = A.Dummy<DateTime>(),
                                 CustomEnumProperty      = A.Dummy<CustomEnum>(),
                                 CustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum>(),
                                 CustomClassProperty     = A.Dummy<CustomClass>(),
                                 CustomBaseClassProperty = A.Dummy<CustomBaseClass>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPublicSetNoneChild1
                             {
                                 ParentBoolProperty            = A.Dummy<bool>(),
                                 ParentIntProperty             = A.Dummy<int>(),
                                 ParentStringProperty          = A.Dummy<string>(),
                                 ParentGuidProperty            = A.Dummy<Guid>(),
                                 ParentDateTimeProperty        = A.Dummy<DateTime>(),
                                 ParentCustomEnumProperty      = A.Dummy<CustomEnum>(),
                                 ParentCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum>(),
                                 ParentCustomClassProperty     = A.Dummy<CustomClass>(),
                                 ParentCustomBaseClassProperty = A.Dummy<CustomBaseClass>(),
                                 Child1BoolProperty            = A.Dummy<bool>(),
                                 Child1IntProperty             = A.Dummy<int>(),
                                 Child1StringProperty          = A.Dummy<string>(),
                                 Child1GuidProperty            = A.Dummy<Guid>(),
                                 Child1DateTimeProperty        = A.Dummy<DateTime>(),
                                 Child1CustomEnumProperty      = A.Dummy<CustomEnum>(),
                                 Child1CustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum>(),
                                 Child1CustomClassProperty     = A.Dummy<CustomClass>(),
                                 Child1CustomBaseClassProperty = A.Dummy<CustomBaseClass>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPublicSetNoneChild2
                             {
                                 ParentBoolProperty            = A.Dummy<bool>(),
                                 ParentIntProperty             = A.Dummy<int>(),
                                 ParentStringProperty          = A.Dummy<string>(),
                                 ParentGuidProperty            = A.Dummy<Guid>(),
                                 ParentDateTimeProperty        = A.Dummy<DateTime>(),
                                 ParentCustomEnumProperty      = A.Dummy<CustomEnum>(),
                                 ParentCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum>(),
                                 ParentCustomClassProperty     = A.Dummy<CustomClass>(),
                                 ParentCustomBaseClassProperty = A.Dummy<CustomBaseClass>(),
                                 Child2BoolProperty            = A.Dummy<bool>(),
                                 Child2IntProperty             = A.Dummy<int>(),
                                 Child2StringProperty          = A.Dummy<string>(),
                                 Child2GuidProperty            = A.Dummy<Guid>(),
                                 Child2DateTimeProperty        = A.Dummy<DateTime>(),
                                 Child2CustomEnumProperty      = A.Dummy<CustomEnum>(),
                                 Child2CustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum>(),
                                 Child2CustomClassProperty     = A.Dummy<CustomClass>(),
                                 Child2CustomBaseClassProperty = A.Dummy<CustomBaseClass>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelHashingPublicSetNoneParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPublicSetNullable
                             {
                                 NullableBoolProperty            = A.Dummy<bool?>(),
                                 NullableIntProperty             = A.Dummy<int?>(),
                                 NullableGuidProperty            = A.Dummy<Guid?>(),
                                 NullableDateTimeProperty        = A.Dummy<DateTime?>(),
                                 NullableCustomEnumProperty      = A.Dummy<CustomEnum?>(),
                                 NullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPublicSetNullableChild1
                             {
                                 ParentNullableBoolProperty            = A.Dummy<bool?>(),
                                 ParentNullableIntProperty             = A.Dummy<int?>(),
                                 ParentNullableGuidProperty            = A.Dummy<Guid?>(),
                                 ParentNullableDateTimeProperty        = A.Dummy<DateTime?>(),
                                 ParentNullableCustomEnumProperty      = A.Dummy<CustomEnum?>(),
                                 ParentNullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?>(),
                                 Child1NullableBoolProperty            = A.Dummy<bool?>(),
                                 Child1NullableIntProperty             = A.Dummy<int?>(),
                                 Child1NullableGuidProperty            = A.Dummy<Guid?>(),
                                 Child1NullableDateTimeProperty        = A.Dummy<DateTime?>(),
                                 Child1NullableCustomEnumProperty      = A.Dummy<CustomEnum?>(),
                                 Child1NullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPublicSetNullableChild2
                             {
                                 ParentNullableBoolProperty            = A.Dummy<bool?>(),
                                 ParentNullableIntProperty             = A.Dummy<int?>(),
                                 ParentNullableGuidProperty            = A.Dummy<Guid?>(),
                                 ParentNullableDateTimeProperty        = A.Dummy<DateTime?>(),
                                 ParentNullableCustomEnumProperty      = A.Dummy<CustomEnum?>(),
                                 ParentNullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?>(),
                                 Child2NullableBoolProperty            = A.Dummy<bool?>(),
                                 Child2NullableIntProperty             = A.Dummy<int?>(),
                                 Child2NullableGuidProperty            = A.Dummy<Guid?>(),
                                 Child2NullableDateTimeProperty        = A.Dummy<DateTime?>(),
                                 Child2NullableCustomEnumProperty      = A.Dummy<CustomEnum?>(),
                                 Child2NullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelHashingPublicSetNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPublicSetReadOnlyCollectionOfNullable
                             {
                                 ReadOnlyCollectionInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyCollection<bool?>>(),
                                 ReadOnlyCollectionInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyCollection<int?>>(),
                                 ReadOnlyCollectionInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 ReadOnlyCollectionInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 ReadOnlyCollectionInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 ReadOnlyCollectionInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPublicSetReadOnlyCollectionOfNullableChild1
                             {
                                 ParentReadOnlyCollectionInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyCollection<bool?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyCollection<int?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>(),
                                 Child1ReadOnlyCollectionInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyCollection<bool?>>(),
                                 Child1ReadOnlyCollectionInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyCollection<int?>>(),
                                 Child1ReadOnlyCollectionInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 Child1ReadOnlyCollectionInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 Child1ReadOnlyCollectionInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 Child1ReadOnlyCollectionInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPublicSetReadOnlyCollectionOfNullableChild2
                             {
                                 ParentReadOnlyCollectionInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyCollection<bool?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyCollection<int?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>(),
                                 Child2ReadOnlyCollectionInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyCollection<bool?>>(),
                                 Child2ReadOnlyCollectionInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyCollection<int?>>(),
                                 Child2ReadOnlyCollectionInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 Child2ReadOnlyCollectionInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 Child2ReadOnlyCollectionInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 Child2ReadOnlyCollectionInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelHashingPublicSetReadOnlyCollectionOfNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPublicSetReadOnlyCollection
                             {
                                 ReadOnlyCollectionInterfaceOfBoolProperty            = A.Dummy<IReadOnlyCollection<bool>>(),
                                 ReadOnlyCollectionInterfaceOfIntProperty             = A.Dummy<IReadOnlyCollection<int>>(),
                                 ReadOnlyCollectionInterfaceOfStringProperty          = A.Dummy<IReadOnlyCollection<string>>(),
                                 ReadOnlyCollectionInterfaceOfGuidProperty            = A.Dummy<IReadOnlyCollection<Guid>>(),
                                 ReadOnlyCollectionInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 ReadOnlyCollectionInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 ReadOnlyCollectionInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 ReadOnlyCollectionInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyCollection<CustomBaseClass>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPublicSetReadOnlyCollectionChild1
                             {
                                 ParentReadOnlyCollectionInterfaceOfBoolProperty            = A.Dummy<IReadOnlyCollection<bool>>(),
                                 ParentReadOnlyCollectionInterfaceOfIntProperty             = A.Dummy<IReadOnlyCollection<int>>(),
                                 ParentReadOnlyCollectionInterfaceOfStringProperty          = A.Dummy<IReadOnlyCollection<string>>(),
                                 ParentReadOnlyCollectionInterfaceOfGuidProperty            = A.Dummy<IReadOnlyCollection<Guid>>(),
                                 ParentReadOnlyCollectionInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 ParentReadOnlyCollectionInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 ParentReadOnlyCollectionInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyCollection<CustomBaseClass>>(),
                                 Child1ReadOnlyCollectionInterfaceOfBoolProperty            = A.Dummy<IReadOnlyCollection<bool>>(),
                                 Child1ReadOnlyCollectionInterfaceOfIntProperty             = A.Dummy<IReadOnlyCollection<int>>(),
                                 Child1ReadOnlyCollectionInterfaceOfStringProperty          = A.Dummy<IReadOnlyCollection<string>>(),
                                 Child1ReadOnlyCollectionInterfaceOfGuidProperty            = A.Dummy<IReadOnlyCollection<Guid>>(),
                                 Child1ReadOnlyCollectionInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyCollection<CustomBaseClass>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPublicSetReadOnlyCollectionChild2
                             {
                                 ParentReadOnlyCollectionInterfaceOfBoolProperty            = A.Dummy<IReadOnlyCollection<bool>>(),
                                 ParentReadOnlyCollectionInterfaceOfIntProperty             = A.Dummy<IReadOnlyCollection<int>>(),
                                 ParentReadOnlyCollectionInterfaceOfStringProperty          = A.Dummy<IReadOnlyCollection<string>>(),
                                 ParentReadOnlyCollectionInterfaceOfGuidProperty            = A.Dummy<IReadOnlyCollection<Guid>>(),
                                 ParentReadOnlyCollectionInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 ParentReadOnlyCollectionInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 ParentReadOnlyCollectionInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyCollection<CustomBaseClass>>(),
                                 Child2ReadOnlyCollectionInterfaceOfBoolProperty            = A.Dummy<IReadOnlyCollection<bool>>(),
                                 Child2ReadOnlyCollectionInterfaceOfIntProperty             = A.Dummy<IReadOnlyCollection<int>>(),
                                 Child2ReadOnlyCollectionInterfaceOfStringProperty          = A.Dummy<IReadOnlyCollection<string>>(),
                                 Child2ReadOnlyCollectionInterfaceOfGuidProperty            = A.Dummy<IReadOnlyCollection<Guid>>(),
                                 Child2ReadOnlyCollectionInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 Child2ReadOnlyCollectionInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 Child2ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 Child2ReadOnlyCollectionInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 Child2ReadOnlyCollectionInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyCollection<CustomBaseClass>>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelHashingPublicSetReadOnlyCollectionParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPublicSetReadOnlyDictionaryOfNullable
                             {
                                 ReadOnlyDictionaryInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 ReadOnlyDictionaryInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 ReadOnlyDictionaryInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 ReadOnlyDictionaryInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 ReadOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPublicSetReadOnlyDictionaryOfNullableChild1
                             {
                                 ParentReadOnlyDictionaryInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 ParentReadOnlyDictionaryInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 ParentReadOnlyDictionaryInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 ParentReadOnlyDictionaryInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 ParentReadOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPublicSetReadOnlyDictionaryOfNullableChild2
                             {
                                 ParentReadOnlyDictionaryInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 ParentReadOnlyDictionaryInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 ParentReadOnlyDictionaryInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 ParentReadOnlyDictionaryInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 ParentReadOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelHashingPublicSetReadOnlyDictionaryOfNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPublicSetReadOnlyDictionary
                             {
                                 ReadOnlyDictionaryInterfaceOfBoolProperty            = A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 ReadOnlyDictionaryInterfaceOfIntProperty             = A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 ReadOnlyDictionaryInterfaceOfStringProperty          = A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 ReadOnlyDictionaryInterfaceOfGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 ReadOnlyDictionaryInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 ReadOnlyDictionaryInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 ReadOnlyDictionaryInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 ReadOnlyDictionaryInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPublicSetReadOnlyDictionaryChild1
                             {
                                 ParentReadOnlyDictionaryInterfaceOfBoolProperty            = A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 ParentReadOnlyDictionaryInterfaceOfIntProperty             = A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 ParentReadOnlyDictionaryInterfaceOfStringProperty          = A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 ParentReadOnlyDictionaryInterfaceOfGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfBoolProperty            = A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfIntProperty             = A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfStringProperty          = A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPublicSetReadOnlyDictionaryChild2
                             {
                                 ParentReadOnlyDictionaryInterfaceOfBoolProperty            = A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 ParentReadOnlyDictionaryInterfaceOfIntProperty             = A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 ParentReadOnlyDictionaryInterfaceOfStringProperty          = A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 ParentReadOnlyDictionaryInterfaceOfGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfBoolProperty            = A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfIntProperty             = A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfStringProperty          = A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelHashingPublicSetReadOnlyDictionaryParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPublicSetReadOnlyListOfNullable
                             {
                                 ReadOnlyListInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyList<bool?>>(),
                                 ReadOnlyListInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyList<int?>>(),
                                 ReadOnlyListInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyList<Guid?>>(),
                                 ReadOnlyListInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime?>>(),
                                 ReadOnlyListInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 ReadOnlyListInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum?>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPublicSetReadOnlyListOfNullableChild1
                             {
                                 ParentReadOnlyListInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyList<bool?>>(),
                                 ParentReadOnlyListInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyList<int?>>(),
                                 ParentReadOnlyListInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyList<Guid?>>(),
                                 ParentReadOnlyListInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime?>>(),
                                 ParentReadOnlyListInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 ParentReadOnlyListInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum?>>(),
                                 Child1ReadOnlyListInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyList<bool?>>(),
                                 Child1ReadOnlyListInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyList<int?>>(),
                                 Child1ReadOnlyListInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyList<Guid?>>(),
                                 Child1ReadOnlyListInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime?>>(),
                                 Child1ReadOnlyListInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 Child1ReadOnlyListInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum?>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPublicSetReadOnlyListOfNullableChild2
                             {
                                 ParentReadOnlyListInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyList<bool?>>(),
                                 ParentReadOnlyListInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyList<int?>>(),
                                 ParentReadOnlyListInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyList<Guid?>>(),
                                 ParentReadOnlyListInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime?>>(),
                                 ParentReadOnlyListInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 ParentReadOnlyListInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum?>>(),
                                 Child2ReadOnlyListInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyList<bool?>>(),
                                 Child2ReadOnlyListInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyList<int?>>(),
                                 Child2ReadOnlyListInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyList<Guid?>>(),
                                 Child2ReadOnlyListInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime?>>(),
                                 Child2ReadOnlyListInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 Child2ReadOnlyListInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum?>>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelHashingPublicSetReadOnlyListOfNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPublicSetReadOnlyList
                             {
                                 ReadOnlyListInterfaceOfBoolProperty            = A.Dummy<IReadOnlyList<bool>>(),
                                 ReadOnlyListInterfaceOfIntProperty             = A.Dummy<IReadOnlyList<int>>(),
                                 ReadOnlyListInterfaceOfStringProperty          = A.Dummy<IReadOnlyList<string>>(),
                                 ReadOnlyListInterfaceOfGuidProperty            = A.Dummy<IReadOnlyList<Guid>>(),
                                 ReadOnlyListInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime>>(),
                                 ReadOnlyListInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 ReadOnlyListInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 ReadOnlyListInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyList<CustomClass>>(),
                                 ReadOnlyListInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyList<CustomBaseClass>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPublicSetReadOnlyListChild1
                             {
                                 ParentReadOnlyListInterfaceOfBoolProperty            = A.Dummy<IReadOnlyList<bool>>(),
                                 ParentReadOnlyListInterfaceOfIntProperty             = A.Dummy<IReadOnlyList<int>>(),
                                 ParentReadOnlyListInterfaceOfStringProperty          = A.Dummy<IReadOnlyList<string>>(),
                                 ParentReadOnlyListInterfaceOfGuidProperty            = A.Dummy<IReadOnlyList<Guid>>(),
                                 ParentReadOnlyListInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime>>(),
                                 ParentReadOnlyListInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 ParentReadOnlyListInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyList<CustomClass>>(),
                                 ParentReadOnlyListInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyList<CustomBaseClass>>(),
                                 Child1ReadOnlyListInterfaceOfBoolProperty            = A.Dummy<IReadOnlyList<bool>>(),
                                 Child1ReadOnlyListInterfaceOfIntProperty             = A.Dummy<IReadOnlyList<int>>(),
                                 Child1ReadOnlyListInterfaceOfStringProperty          = A.Dummy<IReadOnlyList<string>>(),
                                 Child1ReadOnlyListInterfaceOfGuidProperty            = A.Dummy<IReadOnlyList<Guid>>(),
                                 Child1ReadOnlyListInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime>>(),
                                 Child1ReadOnlyListInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 Child1ReadOnlyListInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyList<CustomClass>>(),
                                 Child1ReadOnlyListInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyList<CustomBaseClass>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelHashingPublicSetReadOnlyListChild2
                             {
                                 ParentReadOnlyListInterfaceOfBoolProperty            = A.Dummy<IReadOnlyList<bool>>(),
                                 ParentReadOnlyListInterfaceOfIntProperty             = A.Dummy<IReadOnlyList<int>>(),
                                 ParentReadOnlyListInterfaceOfStringProperty          = A.Dummy<IReadOnlyList<string>>(),
                                 ParentReadOnlyListInterfaceOfGuidProperty            = A.Dummy<IReadOnlyList<Guid>>(),
                                 ParentReadOnlyListInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime>>(),
                                 ParentReadOnlyListInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 ParentReadOnlyListInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyList<CustomClass>>(),
                                 ParentReadOnlyListInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyList<CustomBaseClass>>(),
                                 Child2ReadOnlyListInterfaceOfBoolProperty            = A.Dummy<IReadOnlyList<bool>>(),
                                 Child2ReadOnlyListInterfaceOfIntProperty             = A.Dummy<IReadOnlyList<int>>(),
                                 Child2ReadOnlyListInterfaceOfStringProperty          = A.Dummy<IReadOnlyList<string>>(),
                                 Child2ReadOnlyListInterfaceOfGuidProperty            = A.Dummy<IReadOnlyList<Guid>>(),
                                 Child2ReadOnlyListInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime>>(),
                                 Child2ReadOnlyListInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 Child2ReadOnlyListInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 Child2ReadOnlyListInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyList<CustomClass>>(),
                                 Child2ReadOnlyListInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyList<CustomBaseClass>>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelHashingPublicSetReadOnlyListParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPrivateSetArrayOfNullable(
                                 A.Dummy<bool?[]>(),
                                 A.Dummy<int?[]>(),
                                 A.Dummy<Guid?[]>(),
                                 A.Dummy<DateTime?[]>(),
                                 A.Dummy<CustomEnum?[]>(),
                                 A.Dummy<CustomFlagsEnum?[]>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPrivateSetArrayOfNullableChild1(
                                 A.Dummy<bool?[]>(),
                                 A.Dummy<int?[]>(),
                                 A.Dummy<Guid?[]>(),
                                 A.Dummy<DateTime?[]>(),
                                 A.Dummy<CustomEnum?[]>(),
                                 A.Dummy<CustomFlagsEnum?[]>(),
                                 A.Dummy<bool?[]>(),
                                 A.Dummy<int?[]>(),
                                 A.Dummy<Guid?[]>(),
                                 A.Dummy<DateTime?[]>(),
                                 A.Dummy<CustomEnum?[]>(),
                                 A.Dummy<CustomFlagsEnum?[]>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPrivateSetArrayOfNullableChild2(
                                 A.Dummy<bool?[]>(),
                                 A.Dummy<int?[]>(),
                                 A.Dummy<Guid?[]>(),
                                 A.Dummy<DateTime?[]>(),
                                 A.Dummy<CustomEnum?[]>(),
                                 A.Dummy<CustomFlagsEnum?[]>(),
                                 A.Dummy<bool?[]>(),
                                 A.Dummy<int?[]>(),
                                 A.Dummy<Guid?[]>(),
                                 A.Dummy<DateTime?[]>(),
                                 A.Dummy<CustomEnum?[]>(),
                                 A.Dummy<CustomFlagsEnum?[]>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelStringRepresentationPrivateSetArrayOfNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPrivateSetArray(
                                 A.Dummy<bool[]>(),
                                 A.Dummy<int[]>(),
                                 A.Dummy<string[]>(),
                                 A.Dummy<Guid[]>(),
                                 A.Dummy<DateTime[]>(),
                                 A.Dummy<CustomEnum[]>(),
                                 A.Dummy<CustomFlagsEnum[]>(),
                                 A.Dummy<CustomClass[]>(),
                                 A.Dummy<CustomBaseClass[]>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPrivateSetArrayChild1(
                                 A.Dummy<bool[]>(),
                                 A.Dummy<int[]>(),
                                 A.Dummy<string[]>(),
                                 A.Dummy<Guid[]>(),
                                 A.Dummy<DateTime[]>(),
                                 A.Dummy<CustomEnum[]>(),
                                 A.Dummy<CustomFlagsEnum[]>(),
                                 A.Dummy<CustomClass[]>(),
                                 A.Dummy<CustomBaseClass[]>(),
                                 A.Dummy<bool[]>(),
                                 A.Dummy<int[]>(),
                                 A.Dummy<string[]>(),
                                 A.Dummy<Guid[]>(),
                                 A.Dummy<DateTime[]>(),
                                 A.Dummy<CustomEnum[]>(),
                                 A.Dummy<CustomFlagsEnum[]>(),
                                 A.Dummy<CustomClass[]>(),
                                 A.Dummy<CustomBaseClass[]>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPrivateSetArrayChild2(
                                 A.Dummy<bool[]>(),
                                 A.Dummy<int[]>(),
                                 A.Dummy<string[]>(),
                                 A.Dummy<Guid[]>(),
                                 A.Dummy<DateTime[]>(),
                                 A.Dummy<CustomEnum[]>(),
                                 A.Dummy<CustomFlagsEnum[]>(),
                                 A.Dummy<CustomClass[]>(),
                                 A.Dummy<CustomBaseClass[]>(),
                                 A.Dummy<bool[]>(),
                                 A.Dummy<int[]>(),
                                 A.Dummy<string[]>(),
                                 A.Dummy<Guid[]>(),
                                 A.Dummy<DateTime[]>(),
                                 A.Dummy<CustomEnum[]>(),
                                 A.Dummy<CustomFlagsEnum[]>(),
                                 A.Dummy<CustomClass[]>(),
                                 A.Dummy<CustomBaseClass[]>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelStringRepresentationPrivateSetArrayParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPrivateSetMisc(
                                 A.Dummy<ICollection<string>>(),
                                 A.Dummy<IList<string>>(),
                                 A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 A.Dummy<IList<ICollection<string>>>(),
                                 A.Dummy<IReadOnlyList<IList<string>>>(),
                                 A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPrivateSetMiscChild1(
                                 A.Dummy<ICollection<string>>(),
                                 A.Dummy<IList<string>>(),
                                 A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 A.Dummy<IList<ICollection<string>>>(),
                                 A.Dummy<IReadOnlyList<IList<string>>>(),
                                 A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>(),
                                 A.Dummy<ICollection<string>>(),
                                 A.Dummy<IList<string>>(),
                                 A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 A.Dummy<IList<ICollection<string>>>(),
                                 A.Dummy<IReadOnlyList<IList<string>>>(),
                                 A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPrivateSetMiscChild2(
                                 A.Dummy<ICollection<string>>(),
                                 A.Dummy<IList<string>>(),
                                 A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 A.Dummy<IList<ICollection<string>>>(),
                                 A.Dummy<IReadOnlyList<IList<string>>>(),
                                 A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>(),
                                 A.Dummy<ICollection<string>>(),
                                 A.Dummy<IList<string>>(),
                                 A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 A.Dummy<IList<ICollection<string>>>(),
                                 A.Dummy<IReadOnlyList<IList<string>>>(),
                                 A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelStringRepresentationPrivateSetMiscParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPrivateSetNone(
                                 A.Dummy<bool>(),
                                 A.Dummy<int>(),
                                 A.Dummy<string>(),
                                 A.Dummy<Guid>(),
                                 A.Dummy<DateTime>(),
                                 A.Dummy<CustomEnum>(),
                                 A.Dummy<CustomFlagsEnum>(),
                                 A.Dummy<CustomClass>(),
                                 A.Dummy<CustomBaseClass>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPrivateSetNoneChild1(
                                 A.Dummy<bool>(),
                                 A.Dummy<int>(),
                                 A.Dummy<string>(),
                                 A.Dummy<Guid>(),
                                 A.Dummy<DateTime>(),
                                 A.Dummy<CustomEnum>(),
                                 A.Dummy<CustomFlagsEnum>(),
                                 A.Dummy<CustomClass>(),
                                 A.Dummy<CustomBaseClass>(),
                                 A.Dummy<bool>(),
                                 A.Dummy<int>(),
                                 A.Dummy<string>(),
                                 A.Dummy<Guid>(),
                                 A.Dummy<DateTime>(),
                                 A.Dummy<CustomEnum>(),
                                 A.Dummy<CustomFlagsEnum>(),
                                 A.Dummy<CustomClass>(),
                                 A.Dummy<CustomBaseClass>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPrivateSetNoneChild2(
                                 A.Dummy<bool>(),
                                 A.Dummy<int>(),
                                 A.Dummy<string>(),
                                 A.Dummy<Guid>(),
                                 A.Dummy<DateTime>(),
                                 A.Dummy<CustomEnum>(),
                                 A.Dummy<CustomFlagsEnum>(),
                                 A.Dummy<CustomClass>(),
                                 A.Dummy<CustomBaseClass>(),
                                 A.Dummy<bool>(),
                                 A.Dummy<int>(),
                                 A.Dummy<string>(),
                                 A.Dummy<Guid>(),
                                 A.Dummy<DateTime>(),
                                 A.Dummy<CustomEnum>(),
                                 A.Dummy<CustomFlagsEnum>(),
                                 A.Dummy<CustomClass>(),
                                 A.Dummy<CustomBaseClass>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelStringRepresentationPrivateSetNoneParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPrivateSetNullable(
                                 A.Dummy<bool?>(),
                                 A.Dummy<int?>(),
                                 A.Dummy<Guid?>(),
                                 A.Dummy<DateTime?>(),
                                 A.Dummy<CustomEnum?>(),
                                 A.Dummy<CustomFlagsEnum?>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPrivateSetNullableChild1(
                                 A.Dummy<bool?>(),
                                 A.Dummy<int?>(),
                                 A.Dummy<Guid?>(),
                                 A.Dummy<DateTime?>(),
                                 A.Dummy<CustomEnum?>(),
                                 A.Dummy<CustomFlagsEnum?>(),
                                 A.Dummy<bool?>(),
                                 A.Dummy<int?>(),
                                 A.Dummy<Guid?>(),
                                 A.Dummy<DateTime?>(),
                                 A.Dummy<CustomEnum?>(),
                                 A.Dummy<CustomFlagsEnum?>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPrivateSetNullableChild2(
                                 A.Dummy<bool?>(),
                                 A.Dummy<int?>(),
                                 A.Dummy<Guid?>(),
                                 A.Dummy<DateTime?>(),
                                 A.Dummy<CustomEnum?>(),
                                 A.Dummy<CustomFlagsEnum?>(),
                                 A.Dummy<bool?>(),
                                 A.Dummy<int?>(),
                                 A.Dummy<Guid?>(),
                                 A.Dummy<DateTime?>(),
                                 A.Dummy<CustomEnum?>(),
                                 A.Dummy<CustomFlagsEnum?>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelStringRepresentationPrivateSetNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPrivateSetReadOnlyCollectionOfNullable(
                                 A.Dummy<IReadOnlyCollection<bool?>>(),
                                 A.Dummy<IReadOnlyCollection<int?>>(),
                                 A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPrivateSetReadOnlyCollectionOfNullableChild1(
                                 A.Dummy<IReadOnlyCollection<bool?>>(),
                                 A.Dummy<IReadOnlyCollection<int?>>(),
                                 A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>(),
                                 A.Dummy<IReadOnlyCollection<bool?>>(),
                                 A.Dummy<IReadOnlyCollection<int?>>(),
                                 A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPrivateSetReadOnlyCollectionOfNullableChild2(
                                 A.Dummy<IReadOnlyCollection<bool?>>(),
                                 A.Dummy<IReadOnlyCollection<int?>>(),
                                 A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>(),
                                 A.Dummy<IReadOnlyCollection<bool?>>(),
                                 A.Dummy<IReadOnlyCollection<int?>>(),
                                 A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelStringRepresentationPrivateSetReadOnlyCollectionOfNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPrivateSetReadOnlyCollection(
                                 A.Dummy<IReadOnlyCollection<bool>>(),
                                 A.Dummy<IReadOnlyCollection<int>>(),
                                 A.Dummy<IReadOnlyCollection<string>>(),
                                 A.Dummy<IReadOnlyCollection<Guid>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 A.Dummy<IReadOnlyCollection<CustomBaseClass>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPrivateSetReadOnlyCollectionChild1(
                                 A.Dummy<IReadOnlyCollection<bool>>(),
                                 A.Dummy<IReadOnlyCollection<int>>(),
                                 A.Dummy<IReadOnlyCollection<string>>(),
                                 A.Dummy<IReadOnlyCollection<Guid>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 A.Dummy<IReadOnlyCollection<CustomBaseClass>>(),
                                 A.Dummy<IReadOnlyCollection<bool>>(),
                                 A.Dummy<IReadOnlyCollection<int>>(),
                                 A.Dummy<IReadOnlyCollection<string>>(),
                                 A.Dummy<IReadOnlyCollection<Guid>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 A.Dummy<IReadOnlyCollection<CustomBaseClass>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPrivateSetReadOnlyCollectionChild2(
                                 A.Dummy<IReadOnlyCollection<bool>>(),
                                 A.Dummy<IReadOnlyCollection<int>>(),
                                 A.Dummy<IReadOnlyCollection<string>>(),
                                 A.Dummy<IReadOnlyCollection<Guid>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 A.Dummy<IReadOnlyCollection<CustomBaseClass>>(),
                                 A.Dummy<IReadOnlyCollection<bool>>(),
                                 A.Dummy<IReadOnlyCollection<int>>(),
                                 A.Dummy<IReadOnlyCollection<string>>(),
                                 A.Dummy<IReadOnlyCollection<Guid>>(),
                                 A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 A.Dummy<IReadOnlyCollection<CustomBaseClass>>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelStringRepresentationPrivateSetReadOnlyCollectionParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPrivateSetReadOnlyDictionaryOfNullable(
                                 A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPrivateSetReadOnlyDictionaryOfNullableChild1(
                                 A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>(),
                                 A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPrivateSetReadOnlyDictionaryOfNullableChild2(
                                 A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>(),
                                 A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelStringRepresentationPrivateSetReadOnlyDictionaryOfNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPrivateSetReadOnlyDictionary(
                                 A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPrivateSetReadOnlyDictionaryChild1(
                                 A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>(),
                                 A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPrivateSetReadOnlyDictionaryChild2(
                                 A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>(),
                                 A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelStringRepresentationPrivateSetReadOnlyDictionaryParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPrivateSetReadOnlyListOfNullable(
                                 A.Dummy<IReadOnlyList<bool?>>(),
                                 A.Dummy<IReadOnlyList<int?>>(),
                                 A.Dummy<IReadOnlyList<Guid?>>(),
                                 A.Dummy<IReadOnlyList<DateTime?>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum?>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPrivateSetReadOnlyListOfNullableChild1(
                                 A.Dummy<IReadOnlyList<bool?>>(),
                                 A.Dummy<IReadOnlyList<int?>>(),
                                 A.Dummy<IReadOnlyList<Guid?>>(),
                                 A.Dummy<IReadOnlyList<DateTime?>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum?>>(),
                                 A.Dummy<IReadOnlyList<bool?>>(),
                                 A.Dummy<IReadOnlyList<int?>>(),
                                 A.Dummy<IReadOnlyList<Guid?>>(),
                                 A.Dummy<IReadOnlyList<DateTime?>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum?>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPrivateSetReadOnlyListOfNullableChild2(
                                 A.Dummy<IReadOnlyList<bool?>>(),
                                 A.Dummy<IReadOnlyList<int?>>(),
                                 A.Dummy<IReadOnlyList<Guid?>>(),
                                 A.Dummy<IReadOnlyList<DateTime?>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum?>>(),
                                 A.Dummy<IReadOnlyList<bool?>>(),
                                 A.Dummy<IReadOnlyList<int?>>(),
                                 A.Dummy<IReadOnlyList<Guid?>>(),
                                 A.Dummy<IReadOnlyList<DateTime?>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum?>>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelStringRepresentationPrivateSetReadOnlyListOfNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPrivateSetReadOnlyList(
                                 A.Dummy<IReadOnlyList<bool>>(),
                                 A.Dummy<IReadOnlyList<int>>(),
                                 A.Dummy<IReadOnlyList<string>>(),
                                 A.Dummy<IReadOnlyList<Guid>>(),
                                 A.Dummy<IReadOnlyList<DateTime>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomClass>>(),
                                 A.Dummy<IReadOnlyList<CustomBaseClass>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPrivateSetReadOnlyListChild1(
                                 A.Dummy<IReadOnlyList<bool>>(),
                                 A.Dummy<IReadOnlyList<int>>(),
                                 A.Dummy<IReadOnlyList<string>>(),
                                 A.Dummy<IReadOnlyList<Guid>>(),
                                 A.Dummy<IReadOnlyList<DateTime>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomClass>>(),
                                 A.Dummy<IReadOnlyList<CustomBaseClass>>(),
                                 A.Dummy<IReadOnlyList<bool>>(),
                                 A.Dummy<IReadOnlyList<int>>(),
                                 A.Dummy<IReadOnlyList<string>>(),
                                 A.Dummy<IReadOnlyList<Guid>>(),
                                 A.Dummy<IReadOnlyList<DateTime>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomClass>>(),
                                 A.Dummy<IReadOnlyList<CustomBaseClass>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPrivateSetReadOnlyListChild2(
                                 A.Dummy<IReadOnlyList<bool>>(),
                                 A.Dummy<IReadOnlyList<int>>(),
                                 A.Dummy<IReadOnlyList<string>>(),
                                 A.Dummy<IReadOnlyList<Guid>>(),
                                 A.Dummy<IReadOnlyList<DateTime>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomClass>>(),
                                 A.Dummy<IReadOnlyList<CustomBaseClass>>(),
                                 A.Dummy<IReadOnlyList<bool>>(),
                                 A.Dummy<IReadOnlyList<int>>(),
                                 A.Dummy<IReadOnlyList<string>>(),
                                 A.Dummy<IReadOnlyList<Guid>>(),
                                 A.Dummy<IReadOnlyList<DateTime>>(),
                                 A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 A.Dummy<IReadOnlyList<CustomClass>>(),
                                 A.Dummy<IReadOnlyList<CustomBaseClass>>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelStringRepresentationPrivateSetReadOnlyListParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPublicSetArrayOfNullable
                             {
                                 ArrayOfNullableBoolProperty            = A.Dummy<bool?[]>(),
                                 ArrayOfNullableIntProperty             = A.Dummy<int?[]>(),
                                 ArrayOfNullableGuidProperty            = A.Dummy<Guid?[]>(),
                                 ArrayOfNullableDateTimeProperty        = A.Dummy<DateTime?[]>(),
                                 ArrayOfNullableCustomEnumProperty      = A.Dummy<CustomEnum?[]>(),
                                 ArrayOfNullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?[]>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPublicSetArrayOfNullableChild1
                             {
                                 ParentArrayOfNullableBoolProperty            = A.Dummy<bool?[]>(),
                                 ParentArrayOfNullableIntProperty             = A.Dummy<int?[]>(),
                                 ParentArrayOfNullableGuidProperty            = A.Dummy<Guid?[]>(),
                                 ParentArrayOfNullableDateTimeProperty        = A.Dummy<DateTime?[]>(),
                                 ParentArrayOfNullableCustomEnumProperty      = A.Dummy<CustomEnum?[]>(),
                                 ParentArrayOfNullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?[]>(),
                                 Child1ArrayOfNullableBoolProperty            = A.Dummy<bool?[]>(),
                                 Child1ArrayOfNullableIntProperty             = A.Dummy<int?[]>(),
                                 Child1ArrayOfNullableGuidProperty            = A.Dummy<Guid?[]>(),
                                 Child1ArrayOfNullableDateTimeProperty        = A.Dummy<DateTime?[]>(),
                                 Child1ArrayOfNullableCustomEnumProperty      = A.Dummy<CustomEnum?[]>(),
                                 Child1ArrayOfNullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?[]>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPublicSetArrayOfNullableChild2
                             {
                                 ParentArrayOfNullableBoolProperty            = A.Dummy<bool?[]>(),
                                 ParentArrayOfNullableIntProperty             = A.Dummy<int?[]>(),
                                 ParentArrayOfNullableGuidProperty            = A.Dummy<Guid?[]>(),
                                 ParentArrayOfNullableDateTimeProperty        = A.Dummy<DateTime?[]>(),
                                 ParentArrayOfNullableCustomEnumProperty      = A.Dummy<CustomEnum?[]>(),
                                 ParentArrayOfNullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?[]>(),
                                 Child2ArrayOfNullableBoolProperty            = A.Dummy<bool?[]>(),
                                 Child2ArrayOfNullableIntProperty             = A.Dummy<int?[]>(),
                                 Child2ArrayOfNullableGuidProperty            = A.Dummy<Guid?[]>(),
                                 Child2ArrayOfNullableDateTimeProperty        = A.Dummy<DateTime?[]>(),
                                 Child2ArrayOfNullableCustomEnumProperty      = A.Dummy<CustomEnum?[]>(),
                                 Child2ArrayOfNullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?[]>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelStringRepresentationPublicSetArrayOfNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPublicSetArray
                             {
                                 ArrayOfBoolProperty            = A.Dummy<bool[]>(),
                                 ArrayOfIntProperty             = A.Dummy<int[]>(),
                                 ArrayOfStringProperty          = A.Dummy<string[]>(),
                                 ArrayOfGuidProperty            = A.Dummy<Guid[]>(),
                                 ArrayOfDateTimeProperty        = A.Dummy<DateTime[]>(),
                                 ArrayOfCustomEnumProperty      = A.Dummy<CustomEnum[]>(),
                                 ArrayOfCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum[]>(),
                                 ArrayOfCustomClassProperty     = A.Dummy<CustomClass[]>(),
                                 ArrayOfCustomBaseClassProperty = A.Dummy<CustomBaseClass[]>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPublicSetArrayChild1
                             {
                                 ParentArrayOfBoolProperty            = A.Dummy<bool[]>(),
                                 ParentArrayOfIntProperty             = A.Dummy<int[]>(),
                                 ParentArrayOfStringProperty          = A.Dummy<string[]>(),
                                 ParentArrayOfGuidProperty            = A.Dummy<Guid[]>(),
                                 ParentArrayOfDateTimeProperty        = A.Dummy<DateTime[]>(),
                                 ParentArrayOfCustomEnumProperty      = A.Dummy<CustomEnum[]>(),
                                 ParentArrayOfCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum[]>(),
                                 ParentArrayOfCustomClassProperty     = A.Dummy<CustomClass[]>(),
                                 ParentArrayOfCustomBaseClassProperty = A.Dummy<CustomBaseClass[]>(),
                                 Child1ArrayOfBoolProperty            = A.Dummy<bool[]>(),
                                 Child1ArrayOfIntProperty             = A.Dummy<int[]>(),
                                 Child1ArrayOfStringProperty          = A.Dummy<string[]>(),
                                 Child1ArrayOfGuidProperty            = A.Dummy<Guid[]>(),
                                 Child1ArrayOfDateTimeProperty        = A.Dummy<DateTime[]>(),
                                 Child1ArrayOfCustomEnumProperty      = A.Dummy<CustomEnum[]>(),
                                 Child1ArrayOfCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum[]>(),
                                 Child1ArrayOfCustomClassProperty     = A.Dummy<CustomClass[]>(),
                                 Child1ArrayOfCustomBaseClassProperty = A.Dummy<CustomBaseClass[]>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPublicSetArrayChild2
                             {
                                 ParentArrayOfBoolProperty            = A.Dummy<bool[]>(),
                                 ParentArrayOfIntProperty             = A.Dummy<int[]>(),
                                 ParentArrayOfStringProperty          = A.Dummy<string[]>(),
                                 ParentArrayOfGuidProperty            = A.Dummy<Guid[]>(),
                                 ParentArrayOfDateTimeProperty        = A.Dummy<DateTime[]>(),
                                 ParentArrayOfCustomEnumProperty      = A.Dummy<CustomEnum[]>(),
                                 ParentArrayOfCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum[]>(),
                                 ParentArrayOfCustomClassProperty     = A.Dummy<CustomClass[]>(),
                                 ParentArrayOfCustomBaseClassProperty = A.Dummy<CustomBaseClass[]>(),
                                 Child2ArrayOfBoolProperty            = A.Dummy<bool[]>(),
                                 Child2ArrayOfIntProperty             = A.Dummy<int[]>(),
                                 Child2ArrayOfStringProperty          = A.Dummy<string[]>(),
                                 Child2ArrayOfGuidProperty            = A.Dummy<Guid[]>(),
                                 Child2ArrayOfDateTimeProperty        = A.Dummy<DateTime[]>(),
                                 Child2ArrayOfCustomEnumProperty      = A.Dummy<CustomEnum[]>(),
                                 Child2ArrayOfCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum[]>(),
                                 Child2ArrayOfCustomClassProperty     = A.Dummy<CustomClass[]>(),
                                 Child2ArrayOfCustomBaseClassProperty = A.Dummy<CustomBaseClass[]>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelStringRepresentationPublicSetArrayParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPublicSetMisc
                             {
                                 CollectionInterfaceOfStringProperty                                                                                    = A.Dummy<ICollection<string>>(),
                                 ListInterfaceOfStringProperty                                                                                          = A.Dummy<IList<string>>(),
                                 ReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty                                                       = A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 CollectionInterfaceOfReadOnlyListInterfaceOfStringProperty                                                             = A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 ListInterfaceOfCollectionInterfaceOfStringProperty                                                                     = A.Dummy<IList<ICollection<string>>>(),
                                 ReadOnlyListInterfaceOfListInterfaceOfStringProperty                                                                   = A.Dummy<IReadOnlyList<IList<string>>>(),
                                 DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                                                           = A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 ReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty                                                     = A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                            = A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty = A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPublicSetMiscChild1
                             {
                                 ParentCollectionInterfaceOfStringProperty                                                                                    = A.Dummy<ICollection<string>>(),
                                 ParentListInterfaceOfStringProperty                                                                                          = A.Dummy<IList<string>>(),
                                 ParentReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty                                                       = A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 ParentCollectionInterfaceOfReadOnlyListInterfaceOfStringProperty                                                             = A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 ParentListInterfaceOfCollectionInterfaceOfStringProperty                                                                     = A.Dummy<IList<ICollection<string>>>(),
                                 ParentReadOnlyListInterfaceOfListInterfaceOfStringProperty                                                                   = A.Dummy<IReadOnlyList<IList<string>>>(),
                                 ParentDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                                                           = A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty                                                     = A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 ParentReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                            = A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 ParentReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty = A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>(),
                                 Child1CollectionInterfaceOfStringProperty                                                                                    = A.Dummy<ICollection<string>>(),
                                 Child1ListInterfaceOfStringProperty                                                                                          = A.Dummy<IList<string>>(),
                                 Child1ReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty                                                       = A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 Child1CollectionInterfaceOfReadOnlyListInterfaceOfStringProperty                                                             = A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 Child1ListInterfaceOfCollectionInterfaceOfStringProperty                                                                     = A.Dummy<IList<ICollection<string>>>(),
                                 Child1ReadOnlyListInterfaceOfListInterfaceOfStringProperty                                                                   = A.Dummy<IReadOnlyList<IList<string>>>(),
                                 Child1DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                                                           = A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty                                                     = A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 Child1ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                            = A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty = A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPublicSetMiscChild2
                             {
                                 ParentCollectionInterfaceOfStringProperty                                                                                    = A.Dummy<ICollection<string>>(),
                                 ParentListInterfaceOfStringProperty                                                                                          = A.Dummy<IList<string>>(),
                                 ParentReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty                                                       = A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 ParentCollectionInterfaceOfReadOnlyListInterfaceOfStringProperty                                                             = A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 ParentListInterfaceOfCollectionInterfaceOfStringProperty                                                                     = A.Dummy<IList<ICollection<string>>>(),
                                 ParentReadOnlyListInterfaceOfListInterfaceOfStringProperty                                                                   = A.Dummy<IReadOnlyList<IList<string>>>(),
                                 ParentDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                                                           = A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty                                                     = A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 ParentReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                            = A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 ParentReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty = A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>(),
                                 Child2CollectionInterfaceOfStringProperty                                                                                    = A.Dummy<ICollection<string>>(),
                                 Child2ListInterfaceOfStringProperty                                                                                          = A.Dummy<IList<string>>(),
                                 Child2ReadOnlyCollectionInterfaceOfCollectionInterfaceOfStringProperty                                                       = A.Dummy<IReadOnlyCollection<ICollection<string>>>(),
                                 Child2CollectionInterfaceOfReadOnlyListInterfaceOfStringProperty                                                             = A.Dummy<ICollection<IReadOnlyList<string>>>(),
                                 Child2ListInterfaceOfCollectionInterfaceOfStringProperty                                                                     = A.Dummy<IList<ICollection<string>>>(),
                                 Child2ReadOnlyListInterfaceOfListInterfaceOfStringProperty                                                                   = A.Dummy<IReadOnlyList<IList<string>>>(),
                                 Child2DictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                                                           = A.Dummy<IDictionary<string, IReadOnlyList<DateTime>>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfCollectionInterfaceOfDateTimeProperty                                                     = A.Dummy<IReadOnlyDictionary<string, ICollection<DateTime>>>(),
                                 Child2ReadOnlyListInterfaceOfReadOnlyDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty                            = A.Dummy<IReadOnlyList<IReadOnlyDictionary<string, IReadOnlyList<DateTime>>>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfReadOnlyDictionaryInterfaceOfDictionaryInterfaceOfReadOnlyListInterfaceOfDateTimeProperty = A.Dummy<IReadOnlyDictionary<string, IReadOnlyDictionary<string, IDictionary<CustomClass, IReadOnlyList<DateTime>>>>>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelStringRepresentationPublicSetMiscParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPublicSetNone
                             {
                                 BoolProperty            = A.Dummy<bool>(),
                                 IntProperty             = A.Dummy<int>(),
                                 StringProperty          = A.Dummy<string>(),
                                 GuidProperty            = A.Dummy<Guid>(),
                                 DateTimeProperty        = A.Dummy<DateTime>(),
                                 CustomEnumProperty      = A.Dummy<CustomEnum>(),
                                 CustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum>(),
                                 CustomClassProperty     = A.Dummy<CustomClass>(),
                                 CustomBaseClassProperty = A.Dummy<CustomBaseClass>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPublicSetNoneChild1
                             {
                                 ParentBoolProperty            = A.Dummy<bool>(),
                                 ParentIntProperty             = A.Dummy<int>(),
                                 ParentStringProperty          = A.Dummy<string>(),
                                 ParentGuidProperty            = A.Dummy<Guid>(),
                                 ParentDateTimeProperty        = A.Dummy<DateTime>(),
                                 ParentCustomEnumProperty      = A.Dummy<CustomEnum>(),
                                 ParentCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum>(),
                                 ParentCustomClassProperty     = A.Dummy<CustomClass>(),
                                 ParentCustomBaseClassProperty = A.Dummy<CustomBaseClass>(),
                                 Child1BoolProperty            = A.Dummy<bool>(),
                                 Child1IntProperty             = A.Dummy<int>(),
                                 Child1StringProperty          = A.Dummy<string>(),
                                 Child1GuidProperty            = A.Dummy<Guid>(),
                                 Child1DateTimeProperty        = A.Dummy<DateTime>(),
                                 Child1CustomEnumProperty      = A.Dummy<CustomEnum>(),
                                 Child1CustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum>(),
                                 Child1CustomClassProperty     = A.Dummy<CustomClass>(),
                                 Child1CustomBaseClassProperty = A.Dummy<CustomBaseClass>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPublicSetNoneChild2
                             {
                                 ParentBoolProperty            = A.Dummy<bool>(),
                                 ParentIntProperty             = A.Dummy<int>(),
                                 ParentStringProperty          = A.Dummy<string>(),
                                 ParentGuidProperty            = A.Dummy<Guid>(),
                                 ParentDateTimeProperty        = A.Dummy<DateTime>(),
                                 ParentCustomEnumProperty      = A.Dummy<CustomEnum>(),
                                 ParentCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum>(),
                                 ParentCustomClassProperty     = A.Dummy<CustomClass>(),
                                 ParentCustomBaseClassProperty = A.Dummy<CustomBaseClass>(),
                                 Child2BoolProperty            = A.Dummy<bool>(),
                                 Child2IntProperty             = A.Dummy<int>(),
                                 Child2StringProperty          = A.Dummy<string>(),
                                 Child2GuidProperty            = A.Dummy<Guid>(),
                                 Child2DateTimeProperty        = A.Dummy<DateTime>(),
                                 Child2CustomEnumProperty      = A.Dummy<CustomEnum>(),
                                 Child2CustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum>(),
                                 Child2CustomClassProperty     = A.Dummy<CustomClass>(),
                                 Child2CustomBaseClassProperty = A.Dummy<CustomBaseClass>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelStringRepresentationPublicSetNoneParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPublicSetNullable
                             {
                                 NullableBoolProperty            = A.Dummy<bool?>(),
                                 NullableIntProperty             = A.Dummy<int?>(),
                                 NullableGuidProperty            = A.Dummy<Guid?>(),
                                 NullableDateTimeProperty        = A.Dummy<DateTime?>(),
                                 NullableCustomEnumProperty      = A.Dummy<CustomEnum?>(),
                                 NullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPublicSetNullableChild1
                             {
                                 ParentNullableBoolProperty            = A.Dummy<bool?>(),
                                 ParentNullableIntProperty             = A.Dummy<int?>(),
                                 ParentNullableGuidProperty            = A.Dummy<Guid?>(),
                                 ParentNullableDateTimeProperty        = A.Dummy<DateTime?>(),
                                 ParentNullableCustomEnumProperty      = A.Dummy<CustomEnum?>(),
                                 ParentNullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?>(),
                                 Child1NullableBoolProperty            = A.Dummy<bool?>(),
                                 Child1NullableIntProperty             = A.Dummy<int?>(),
                                 Child1NullableGuidProperty            = A.Dummy<Guid?>(),
                                 Child1NullableDateTimeProperty        = A.Dummy<DateTime?>(),
                                 Child1NullableCustomEnumProperty      = A.Dummy<CustomEnum?>(),
                                 Child1NullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPublicSetNullableChild2
                             {
                                 ParentNullableBoolProperty            = A.Dummy<bool?>(),
                                 ParentNullableIntProperty             = A.Dummy<int?>(),
                                 ParentNullableGuidProperty            = A.Dummy<Guid?>(),
                                 ParentNullableDateTimeProperty        = A.Dummy<DateTime?>(),
                                 ParentNullableCustomEnumProperty      = A.Dummy<CustomEnum?>(),
                                 ParentNullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?>(),
                                 Child2NullableBoolProperty            = A.Dummy<bool?>(),
                                 Child2NullableIntProperty             = A.Dummy<int?>(),
                                 Child2NullableGuidProperty            = A.Dummy<Guid?>(),
                                 Child2NullableDateTimeProperty        = A.Dummy<DateTime?>(),
                                 Child2NullableCustomEnumProperty      = A.Dummy<CustomEnum?>(),
                                 Child2NullableCustomFlagsEnumProperty = A.Dummy<CustomFlagsEnum?>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelStringRepresentationPublicSetNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPublicSetReadOnlyCollectionOfNullable
                             {
                                 ReadOnlyCollectionInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyCollection<bool?>>(),
                                 ReadOnlyCollectionInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyCollection<int?>>(),
                                 ReadOnlyCollectionInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 ReadOnlyCollectionInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 ReadOnlyCollectionInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 ReadOnlyCollectionInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPublicSetReadOnlyCollectionOfNullableChild1
                             {
                                 ParentReadOnlyCollectionInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyCollection<bool?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyCollection<int?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>(),
                                 Child1ReadOnlyCollectionInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyCollection<bool?>>(),
                                 Child1ReadOnlyCollectionInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyCollection<int?>>(),
                                 Child1ReadOnlyCollectionInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 Child1ReadOnlyCollectionInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 Child1ReadOnlyCollectionInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 Child1ReadOnlyCollectionInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPublicSetReadOnlyCollectionOfNullableChild2
                             {
                                 ParentReadOnlyCollectionInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyCollection<bool?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyCollection<int?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 ParentReadOnlyCollectionInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>(),
                                 Child2ReadOnlyCollectionInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyCollection<bool?>>(),
                                 Child2ReadOnlyCollectionInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyCollection<int?>>(),
                                 Child2ReadOnlyCollectionInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyCollection<Guid?>>(),
                                 Child2ReadOnlyCollectionInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime?>>(),
                                 Child2ReadOnlyCollectionInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum?>>(),
                                 Child2ReadOnlyCollectionInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum?>>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelStringRepresentationPublicSetReadOnlyCollectionOfNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPublicSetReadOnlyCollection
                             {
                                 ReadOnlyCollectionInterfaceOfBoolProperty            = A.Dummy<IReadOnlyCollection<bool>>(),
                                 ReadOnlyCollectionInterfaceOfIntProperty             = A.Dummy<IReadOnlyCollection<int>>(),
                                 ReadOnlyCollectionInterfaceOfStringProperty          = A.Dummy<IReadOnlyCollection<string>>(),
                                 ReadOnlyCollectionInterfaceOfGuidProperty            = A.Dummy<IReadOnlyCollection<Guid>>(),
                                 ReadOnlyCollectionInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 ReadOnlyCollectionInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 ReadOnlyCollectionInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 ReadOnlyCollectionInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyCollection<CustomBaseClass>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPublicSetReadOnlyCollectionChild1
                             {
                                 ParentReadOnlyCollectionInterfaceOfBoolProperty            = A.Dummy<IReadOnlyCollection<bool>>(),
                                 ParentReadOnlyCollectionInterfaceOfIntProperty             = A.Dummy<IReadOnlyCollection<int>>(),
                                 ParentReadOnlyCollectionInterfaceOfStringProperty          = A.Dummy<IReadOnlyCollection<string>>(),
                                 ParentReadOnlyCollectionInterfaceOfGuidProperty            = A.Dummy<IReadOnlyCollection<Guid>>(),
                                 ParentReadOnlyCollectionInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 ParentReadOnlyCollectionInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 ParentReadOnlyCollectionInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyCollection<CustomBaseClass>>(),
                                 Child1ReadOnlyCollectionInterfaceOfBoolProperty            = A.Dummy<IReadOnlyCollection<bool>>(),
                                 Child1ReadOnlyCollectionInterfaceOfIntProperty             = A.Dummy<IReadOnlyCollection<int>>(),
                                 Child1ReadOnlyCollectionInterfaceOfStringProperty          = A.Dummy<IReadOnlyCollection<string>>(),
                                 Child1ReadOnlyCollectionInterfaceOfGuidProperty            = A.Dummy<IReadOnlyCollection<Guid>>(),
                                 Child1ReadOnlyCollectionInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 Child1ReadOnlyCollectionInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyCollection<CustomBaseClass>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPublicSetReadOnlyCollectionChild2
                             {
                                 ParentReadOnlyCollectionInterfaceOfBoolProperty            = A.Dummy<IReadOnlyCollection<bool>>(),
                                 ParentReadOnlyCollectionInterfaceOfIntProperty             = A.Dummy<IReadOnlyCollection<int>>(),
                                 ParentReadOnlyCollectionInterfaceOfStringProperty          = A.Dummy<IReadOnlyCollection<string>>(),
                                 ParentReadOnlyCollectionInterfaceOfGuidProperty            = A.Dummy<IReadOnlyCollection<Guid>>(),
                                 ParentReadOnlyCollectionInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 ParentReadOnlyCollectionInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 ParentReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 ParentReadOnlyCollectionInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 ParentReadOnlyCollectionInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyCollection<CustomBaseClass>>(),
                                 Child2ReadOnlyCollectionInterfaceOfBoolProperty            = A.Dummy<IReadOnlyCollection<bool>>(),
                                 Child2ReadOnlyCollectionInterfaceOfIntProperty             = A.Dummy<IReadOnlyCollection<int>>(),
                                 Child2ReadOnlyCollectionInterfaceOfStringProperty          = A.Dummy<IReadOnlyCollection<string>>(),
                                 Child2ReadOnlyCollectionInterfaceOfGuidProperty            = A.Dummy<IReadOnlyCollection<Guid>>(),
                                 Child2ReadOnlyCollectionInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyCollection<DateTime>>(),
                                 Child2ReadOnlyCollectionInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyCollection<CustomEnum>>(),
                                 Child2ReadOnlyCollectionInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyCollection<CustomFlagsEnum>>(),
                                 Child2ReadOnlyCollectionInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyCollection<CustomClass>>(),
                                 Child2ReadOnlyCollectionInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyCollection<CustomBaseClass>>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelStringRepresentationPublicSetReadOnlyCollectionParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPublicSetReadOnlyDictionaryOfNullable
                             {
                                 ReadOnlyDictionaryInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 ReadOnlyDictionaryInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 ReadOnlyDictionaryInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 ReadOnlyDictionaryInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 ReadOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPublicSetReadOnlyDictionaryOfNullableChild1
                             {
                                 ParentReadOnlyDictionaryInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 ParentReadOnlyDictionaryInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 ParentReadOnlyDictionaryInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 ParentReadOnlyDictionaryInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 ParentReadOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPublicSetReadOnlyDictionaryOfNullableChild2
                             {
                                 ParentReadOnlyDictionaryInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 ParentReadOnlyDictionaryInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 ParentReadOnlyDictionaryInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 ParentReadOnlyDictionaryInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 ParentReadOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyDictionary<bool?, bool?>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyDictionary<int?, int?>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid?, Guid?>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum?, CustomEnum?>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum?, CustomFlagsEnum?>>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelStringRepresentationPublicSetReadOnlyDictionaryOfNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPublicSetReadOnlyDictionary
                             {
                                 ReadOnlyDictionaryInterfaceOfBoolProperty            = A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 ReadOnlyDictionaryInterfaceOfIntProperty             = A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 ReadOnlyDictionaryInterfaceOfStringProperty          = A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 ReadOnlyDictionaryInterfaceOfGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 ReadOnlyDictionaryInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 ReadOnlyDictionaryInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 ReadOnlyDictionaryInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 ReadOnlyDictionaryInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPublicSetReadOnlyDictionaryChild1
                             {
                                 ParentReadOnlyDictionaryInterfaceOfBoolProperty            = A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 ParentReadOnlyDictionaryInterfaceOfIntProperty             = A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 ParentReadOnlyDictionaryInterfaceOfStringProperty          = A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 ParentReadOnlyDictionaryInterfaceOfGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfBoolProperty            = A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfIntProperty             = A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfStringProperty          = A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 Child1ReadOnlyDictionaryInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPublicSetReadOnlyDictionaryChild2
                             {
                                 ParentReadOnlyDictionaryInterfaceOfBoolProperty            = A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 ParentReadOnlyDictionaryInterfaceOfIntProperty             = A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 ParentReadOnlyDictionaryInterfaceOfStringProperty          = A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 ParentReadOnlyDictionaryInterfaceOfGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 ParentReadOnlyDictionaryInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfBoolProperty            = A.Dummy<IReadOnlyDictionary<bool, bool>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfIntProperty             = A.Dummy<IReadOnlyDictionary<int, int>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfStringProperty          = A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfGuidProperty            = A.Dummy<IReadOnlyDictionary<Guid, Guid>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyDictionary<CustomEnum, CustomEnum>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyDictionary<CustomFlagsEnum, CustomFlagsEnum>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyDictionary<CustomClass, CustomClass>>(),
                                 Child2ReadOnlyDictionaryInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyDictionary<CustomBaseClass, CustomBaseClass>>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelStringRepresentationPublicSetReadOnlyDictionaryParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPublicSetReadOnlyListOfNullable
                             {
                                 ReadOnlyListInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyList<bool?>>(),
                                 ReadOnlyListInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyList<int?>>(),
                                 ReadOnlyListInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyList<Guid?>>(),
                                 ReadOnlyListInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime?>>(),
                                 ReadOnlyListInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 ReadOnlyListInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum?>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPublicSetReadOnlyListOfNullableChild1
                             {
                                 ParentReadOnlyListInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyList<bool?>>(),
                                 ParentReadOnlyListInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyList<int?>>(),
                                 ParentReadOnlyListInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyList<Guid?>>(),
                                 ParentReadOnlyListInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime?>>(),
                                 ParentReadOnlyListInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 ParentReadOnlyListInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum?>>(),
                                 Child1ReadOnlyListInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyList<bool?>>(),
                                 Child1ReadOnlyListInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyList<int?>>(),
                                 Child1ReadOnlyListInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyList<Guid?>>(),
                                 Child1ReadOnlyListInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime?>>(),
                                 Child1ReadOnlyListInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 Child1ReadOnlyListInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum?>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPublicSetReadOnlyListOfNullableChild2
                             {
                                 ParentReadOnlyListInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyList<bool?>>(),
                                 ParentReadOnlyListInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyList<int?>>(),
                                 ParentReadOnlyListInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyList<Guid?>>(),
                                 ParentReadOnlyListInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime?>>(),
                                 ParentReadOnlyListInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 ParentReadOnlyListInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum?>>(),
                                 Child2ReadOnlyListInterfaceOfNullableBoolProperty            = A.Dummy<IReadOnlyList<bool?>>(),
                                 Child2ReadOnlyListInterfaceOfNullableIntProperty             = A.Dummy<IReadOnlyList<int?>>(),
                                 Child2ReadOnlyListInterfaceOfNullableGuidProperty            = A.Dummy<IReadOnlyList<Guid?>>(),
                                 Child2ReadOnlyListInterfaceOfNullableDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime?>>(),
                                 Child2ReadOnlyListInterfaceOfNullableCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum?>>(),
                                 Child2ReadOnlyListInterfaceOfNullableCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum?>>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelStringRepresentationPublicSetReadOnlyListOfNullableParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPublicSetReadOnlyList
                             {
                                 ReadOnlyListInterfaceOfBoolProperty            = A.Dummy<IReadOnlyList<bool>>(),
                                 ReadOnlyListInterfaceOfIntProperty             = A.Dummy<IReadOnlyList<int>>(),
                                 ReadOnlyListInterfaceOfStringProperty          = A.Dummy<IReadOnlyList<string>>(),
                                 ReadOnlyListInterfaceOfGuidProperty            = A.Dummy<IReadOnlyList<Guid>>(),
                                 ReadOnlyListInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime>>(),
                                 ReadOnlyListInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 ReadOnlyListInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 ReadOnlyListInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyList<CustomClass>>(),
                                 ReadOnlyListInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyList<CustomBaseClass>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPublicSetReadOnlyListChild1
                             {
                                 ParentReadOnlyListInterfaceOfBoolProperty            = A.Dummy<IReadOnlyList<bool>>(),
                                 ParentReadOnlyListInterfaceOfIntProperty             = A.Dummy<IReadOnlyList<int>>(),
                                 ParentReadOnlyListInterfaceOfStringProperty          = A.Dummy<IReadOnlyList<string>>(),
                                 ParentReadOnlyListInterfaceOfGuidProperty            = A.Dummy<IReadOnlyList<Guid>>(),
                                 ParentReadOnlyListInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime>>(),
                                 ParentReadOnlyListInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 ParentReadOnlyListInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyList<CustomClass>>(),
                                 ParentReadOnlyListInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyList<CustomBaseClass>>(),
                                 Child1ReadOnlyListInterfaceOfBoolProperty            = A.Dummy<IReadOnlyList<bool>>(),
                                 Child1ReadOnlyListInterfaceOfIntProperty             = A.Dummy<IReadOnlyList<int>>(),
                                 Child1ReadOnlyListInterfaceOfStringProperty          = A.Dummy<IReadOnlyList<string>>(),
                                 Child1ReadOnlyListInterfaceOfGuidProperty            = A.Dummy<IReadOnlyList<Guid>>(),
                                 Child1ReadOnlyListInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime>>(),
                                 Child1ReadOnlyListInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 Child1ReadOnlyListInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 Child1ReadOnlyListInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyList<CustomClass>>(),
                                 Child1ReadOnlyListInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyList<CustomBaseClass>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelStringRepresentationPublicSetReadOnlyListChild2
                             {
                                 ParentReadOnlyListInterfaceOfBoolProperty            = A.Dummy<IReadOnlyList<bool>>(),
                                 ParentReadOnlyListInterfaceOfIntProperty             = A.Dummy<IReadOnlyList<int>>(),
                                 ParentReadOnlyListInterfaceOfStringProperty          = A.Dummy<IReadOnlyList<string>>(),
                                 ParentReadOnlyListInterfaceOfGuidProperty            = A.Dummy<IReadOnlyList<Guid>>(),
                                 ParentReadOnlyListInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime>>(),
                                 ParentReadOnlyListInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 ParentReadOnlyListInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 ParentReadOnlyListInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyList<CustomClass>>(),
                                 ParentReadOnlyListInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyList<CustomBaseClass>>(),
                                 Child2ReadOnlyListInterfaceOfBoolProperty            = A.Dummy<IReadOnlyList<bool>>(),
                                 Child2ReadOnlyListInterfaceOfIntProperty             = A.Dummy<IReadOnlyList<int>>(),
                                 Child2ReadOnlyListInterfaceOfStringProperty          = A.Dummy<IReadOnlyList<string>>(),
                                 Child2ReadOnlyListInterfaceOfGuidProperty            = A.Dummy<IReadOnlyList<Guid>>(),
                                 Child2ReadOnlyListInterfaceOfDateTimeProperty        = A.Dummy<IReadOnlyList<DateTime>>(),
                                 Child2ReadOnlyListInterfaceOfCustomEnumProperty      = A.Dummy<IReadOnlyList<CustomEnum>>(),
                                 Child2ReadOnlyListInterfaceOfCustomFlagsEnumProperty = A.Dummy<IReadOnlyList<CustomFlagsEnum>>(),
                                 Child2ReadOnlyListInterfaceOfCustomClassProperty     = A.Dummy<IReadOnlyList<CustomClass>>(),
                                 Child2ReadOnlyListInterfaceOfCustomBaseClassProperty = A.Dummy<IReadOnlyList<CustomBaseClass>>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelStringRepresentationPublicSetReadOnlyListParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelPrivateSetMultipleConstructors(
                                 A.Dummy<int>(),
                                 A.Dummy<string>(),
                                 A.Dummy<IReadOnlyCollection<string>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelPrivateSetMultipleConstructorsChild1(
                                 A.Dummy<int>(),
                                 A.Dummy<string>(),
                                 A.Dummy<IReadOnlyCollection<string>>(),
                                 A.Dummy<int>(),
                                 A.Dummy<string>(),
                                 A.Dummy<IReadOnlyCollection<string>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelPrivateSetMultipleConstructorsChild2(
                                 A.Dummy<int>(),
                                 A.Dummy<string>(),
                                 A.Dummy<IReadOnlyCollection<string>>(),
                                 A.Dummy<int>(),
                                 A.Dummy<string>(),
                                 A.Dummy<IReadOnlyCollection<string>>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelPrivateSetMultipleConstructorsParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelPrivateSetMultilevelGrandchild2B(
                                 A.Dummy<int>(),
                                 A.Dummy<int>(),
                                 A.Dummy<int>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelPrivateSetMultilevelGrandchild2A(
                                 A.Dummy<int>(),
                                 A.Dummy<int>(),
                                 A.Dummy<int>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelPrivateSetMultilevelGrandchild1B(
                                 A.Dummy<int>(),
                                 A.Dummy<int>(),
                                 A.Dummy<int>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelPrivateSetMultilevelGrandchild1A(
                                 A.Dummy<int>(),
                                 A.Dummy<int>(),
                                 A.Dummy<int>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelPrivateSetMultilevelChild2>();


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelPrivateSetMultilevelChild1>();


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelPrivateSetMultilevelParent>();


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelPublicSetMultilevelChild1>();


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelPublicSetMultilevelChild2>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelPublicSetMultilevelGrandchild1A
                             {
                                 ParentInt       = A.Dummy<int>(),
                                 Child1Int       = A.Dummy<int>(),
                                 Grandchild1AInt = A.Dummy<int>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelPublicSetMultilevelGrandchild1B
                             {
                                 ParentInt       = A.Dummy<int>(),
                                 Child1Int       = A.Dummy<int>(),
                                 Grandchild1BInt = A.Dummy<int>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelPublicSetMultilevelGrandchild2A
                             {
                                 ParentInt       = A.Dummy<int>(),
                                 Child2Int       = A.Dummy<int>(),
                                 Grandchild2AInt = A.Dummy<int>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelPublicSetMultilevelGrandchild2B
                             {
                                 ParentInt       = A.Dummy<int>(),
                                 Child2Int       = A.Dummy<int>(),
                                 Grandchild2BInt = A.Dummy<int>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelPublicSetMultilevelParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelPrivateSetEmpty());

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelPrivateSetEmptyParentEmptyChild());

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelPrivateSetNotEmptyParentEmptyChild(
                                 A.Dummy<IReadOnlyDictionary<string, string>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelPrivateSetEmptyParentNotEmptyChild(
                                 A.Dummy<IReadOnlyDictionary<string, string>>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelPrivateSetNotEmptyParent>();


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelPrivateSetEmptyParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelPublicSetEmpty());


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelPublicSetEmptyParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelPublicSetEmptyParentEmptyChild());

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelPublicSetEmptyParentNotEmptyChild
                             {
                                 ChildReadOnlyDictionaryOfStringString = A.Dummy<IReadOnlyDictionary<string, string>>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelPublicSetNotEmptyParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelPublicSetNotEmptyParentEmptyChild
                             {
                                 ParentReadOnlyDictionaryOfStringString = A.Dummy<IReadOnlyDictionary<string, string>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelPrivateSetExpressionBody(
                                 A.Dummy<int>(),
                                 A.Dummy<string>(),
                                 A.Dummy<IReadOnlyCollection<string>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelPrivateSetExpressionBodyChild1(
                                 A.Dummy<int>(),
                                 A.Dummy<string>(),
                                 A.Dummy<IReadOnlyCollection<string>>(),
                                 A.Dummy<int>(),
                                 A.Dummy<string>(),
                                 A.Dummy<IReadOnlyCollection<string>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelPrivateSetExpressionBodyChild2(
                                 A.Dummy<int>(),
                                 A.Dummy<string>(),
                                 A.Dummy<IReadOnlyCollection<string>>(),
                                 A.Dummy<int>(),
                                 A.Dummy<string>(),
                                 A.Dummy<IReadOnlyCollection<string>>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelPrivateSetExpressionBodyParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelPublicSetExpressionBody
                             {
                                 IntProperty                        = A.Dummy<int>(),
                                 StringProperty                     = A.Dummy<string>(),
                                 ReadOnlyCollectionOfStringProperty = A.Dummy<IReadOnlyCollection<string>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelPublicSetExpressionBodyChild1
                             {
                                 ParentIntProperty                        = A.Dummy<int>(),
                                 ParentStringProperty                     = A.Dummy<string>(),
                                 ParentReadOnlyCollectionOfStringProperty = A.Dummy<IReadOnlyCollection<string>>(),
                                 ChildIntProperty                         = A.Dummy<int>(),
                                 ChildStringProperty                      = A.Dummy<string>(),
                                 ChildReadOnlyCollectionOfStringProperty  = A.Dummy<IReadOnlyCollection<string>>(),
                             });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelPublicSetExpressionBodyChild2
                             {
                                 ParentIntProperty                        = A.Dummy<int>(),
                                 ParentStringProperty                     = A.Dummy<string>(),
                                 ParentReadOnlyCollectionOfStringProperty = A.Dummy<IReadOnlyCollection<string>>(),
                                 ChildIntProperty                         = A.Dummy<int>(),
                                 ChildStringProperty                      = A.Dummy<string>(),
                                 ChildReadOnlyCollectionOfStringProperty  = A.Dummy<IReadOnlyCollection<string>>(),
                             });


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelPublicSetExpressionBodyParent>();

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelPrivateSetConstructorMissingPropertyChild1(
                                 A.Dummy<IReadOnlyCollection<string>>(),
                                 A.Dummy<IReadOnlyCollection<string>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelPrivateSetConstructorMissingPropertyChild3(
                                 A.Dummy<CustomEnum>(),
                                 A.Dummy<IReadOnlyCollection<string>>(),
                                 A.Dummy<int>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModelPrivateSetConstructorMissingPropertyChild2(
                                 A.Dummy<IReadOnlyCollection<string>>(),
                                 A.Dummy<CustomClass>()));


            AutoFixtureBackedDummyFactory.UseRandomConcreteSubclassForDummy<ModelPrivateSetConstructorMissingPropertyParent>();
        }

        /// <inheritdoc />
        public Priority Priority => new FakeItEasy.Priority(1);

        /// <inheritdoc />
        public bool CanCreate(Type type)
        {
            return false;
        }

        /// <inheritdoc />
        public object Create(Type type)
        {
            return null;
        }
    }
}