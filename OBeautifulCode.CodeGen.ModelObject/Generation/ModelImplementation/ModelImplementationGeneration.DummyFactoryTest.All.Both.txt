// --------------------------------------------------------------------------------------------------------------------
// <auto-generated>
//   Generated using [code-gen-assembly-name-here] ([code-gen-assembly-version-here])
// </auto-generated>
// --------------------------------------------------------------------------------------------------------------------

namespace [dummy-factory-type-namespace-here]
{
    using FakeItEasy;
    
    using OBeautifulCode.Assertion.Recipes;

    using Xunit;

    public static partial class [dummy-factory-type-name-here]Test
    {
        [Fact]
        public static void [dummy-factory-type-name-here]___Should_derive_from_Default[dummy-factory-type-name-here]___When_reflecting()
        {
            // Arrange
            var dummyFactoryType = typeof([dummy-factory-type-name-here]);

            var defaultDummyFactoryType = typeof(Default[dummy-factory-type-name-here]);

            // Act, Assert
            defaultDummyFactoryType.GetInterface(nameof(IDummyFactory)).AsTest().Must().NotBeNull();

            dummyFactoryType.BaseType.AsTest().Must().BeEqualTo(defaultDummyFactoryType);
        }
    }
}