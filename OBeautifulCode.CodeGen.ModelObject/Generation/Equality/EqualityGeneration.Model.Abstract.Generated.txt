        /// <summary>
        /// Determines whether two objects of type <see cref="[model-type-name-in-xml-doc-here]"/> are equal.
        /// </summary>
        /// <param name="left">The object to the left of the equality operator.</param>
        /// <param name="right">The object to the right of the equality operator.</param>
        /// <returns>true if the two items are equal; otherwise false.</returns>
        public static bool operator ==([model-type-name-in-code-here] left, [model-type-name-in-code-here] right)
        {
            if (ReferenceEquals(left, right))
            {
                return true;
            }

            if (ReferenceEquals(left, null) || ReferenceEquals(right, null))
            {
                return false;
            }

            var result = left.Equals((object)right);

            return result;
        }

        /// <summary>
        /// Determines whether two objects of type <see cref="[model-type-name-in-xml-doc-here]"/> are not equal.
        /// </summary>
        /// <param name="left">The object to the left of the equality operator.</param>
        /// <param name="right">The object to the right of the equality operator.</param>
        /// <returns>true if the two items are not equal; otherwise false.</returns>
        public static bool operator !=([model-type-name-in-code-here] left, [model-type-name-in-code-here] right) => !(left == right);

        /// <inheritdoc />
        public bool Equals([model-type-name-in-code-here] other) => this == other;

        /// <inheritdoc />
        public abstract override bool Equals(object obj);